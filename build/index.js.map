{
  "version": 3,
  "sources": ["empty-module:~/lib/copy.client", "empty-module:./component/SearchString.client", "empty-module:./Reply.client", "empty-module:~/features/Media/AudioPlayer.client", "empty-module:~/features/Media/AudioRecorder.client", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/component/Layout/ErrorPage.tsx", "../app/services/session.server.ts", "../app/services/discourse_sso.server.ts", "../app/constants.ts", "../app/services/discourseApi.ts", "../app/services/db.server.ts", "../app/model/user.ts", "../app/routes/text_.$textId.page.$pageId.translation.$translationId.tsx", "../app/component/Layout/Header.tsx", "../app/locales/useLitteraTranslations.ts", "../app/assets/locale/en.json", "../app/assets/locale/bo.json", "../app/component/UI/MustLoggedIn.tsx", "../app/component/UI/Skeleton.tsx", "../app/component/UI/Spinner.tsx", "../app/component/UI/TextArea.tsx", "../app/component/UI/Avatar.tsx", "../app/lib/copyToClipboard.ts", "../app/lib/fullSearch.server.ts", "../app/lib/getFormatedDate.ts", "../app/lib/index.ts", "../app/lib/containsTIbetanWord.ts", "../app/features/Editor/component/EditorSetting.tsx", "../app/features/Editor/lib/changeFont.ts", "../app/features/Editor/lib/exportDoc.ts", "../app/features/Editor/lib/scrollThreadIntoView.ts", "../app/features/Editor/lib/checkunknown.ts", "../app/states.ts", "../app/features/Media/Image.tsx", "../app/features/Editor/tiptap/component/ToolButton.tsx", "../app/lib/ConvertpToList.ts", "../app/features/Editor/tiptap/component/Tools.tsx", "../app/features/Editor/tiptap/index.ts", "../app/features/Editor/tiptap/tiptap-extension/suggestion.ts", "../app/features/Editor/tiptap/tiptap-extension/postMark.ts", "../app/features/Editor/tiptap/tiptap-extension/searchAndReplace.ts", "../app/features/Editor/tiptap/events.ts", "../app/features/Editor/tiptap/useEditorInstance.tsx", "../app/model/page.ts", "../app/model/userText.ts", "../app/model/translation.ts", "../app/component/hooks/useDebounce.tsx", "../app/features/Editor/component/ExportButton.tsx", "../app/lib/export_docs.ts", "../app/lib/translationhtmlparser.ts", "../app/routes/api.user.preference.theme.tsx", "../app/model/preference.ts", "../app/routes/text.$textId.page.$pageId.tsx", "../app/features/Editor/component/EditorContainer.tsx", "../app/component/UI/Pagination.tsx", "../app/features/Editor/lib/utils.ts", "../app/features/Editor/lib/htmlParser.ts", "../app/features/Editor/component/ImageComponent.tsx", "../app/features/Editor/component/Controls.tsx", "../app/features/Editor/component/EditorMenu.tsx", "../app/component/UI/ButtonGroups.tsx", "../app/features/Editor/index.jsx", "../app/model/suggestion.ts", "../app/model/text.ts", "../app/model/annotation.ts", "../app/component/Layout/TextHeader.tsx", "../app/component/menu/Menu.tsx", "../app/component/menu/MenuHeader.tsx", "../app/component/menu/MenuHome.tsx", "../app/component/menu/TableOfContent.tsx", "../app/component/menu/SearchList.tsx", "../app/component/hooks/searchInstance.tsx", "../app/component/menu/Search.tsx", "../app/component/menu/Translations.tsx", "../app/component/menu/TranslationUploader.tsx", "../app/component/hooks/useTxtUpload.tsx", "../app/lib/formatSize.ts", "../app/features/Post/Post.tsx", "../app/features/Post/Replies.tsx", "../app/features/Post/ReplyForm.tsx", "../app/features/Media/index.tsx", "../app/component/UI/TiptapInstance.tsx", "../app/features/Post/component/FormWithAudio.tsx", "../node_modules/remix-utils/build/react/client-only.js", "../node_modules/remix-utils/build/react/use-hydrated.js", "../app/features/Post/Posts.tsx", "../app/features/Post/Filter.tsx", "../app/features/Post/PostForm.tsx", "../app/features/Post/PostSidebar.tsx", "../app/component/menu/Post.tsx", "../app/features/Suggestion/Suggestion.tsx", "../app/features/Editor/tiptap/markAction.ts", "../app/features/Suggestion/Comment.tsx", "../app/component/hooks/useFetcherPromise.tsx", "../app/features/Suggestion/SuggestionContainer.tsx", "../app/features/Suggestion/SuggestionForm.tsx", "../app/features/Suggestion/index.tsx", "../app/component/menu/Suggestion.tsx", "../app/model/post.ts", "../app/routes/api.suggestion.comment.tsx", "../app/model/suggestionComment.ts", "../app/services/uploadAudio.server.ts", "../app/routes/api.suggestion.like.tsx", "../app/routes/api.translation.tsx", "../app/routes/api.user.search.tsx", "../app/routes/api.suggestion.tsx", "../app/routes/api.reply.$id.tsx", "../app/model/reply.ts", "../app/routes/auth_.login.tsx", "../app/routes/api.reply.tsx", "../app/routes/api.post.tsx", "../app/routes/api.text.tsx", "../app/routes/_index.tsx", "../app/component/Layout/Footer.tsx", "../app/component/Layout/Partner.tsx", "../app/lib/filterVersionFromText.ts", "../app/routes/list.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "module.exports = {};", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from 'node:stream';\n\nimport type { AppLoadContext, EntryContext } from '@remix-run/node';\nimport { createReadableStreamFromReadable } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport isbot from 'isbot';\nimport { renderToPipeableStream } from 'react-dom/server';\n\nconst ABORT_DELAY = 50_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext,\n) {\n  return isbot(request.headers.get('user-agent'))\n    ? handleBotRequest(request, responseStatusCode, responseHeaders, remixContext)\n    : handleBrowserRequest(request, responseStatusCode, responseHeaders, remixContext);\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} abortDelay={ABORT_DELAY} />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} abortDelay={ABORT_DELAY} />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set('Content-Type', 'text/html');\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            }),\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      },\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LoaderFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useNavigation,\n  isRouteErrorResponse,\n  useRouteError,\n  useFetchers } from\n'@remix-run/react';\nimport ErrorPage from './component/Layout/ErrorPage';\nimport { getUserSession } from './services/session.server';\nimport globalStyle from './styles/globalStyle.css';\nimport tailwindStyle from './styles/tailwind.css';\nimport { LitteraProvider } from '@assembless/react-littera';\nimport { RecoilRoot } from 'recoil';\nimport { AnimatePresence } from 'framer-motion';\nimport { getUser } from './model/user';\nimport notificationStyle from 'react-notifications-component/dist/theme.css';\nimport nProgressStyles from 'nprogress/nprogress.css';\nimport { useEffect, useMemo } from 'react';\nimport NProgress from 'nprogress';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport function meta({ matches }) {\n  const rootMeta = matches[0].meta;\n  const title = rootMeta.find((m) => m.title) || 'Lopenling App';\n  return [\n  { title },\n  {\n    name: 'description',\n    content: 'annotation of text and discussion on budhist text'\n  },\n  {\n    name: 'viewport',\n    content: 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'\n  },\n  { property: 'og:title', content: 'Lopenling App' },\n  {\n    name: 'keywords',\n    content: 'Lopenling, Lopen, editor,tibetan,critical text,pecha ,text, lopenling-editor'\n  }];\n\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  let userSession = await getUserSession(request);\n  if (!userSession) return { user: null };\n  let user = await getUser(userSession.username);\n\n  return { user };\n};\nexport function links() {\n  return [\n  {\n    rel: 'icon',\n    href: '/favicon.ico',\n    type: 'image/png'\n  },\n  { rel: 'stylesheet', href: tailwindStyle, as: 'style' },\n  { rel: 'stylesheet', href: globalStyle, as: 'style' },\n  { rel: 'stylesheet', href: notificationStyle, as: 'style' },\n  { rel: 'stylesheet', href: nProgressStyles }];\n\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n\n  if (isRouteErrorResponse(error)) {\n    return (\n      <div>\n        <h1>{error.status}</h1>\n        <ErrorPage message={error.data} />\n      </div>);\n\n  } else if (error instanceof Error) {\n    return (\n      <div>\n        <ErrorPage message={error.message} />\n        <p>The stack trace is:</p>\n        <p>{error.stack}</p>\n      </div>);\n\n  } else {\n    return <h1>Unknown Error</h1>;\n  }\n}\n\nexport default function App() {\n  const data = useLoaderData();\n  const navigation = useNavigation();\n  let fetchers = useFetchers();\n\n  let state = useMemo<'idle' | 'loading'>(\n    function getGlobalState() {\n      let states = [navigation.state, ...fetchers.map((fetcher) => fetcher.state)];\n      if (states.every((state) => state === 'idle')) return 'idle';\n      return 'loading';\n    },\n    [navigation.state, fetchers]\n  );\n  useEffect(() => {\n    if (state === 'loading') NProgress.start();\n    if (state === 'idle') NProgress.done();\n  }, [navigation.state]);\n\n  return (\n    <html className={data.user?.preference?.theme || 'light'}>\n      <head>\n        <meta charSet=\"UTF-8\"></meta>\n        <Meta />\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.5/flowbite.min.css\" rel=\"stylesheet\" />\n        <Links />\n      </head>\n      <body className=\"relative max-h-[100vh] max-w-[100vw] overflow-x-hidden  scrollbar-thin scrollbar-track-gray-100 scrollbar-thumb-gray-900 dark:bg-gray-600 dark:text-white\">\n        <LitteraProvider locales={['en_US', 'bo_TI']}>\n          <AnimatePresence mode=\"wait\" initial={false}>\n            <RecoilRoot>\n              <Outlet context={{ user: data.user }} />\n            </RecoilRoot>\n          </AnimatePresence>\n        </LitteraProvider>\n        <Toaster />\n        <ScrollRestoration getKey={(location) => location.pathname} />\n        <LiveReload />\n        <Scripts />\n      </body>\n    </html>);\n\n}", "import { Link } from '@remix-run/react';\n\ntype error = { message: string };\nexport default function ErrorPage({ message }: error) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <p className=\"mb-4 text-gray-700\">{message}</p>\n      <a\n        href=\"/\"\n        style={{ textDecoration: 'none', marginLeft: 10 }}\n        className=\" rounded bg-red-500 px-4 py-2 font-bold text-white no-underline hover:bg-red-600\"\n      >\n        [Home page]\n      </a>\n      <img\n        src=\"https://st.depositphotos.com/1006899/2650/i/600/depositphotos_26505551-stock-photo-error-metaphor.jpg\"\n        alt=\"errorMessage\"\n      />\n    </div>\n  );\n}\n", "import { redirect } from '@remix-run/server-runtime';\nimport { redirectDiscourse } from '~/services/discourse_sso.server';\n// import {\n//   createCookie,\n//   createCloudflareKVSessionStorage,\n// } from \"@remix-run/cloudflare\";\nimport { createCookieSessionStorage } from '@remix-run/node';\nimport { logout } from './discourseApi';\n\nconst { getSession, commitSession, destroySession } = createCookieSessionStorage({\n  // a Cookie from `createCookie` or the CookieOptions to create one\n  cookie: {\n    // Expires can also be set (although maxAge overrides it when used in combination).\n    // Note that this method is NOT recommended as `new Date` creates only one date on each server deployment, not a dynamic date in the future!\n    //\n    // expires: new Date(Date.now() + 60_000),\n    secrets: ['r3m1xr0ck5'],\n    sameSite: 'lax',\n    maxAge: 43200, // this is half day in sec\n    secure: true,\n  },\n});\n\nexport async function getUserSession(request: Request) {\n  const session = await getSession(request.headers.get('Cookie'));\n  let user = session.get('user');\n  return user;\n}\n\nexport async function destroyUserSession(request: Request) {\n  const session = await getSession(request.headers.get('Cookie'));\n  let external_id = session.get('user').external_id;\n  let discourse = await logout(external_id);\n  if (discourse?.status === 200) {\n    return await destroySession(session, { sameSite: 'lax' });\n  }\n  return null;\n}\n\nexport async function login(request: Request, next: any, redirectTo: string) {\n  let session = await getSession(request.headers.get('Cookie'));\n  const user = session.get('user');\n  if (!user) {\n    let url = await redirectDiscourse(request.url);\n    session.set('success-redirect', { redirectTo });\n    const headers = {\n      'set-cookie': await commitSession(session, { sameSite: 'lax' }),\n    };\n    return redirect(url, { headers });\n  }\n  return next(session);\n}\n\nexport { getSession, commitSession, destroySession };\n", "import { getSession } from '~/services/session.server';\nvar CryptoJS = require('crypto-js');\n\nfunction randomString(length) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\n\nasync function getNonce() {\n  let nonce;\n  let session = await getSession();\n  if (session.has('sso_nonce')) {\n    nonce = session.get('sso_nonce');\n  } else {\n    nonce = randomString(32);\n    session.set('sso_nonce', nonce);\n  }\n  return nonce;\n}\n\nexport let redirectDiscourse = async function (sso_redirect: string) {\n  let url = process.env.DISCOURSE_SSO_LOGIN_URL;\n  let nonce = await getNonce();\n  let return_url = sso_redirect;\n  let payload = `nonce=${nonce}&return_sso_url=${return_url}`;\n  let payloadBase64 = btoa(payload);\n  var encoder = new TextEncoder();\n  var encodedText = encoder.encode(payloadBase64);\n  var decodedText = new TextDecoder().decode(encodedText);\n\n  var hmac = CryptoJS.HmacSHA256(decodedText, process.env.DISCOURSE_API_KEY);\n  var hexDigest = CryptoJS.enc.Hex.stringify(hmac);\n  var signature = hexDigest;\n\n  let qs = new URLSearchParams({\n    sso: payloadBase64,\n    sig: signature,\n  }).toString();\n  url = url + '?' + qs;\n  return url;\n};\n", "export const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_SIZE_MOBILE = 16;\nexport const MAX_WIDTH_PAGE = 1190;\nexport const MAX_CATEGORY_NAME_LENGTH = 40;\n\nexport const HEADER_HEIGHT = 56;\nexport const RIGHT_SIDEBAR_WIDTH = 400;\nexport const LEFT_SIDEBAR_WIDTH = 272;\n\nexport const ForumLink = 'https://forum.lopenling.org';\n\nexport type languageOptionsType = 'FR' | 'BO' | 'EN';\nexport const LANGUAGE_OPTION_TRANSLATION = ['FR', 'BO', 'EN'];\n", "import { MAX_CATEGORY_NAME_LENGTH } from '~/constants';\nclass DiscourseApi {\n  DiscourseUrl: string;\n  apiKey: string;\n  username: string;\n  category: string | undefined;\n  categoryName: string | undefined;\n  origin: string | undefined;\n  constructor(username: string = '') {\n    if (!process.env.DISCOURSE_API_KEY || !process.env.DISCOURSE_SITE) throw new Error('asign api and url  in env');\n\n    this.DiscourseUrl = process.env.DISCOURSE_SITE;\n    this.apiKey = process.env.DISCOURSE_API_KEY;\n    this.username = username;\n    this.category = process.env.DISCOURSE_QA_CATEGORY_ID;\n    this.categoryName = process.env.DISCOURSE_QA_CATEGORY_NAME;\n    this.origin = process.env.ORIGIN_LOCATION;\n  }\n\n  authHeader(admin = false) {\n    let auth_headers = {\n      'Api-Key': this.apiKey,\n      'Api-Username': admin ? 'tenkus47' : this.username,\n    };\n    return auth_headers;\n  }\n  async fetchCategoryData() {\n    let url = `${this.DiscourseUrl}/c/${this.categoryName}/${this.category}.json`;\n    try {\n      const res = await fetch(url);\n      return await res.json();\n    } catch (e) {\n      throw new Error('discource category Api not working, check if the disource forum works properly');\n    }\n  }\n  async fetchCategoryList(id: string | undefined) {\n    const res = await fetch(`${this.DiscourseUrl}/categories.json?include_subcategories=true`);\n    const categories = await res.json();\n    const filterCategory = categories?.category_list.categories.find((category) => category?.id === parseInt(id));\n    if (!filterCategory.subcategory_ids.length) return null;\n    return filterCategory.subcategory_list;\n  }\n  async fetchposts(topicId: number) {\n    if (topicId) {\n      console.log(topicId);\n      const res = await fetch(`${this.DiscourseUrl}/t/${topicId}/posts.json`);\n      if (res.status !== 200) {\n        return {};\n      }\n      const data = await res.json();\n      return data;\n    }\n  }\n  async fetchPostReplies(postId: number) {\n    if (postId) {\n      const res = await fetch(`${this.DiscourseUrl}/posts/${postId}/replies.json`);\n      const data = await res.json();\n      return data;\n    }\n  }\n  async addCategory(categoryName: string, parent_category_id: number) {\n    let authHeaders = this.authHeader(true);\n    var randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n    let newCategoryData = {\n      name: categoryName.trim(),\n      color: randomColor(),\n      text_color: randomColor(),\n      parent_category_id,\n    };\n    let queryParams = new URLSearchParams(newCategoryData).toString();\n    try {\n      const response = await fetch(`${this.DiscourseUrl}/categories.json?` + queryParams, {\n        method: 'POST',\n        headers: authHeaders,\n      });\n      let category = await response.json();\n      return category;\n    } catch (e) {\n      console.error('Failed to create category:', e);\n      throw e;\n    }\n  }\n  async addTopic(\n    threadId: string,\n    category_id: number,\n    topic_name: string | FormDataEntryValue,\n    bodyContent: string,\n    textId: number,\n    order: number,\n    audioUrl: string | null,\n  ) {\n    let auth_headers = this.authHeader();\n    let url = `${this.origin}/text/${textId}/page/${order}/posts?thread=${threadId}`;\n    let TopicWithLink = addLinktoQuestion(topic_name, url);\n    let post_text = `\n<p>\n<blockquote>${TopicWithLink}</blockquote>\n${bodyContent}</p>\n`;\n    if (audioUrl && audioUrl !== '') {\n      post_text += `<audio controls><source src=\"${audioUrl}\" type=\"audio/webm\"></audio>`;\n    }\n\n    let new_Topic_data = {\n      title: (topic_name + '-' + textId) as string,\n      category: category_id,\n      raw: post_text,\n    };\n    let queryParams = new URLSearchParams(new_Topic_data).toString();\n    const response = await fetch(`${this.DiscourseUrl}/posts.json?${queryParams}`, {\n      method: 'POST',\n      headers: auth_headers,\n    });\n    let data = await response.json();\n    if (data?.errors) {\n      throw new Error('Post cannot be created due to dublication!' + data.errors);\n    }\n    return data;\n  }\n\n  async createPost(TopicId: string, postString: string, audioUrl: string | null) {\n    let auth_headers = this.authHeader();\n    let audioSegment = audioUrl\n      ? `<audio controls id='audio_lopenling'>\n  <source src=\"${audioUrl}\" type=\"audio/wav\">\n</audio>`\n      : '';\n    let raw = `<p>\n    ${postString + audioSegment}\n    </p>\n    `;\n    try {\n      let newPostData = {\n        topic_id: TopicId,\n        raw: raw,\n        reply_to_post_number: 1,\n      };\n      let params = new URLSearchParams(newPostData).toString();\n\n      const response = await fetch(`${this.DiscourseUrl}/posts.json?` + params, {\n        method: 'POST',\n        headers: auth_headers,\n      });\n      return response;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async updatePost(postId: number, content: string, audioUrl: string | null) {\n    let auth_headers = this.authHeader();\n    let audioSegment = audioUrl\n      ? `<br/><audio controls id='audio_lopenling'>\n  <source src=\"${audioUrl}\" type=\"audio/wav\">\n</audio>`\n      : '';\n    let raw = `<p>\n    ${content + audioSegment}\n    </p>\n    `;\n\n    try {\n      const formData = new FormData();\n      formData.append('post[raw]', raw);\n      formData.append('post[edit_reason]', 'nothing special');\n      const response = await fetch(`${this.DiscourseUrl}/posts/${postId}.json?`, {\n        method: 'PUT',\n        headers: auth_headers,\n        body: formData,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async deletePost(postId: number) {\n    let auth_headers = this.authHeader();\n\n    try {\n      const response = await fetch(`${this.DiscourseUrl}/posts/${postId}.json`, {\n        method: 'DELETE',\n        headers: auth_headers,\n      });\n      console.log(response);\n      return response.status;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async deleteTopic(id: number) {\n    let auth_headers = this.authHeader();\n    try {\n      const response = await fetch(`${this.DiscourseUrl}/t/${id}.json`, {\n        method: 'DELETE',\n        headers: auth_headers,\n      });\n      return response.status;\n    } catch (e) {\n      throw new Error('cannot delete topic on discourse' + e);\n    }\n  }\n\n  async logout(id: string) {\n    let auth_headers = this.authHeader(true);\n    try {\n      let url = `${this.DiscourseUrl}/admin/users/${id}/log_out`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: auth_headers,\n      });\n      return response;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport async function createThread(\n  userName: string,\n  textTitle: string,\n  blockquoteArea: string,\n  postContent: string,\n  parentCategoryId: string,\n  textId: number,\n  order: number,\n  audioUrl: string | null,\n  threadId: string,\n) {\n  if (!textTitle || !blockquoteArea || !postContent) throw new Error('failed to access Topic Id');\n  const api: DiscourseApi = new DiscourseApi(userName);\n  const categories = await api.fetchCategoryList(parentCategoryId);\n  if (textTitle.length > 40) {\n    textTitle = textTitle.substring(0, MAX_CATEGORY_NAME_LENGTH) + `_text_${textId}`;\n  }\n  let categoryId: number = 0;\n  const category = categories.find((c: any) => c.name === textTitle.trim());\n  if (!category) {\n    const newCategory = await api.addCategory(textTitle, parseInt(parentCategoryId));\n    categoryId = newCategory.category.id;\n  } else {\n    categoryId = category.id;\n  }\n  let topic = await api.addTopic(threadId, categoryId, blockquoteArea, postContent as string, textId, order, audioUrl);\n  return topic;\n}\n\nfunction addLinktoQuestion(question: string | FormDataEntryValue, url: string) {\n  return `<a href=\"${url}\" target='_blank'>${question}</a>`;\n}\nexport async function deleteDiscourseTopic(userName: string, topicId: number) {\n  const apiObj: DiscourseApi = new DiscourseApi(userName);\n  const res = apiObj.deleteTopic(topicId);\n  return res;\n}\n\nexport async function getposts(topicId: number) {\n  const apiObj: DiscourseApi = new DiscourseApi();\n  const res = await apiObj.fetchposts(topicId);\n  return res;\n}\n\nexport async function getpostreplies(topicId: number) {\n  const apiObj: DiscourseApi = new DiscourseApi();\n  const res = apiObj.fetchPostReplies(topicId);\n  return res;\n}\n\nexport async function createPost(topicId: string, audioUrl: string | null, postString: string, username: string) {\n  const apiObj: DiscourseApi = new DiscourseApi(username);\n  const res = apiObj.createPost(topicId, postString, audioUrl);\n  return res;\n}\n\nexport async function updateDiscoursePost(\n  postId: number,\n  newContent: string,\n  audioUrl: string | null,\n  username: string,\n) {\n  const apiObj: DiscourseApi = new DiscourseApi(username);\n  const res = apiObj.updatePost(postId, newContent, audioUrl);\n  return res;\n}\nexport async function deletePost(postId: number, username: string) {\n  const apiObj: DiscourseApi = new DiscourseApi(username);\n  const res = apiObj.deletePost(postId);\n  return res;\n}\n\nexport async function logout(id: string) {\n  const apiObj: DiscourseApi = new DiscourseApi();\n  const res = await apiObj.logout(id);\n  return res;\n}\nexport async function fetchCategoryData() {\n  const apiObj: DiscourseApi = new DiscourseApi();\n  return await apiObj.fetchCategoryData();\n}\n\nexport default DiscourseApi;\n", "import { PrismaClient } from '@prisma/client';\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === 'production') {\n  db = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  db = global.__db__;\n\n  db.$connect();\n}\n\n\nexport { db };\n", "import { User } from '@prisma/client';\nimport { db } from '~/services/db.server';\n\n//find all user\nexport async function getAllUser() {\n  try {\n    let user = await db.user.findMany();\n    return user;\n  } catch (e) {\n    return e;\n  }\n}\nexport async function isUserPresent(username: string) {\n  const user = await db.user.findUnique({\n    where: {\n      username,\n    },\n    include: {\n      likedPost: true,\n      preference: true,\n    },\n  });\n\n  return user;\n}\n\nexport async function getUser(username: string) {\n  try {\n    let user = await db.user.findUnique({\n      where: {\n        username,\n      },\n      include: {\n        likedPost: true,\n        preference: true,\n      },\n    });\n    return user;\n  } catch (e) {\n    return e;\n  }\n}\n\nexport async function createUserInDB(\n  username: string,\n  name: string,\n  email: string,\n  isAdmin: boolean,\n  avatarUrl: string,\n) {\n  try {\n    const newUser = await db.user.create({\n      data: {\n        username,\n        name,\n        email,\n        isAdmin,\n        avatarUrl,\n        preference: {\n          create: {\n            theme: 'light',\n            language: 'en',\n          },\n        },\n      },\n    });\n    return newUser;\n  } catch (e) {\n    return 'user Cannot be created' + e;\n  }\n}\n", "import { ActionFunction, LoaderFunction, json } from '@remix-run/node';\nimport { Link, useFetcher, useLoaderData, useSearchParams } from '@remix-run/react';\nimport { EditorContent, BubbleMenu } from '@tiptap/react';\nimport Header from '~/component/Layout/Header';\nimport Tools from '~/features/Editor/tiptap/component/Tools';\nimport useEditorInstance from '~/features/Editor/tiptap/useEditorInstance';\nimport { getTranslation, updateSourceAndTranslation } from '~/model/translation';\nimport { getUserPage } from '~/model/userText';\nimport { BsShare } from 'react-icons/bs';\nimport { AiFillSave, AiOutlineExport } from 'react-icons/ai';\nimport { Button, Tooltip, Dropdown } from 'flowbite-react';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { db } from '~/services/db.server';\nimport { useEffect, useRef, useState, useCallback } from 'react';\nimport toast from 'react-hot-toast';\nimport { getUserSession } from '~/services/session.server';\nimport { CiRead } from 'react-icons/ci';\nimport { useDebounce } from '~/component/hooks/useDebounce';\nimport { FaEdit } from 'react-icons/fa';\nimport copy from '~/lib/copy.client';\nimport ExportButton from '~/features/Editor/component/ExportButton';\nimport { constructHTML, processHTML } from '~/lib/translationhtmlparser';\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  let textId = params.textId;\n  let order = params.pageId;\n  let translationId = params.translationId as string;\n  let translation = await getTranslation(parseInt(translationId));\n  let userText = await getUserPage(translation?.userTextId);\n  let user = await getUserSession(request);\n\n  return json({\n    user,\n    textId,\n    order,\n    translation,\n    userText,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  let formdata = await request.formData();\n  let sourceContent = formdata.get('sourceContent') as string;\n  let translationContent = formdata.get('translationContent') as string;\n  let sourceAnnotation = JSON.parse(formdata.get('sourceAnnotation') as string);\n  let translationAnnotation = JSON.parse(formdata.get('translationAnnotation') as string);\n\n  let sourceId = formdata.get('sourceId') as string;\n  let translationId = formdata.get('translationId') as string;\n  //text should be longer than 1000 characters\n  try {\n    const [userText, translation] = await updateSourceAndTranslation({\n      sourceContent,\n      sourceAnnotation,\n      sourceId,\n      translationContent,\n      translationAnnotation,\n      translationId,\n    });\n\n    return {\n      userText,\n      translation,\n    };\n  } catch (e) {\n    throw new Error('error ' + e);\n  }\n};\n\nfunction TranslationsRoute() {\n  let { translation, userText, textId, order, user } = useLoaderData();\n\n  let source_editor = useEditorInstance({\n    name: 'userText' + userText.id,\n    content: constructHTML(userText.content, userText.Annotation),\n    isEditable: true,\n    paramUpdate: false,\n  });\n  let translation_editor = useEditorInstance({\n    name: 'translation' + translation.id,\n    content: constructHTML(translation.content, translation.annotation),\n    isEditable: true,\n    paramUpdate: false,\n  });\n\n  let fetcher = useFetcher();\n  let [params, setParams] = useSearchParams();\n  let sectionIndex = params.get('section');\n  let subsectionIndex = params.get('subsection');\n\n  const [prevVisibleIndex, setPrevVisibleIndex] = useState(null);\n  const [prevVisibleElement] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isEditable, setIsEditable] = useState(true);\n\n  let sourceRef = useRef<HTMLDivElement>(null);\n  let translationRef = useRef<HTMLDivElement>(null);\n  let currentDiv = useRef<HTMLDivElement>(null);\n\n  let debounced_Index = useDebounce(currentIndex, 500);\n\n  //  handle scrolling of both divs\n\n  let handleScroll = useCallback(\n    (element) => {\n      const h1Elements = element.querySelectorAll('h1');\n      if (params.get('section') || params.get('subsection')) {\n        setParams((p) => {\n          p.delete('section');\n          p.delete('subsection');\n          return p;\n        });\n      }\n      // Find the index and element of the first visible h1 element\n      const firstVisibleH1 = Array.from(h1Elements).find((h1) => {\n        const h1Rect = h1.getBoundingClientRect();\n        const parentRect = element?.getBoundingClientRect();\n\n        // Check if the h1 element is fully or partially visible within its parent div\n        return h1Rect.top >= parentRect.top && h1Rect.bottom <= parentRect.bottom;\n      });\n\n      // Log the index and element of the first visible h1 if they change\n      if (firstVisibleH1) {\n        const firstVisibleIndex = Array.from(h1Elements).indexOf(firstVisibleH1);\n\n        if (firstVisibleIndex !== prevVisibleIndex || firstVisibleH1 !== prevVisibleElement) {\n          setCurrentIndex(firstVisibleIndex);\n          // Update the previous values\n          setPrevVisibleIndex(firstVisibleIndex);\n        }\n      }\n    },\n    [sourceRef.current],\n  );\n\n  useEffect(() => {\n    let timer;\n    // Add scroll event listener to the sourceRef\n    timer = setTimeout(() => {\n      sourceRef.current?.addEventListener('scroll', () => handleScroll(sourceRef.current));\n      translationRef.current?.addEventListener('scroll', () => handleScroll(translationRef.current));\n    }, 2000);\n    // Clean up the event listener on component unmount\n    return () => {\n      sourceRef.current?.removeEventListener('scroll', () => handleScroll(sourceRef.current));\n      translationRef.current?.removeEventListener('scroll', () => handleScroll(translationRef.current));\n      if (timer) clearTimeout(timer);\n    };\n  }, []);\n\n  // Scroll to the current h1 element when the currentIndex changes\n  useEffect(() => {\n    let transElement = translationRef.current?.querySelectorAll('h1')[currentIndex];\n    let sourceElement = sourceRef.current?.querySelectorAll('h1')[currentIndex];\n    if (transElement && translationRef.current !== currentDiv.current) {\n      transElement?.scrollIntoView({ block: 'center' });\n    }\n\n    if (sourceElement && sourceRef.current !== currentDiv.current) {\n      sourceElement?.scrollIntoView({ block: 'center' });\n    }\n  }, [debounced_Index]);\n\n  // Set the editor to editable or not\n  useEffect(() => {\n    source_editor?.setEditable(isEditable);\n    translation_editor?.setEditable(isEditable);\n  }, [isEditable]);\n\n  // Toast a message when the text is saved\n  useEffect(() => {\n    if (fetcher.data?.userText) {\n      toast('Saved!', {\n        icon: '\uD83D\uDC4F',\n      });\n    }\n  }, [fetcher.data]);\n\n  // Scroll to the section and subsection if the url has the query params\n  useEffect(() => {\n    if (sectionIndex !== null) {\n      currentDiv.current = sourceRef.current;\n      const sections = sourceRef.current?.getElementsByTagName('h1');\n      setTimeout(() => {\n        if (sections && sections.length > 0) {\n          const section = sections[parseInt(sectionIndex) - 1];\n          // Assuming sectionIndex is 1-based\n\n          if (section) {\n            section.scrollIntoView();\n\n            if (subsectionIndex !== null) {\n              const subsections = section.querySelectorAll('li');\n              const subsection = subsections[parseInt(subsectionIndex) - 1]; // Assuming subsectionIndex is 1-based\n              if (subsection) {\n                subsection.scrollIntoView();\n              }\n            }\n          }\n        }\n      }, 3000);\n    }\n  }, [sectionIndex, subsectionIndex, sourceRef.current?.innerHTML]);\n\n  function save() {\n    // let data = parseHeadings(source_editor.getHTML());\n    // console.log(data);\n\n    if (!source_editor || !translation_editor) {\n      toast.error('cannot save!');\n      return;\n    }\n    let sourceContent = source_editor.getHTML();\n    let translationContent = translation_editor.getHTML();\n\n    let source = processHTML(sourceContent);\n    let translationHTML = processHTML(translationContent);\n    // let html = constructHTML(text, annotations);\n    let sourceText = source.text;\n    let sourceAnnotation = source.annotations;\n\n    let translationText = translationHTML.text;\n    let translationAnnotation = translationHTML.annotations;\n\n    if (userText?.userId === user?.id) {\n      fetcher.submit(\n        {\n          sourceContent: sourceText,\n          sourceAnnotation: JSON.stringify(sourceAnnotation),\n          translationContent: translationText,\n          translationAnnotation: JSON.stringify(translationAnnotation),\n          translationId: translation.id,\n          sourceId: userText.id,\n        },\n        {\n          method: 'POST',\n        },\n      );\n    } else {\n      toast.error('You are not the owner of this text');\n    }\n  }\n  function handleChangeCurrentDiv(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    currentDiv.current = e.currentTarget;\n  }\n\n  const isSaving = fetcher.state !== 'idle';\n  if (source_editor === null || translation_editor === null) return <div>loading</div>;\n  return (\n    <div className=\"max-h-screen overflow-y-hidden\">\n      <Header editor={null} />\n      <div className=\"flex justify-between max-w-6xl m-auto my-4\">\n        <Button as={Link} to={`/text/${textId}/page/${order}?with=Translations`} className=\"text-white bg-slate-500\">\n          <IoMdArrowRoundBack />\n          Go to Main Text\n        </Button>\n        <div className=\"flex gap-4\">\n          <Tooltip content=\"share link\" placement=\"bottom\">\n            <Button size={'sm'} className=\"text-white bg-slate-500\" onClick={() => copy(window.location.href)}>\n              <BsShare />\n            </Button>\n          </Tooltip>\n          <Tooltip content=\"edit\" placement=\"bottom\">\n            <Button size={'sm'} className=\"text-white bg-slate-500\" onClick={() => setIsEditable((prev) => !prev)}>\n              {isEditable ? <CiRead /> : <FaEdit />}\n            </Button>\n          </Tooltip>\n          <Tooltip content=\"export as docx\" placement=\"top\">\n            <Dropdown\n              label=\"\"\n              size=\"xs\"\n              dismissOnClick={false}\n              renderTrigger={() => (\n                <Button size=\"sm\" className=\"text-white bg-slate-500\">\n                  <AiOutlineExport />\n                </Button>\n              )}\n            >\n              <Dropdown.Item>\n                <ExportButton editor={source_editor} name=\"Source\" />\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <ExportButton editor={translation_editor} name=\"Translation\" />\n              </Dropdown.Item>\n            </Dropdown>\n          </Tooltip>\n          <Tooltip content=\"save\" placement=\"bottom\">\n            <Button size={'sm'} className=\"text-white bg-slate-500\" onClick={save} isProcessing={isSaving}>\n              {isSaving ? null : <AiFillSave />}\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"flex max-w-6xl gap-3 w-full mx-auto font-monlam\">\n        <div\n          ref={sourceRef}\n          onMouseOver={handleChangeCurrentDiv}\n          className=\"relative flex-1 block p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700 max-h-[80vh] overflow-y-scroll\"\n        >\n          <h2 className=\"text-gray-400\">Source Text</h2>\n          <EditorContent editor={source_editor} />\n          <BubbleMenu editor={source_editor!} shouldShow={({ editor }) => editor?.isFocused && editor.isEditable}>\n            <Tools editor={source_editor} />\n          </BubbleMenu>\n        </div>\n        <div\n          ref={translationRef}\n          onMouseOver={handleChangeCurrentDiv}\n          className=\"relative flex-1 block  p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700 max-h-[80vh] overflow-y-scroll\"\n        >\n          <h2 className=\"text-gray-400\">Translation Text</h2>\n          <EditorContent editor={translation_editor} />\n          <BubbleMenu editor={translation_editor!} shouldShow={({ editor }) => editor.isFocused && editor.isEditable}>\n            <Tools editor={translation_editor} />\n          </BubbleMenu>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TranslationsRoute;\n", "import { Form, Link, NavLink, useFetcher, useLoaderData, useLocation, useOutletContext } from '@remix-run/react';\nimport LogoOnly from '~/assets/logo.png';\nimport { useLitteraMethods } from '@assembless/react-littera';\nimport { useEffect, useState, memo } from 'react';\nimport uselitteraTranlation, { translationCodes } from '~/locales/useLitteraTranslations';\nimport { Editor } from '@tiptap/react';\nimport { ForumLink, HEADER_HEIGHT } from '~/constants';\nimport { Avatar } from '~/component/UI';\nimport { containTibetanletter, isSmallScreen } from '~/lib';\nimport { UserType } from '~/model/type';\nimport { FaSignOutAlt } from 'react-icons/fa';\nimport { AiOutlineTranslation } from 'react-icons/ai';\nimport EditorSetting from '~/features/Editor/component/EditorSetting';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { Dropdown } from 'flowbite-react';\nimport { MdNightlight } from 'react-icons/md';\nimport { CiLight } from 'react-icons/ci';\nimport { IoIosSettings } from 'react-icons/io';\n\nconst LogoWithTextName = ({ textName }: { textName: string }) => {\n  if (textName.length > 20 && isSmallScreen) {\n    textName = textName.slice(0, 25) + '...';\n  }\n  return (\n    <div className=\"flex items-center gap-1\">\n      <Link to=\"/\">\n        <img src={LogoOnly} alt=\"logo\" className=\"block object-contain\" style={{ maxHeight: '37px' }} />\n      </Link>\n      <h1\n        onClick={() => {\n          let editorElement = document.documentElement;\n          editorElement?.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n          });\n        }}\n        style={{ top: containTibetanletter(textName) ? -7 : 0, fontSize: 24 }}\n        className=\"relative ml-2 text-3xl  font-bold \"\n      >\n        {textName}\n      </h1>\n    </div>\n  );\n};\ntype HeaderProps = {\n  editor: Editor | null;\n};\nfunction Header({ editor }: HeaderProps) {\n  const loginFetcher = useFetcher();\n  const themeFetcher = useFetcher();\n  const translation: any = uselitteraTranlation();\n  const { pathname, search } = useLocation();\n  const redirectTo = pathname + search;\n  const [TextNameOnHeader, setTextNameOnHeader] = useState(false);\n  let { user }: { user: UserType } = useOutletContext();\n  let { text } = useLoaderData();\n  const changeTheme = () => {\n    themeFetcher.submit(\n      {\n        theme: user?.preference?.theme !== 'dark' ? 'dark' : 'light',\n      },\n      {\n        action: '/api/user/preference/theme',\n        method: 'POST',\n      },\n    );\n  };\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n    const handleScroll = () => {\n      if (timeout) clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        var scrollTopValue = window.pageYOffset || document.documentElement?.scrollTop || document.body?.scrollTop;\n        const shouldShowTextName = scrollTopValue! > 10 && redirectTo.includes('text');\n        setTextNameOnHeader(shouldShowTextName);\n      }, 10);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window?.addEventListener('scroll', handleScroll);\n  }, [redirectTo]);\n  let darkMode = user?.preference?.theme === 'dark';\n\n  return (\n    <nav\n      className=\"z-50 w-full border-gray-200 bg-white dark:bg-gray-900 \"\n      style={{\n        height: HEADER_HEIGHT,\n        fontFamily: 'serif',\n      }}\n    >\n      <div className=\" mx-auto flex flex-wrap items-center justify-between p-2\">\n        {TextNameOnHeader && text?.name ? (\n          <LogoWithTextName textName={text?.name} />\n        ) : (\n          <NavLink to={'/'} prefetch=\"intent\" className=\"flex w-auto items-center\">\n            <img\n              src={ForumLink + '/uploads/default/original/1X/0ac3db8e589f085c53c5ff8f36c17722888658ad.png'}\n              alt=\"logo\"\n              className=\"block h-8 object-contain p-1 md:p-0\"\n            />\n          </NavLink>\n        )}\n        <div className=\"flex gap-2\">\n          {!user && (\n            <div className=\"flex gap-2\" id=\"user-menu-button\">\n              <a href={ForumLink + '/signup'} id=\"signup\" className=\"loginButton\">\n                {translation.signup}\n              </a>\n              <loginFetcher.Form method=\"POST\" id=\"login\" action=\"/auth/login\" className=\"mr-2 flex items-center\">\n                <input type=\"hidden\" name=\"redirectTo\" defaultValue={redirectTo} />\n                <button type=\"submit\" name=\"_action\" value=\"login\" className=\"loginButton flex items-center gap-1\">\n                  <FaUserAlt />\n                  {translation.login}\n                </button>\n              </loginFetcher.Form>\n            </div>\n          )}\n          {editor && <EditorSetting editor={editor} />}\n\n          {user && (\n            <>\n              <Dropdown\n                label=\"Dropdown button\"\n                dismissOnClick={false}\n                renderTrigger={() => {\n                  return (\n                    <button\n                      type=\"button\"\n                      className=\"rounded-full  text-sm focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600 md:mr-0\"\n                      id=\"user-menu-button\"\n                    >\n                      <span className=\"sr-only\">Open user menu</span>\n                      <Avatar alt={user?.name} img={user?.avatarUrl} rounded={true} title={user?.name} size=\"sm\" />\n                    </button>\n                  );\n                }}\n              >\n                <Dropdown.Header>\n                  <span className=\"block text-sm capitalize\">{user.username}</span>\n                  <a\n                    target={'_self'}\n                    href={ForumLink + `/u/${user?.username}/summary`}\n                    className=\"block truncate text-sm font-medium\"\n                  >\n                    {user.email}\n                  </a>\n                </Dropdown.Header>\n                <Dropdown.Item onClick={changeTheme} icon={darkMode ? CiLight : MdNightlight}>\n                  {darkMode ? 'Light mode' : 'Dark mode'}\n                </Dropdown.Item>\n                <Translation />\n                <Dropdown.Item\n                  as=\"a\"\n                  href={ForumLink + `/u/${user?.username}/preferences/account`}\n                  icon={IoIosSettings}\n                  target=\"_blank\"\n                >\n                  Preferences\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item icon={FaSignOutAlt}>\n                  <Form method=\"POST\" action=\"/auth/login\">\n                    <input type=\"hidden\" name=\"redirectTo\" defaultValue={redirectTo} />\n                    <button className=\" text-sm font-medium leading-tight\" type=\"submit\" name=\"_action\" value=\"logout\">\n                      {translation.logout}\n                    </button>\n                  </Form>\n                </Dropdown.Item>\n              </Dropdown>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n}\nexport function Translation() {\n  const methods = useLitteraMethods();\n  const changeLanguage: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    methods.setLocale(e.target.value);\n  };\n  return (\n    <div className=\"flex  items-center justify-start space-x-0.5 px-4\">\n      <AiOutlineTranslation className=\"mr-2\" />\n      <select\n        onChange={changeLanguage}\n        className=\"border-transparent bg-transparent text-gray-500 focus:border-transparent focus:outline-none  focus:ring-0 focus:ring-gray-100 dark:border-gray-600  dark:bg-transparent dark:text-white dark:focus:ring-gray-700\"\n      >\n        {translationCodes.map((code) => (\n          <option key={code.code} value={code.code} className=\"bg-white dark:bg-slate-600 px-1 py-2 \">\n            {code?.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default memo(Header);\n", "import { useLittera } from '@assembless/react-littera';\nimport en from '~/assets/locale/en.json';\nimport bo from '~/assets/locale/bo.json';\n\ntype translationType = {\n  filter: string;\n};\n\nexport const translationCodes = [\n  { code: 'en_US', name: 'English' },\n  { code: 'bo_TI', name: '\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42' },\n];\n\nexport function translationList() {\n  let translations: translationType = en;\n  for (const key in en) {\n    translations = {\n      ...translations,\n      [key]: {\n        en_US: en[key],\n        bo_TI: bo.hasOwnProperty(key) ? bo[key] : en[key],\n      },\n    };\n  }\n  return translations;\n}\nexport default function uselitteraTranlation() {\n  let translations = translationList();\n  const translation = useLittera(translations);\n  return translation;\n}\n", "{\n  \"language\": \"Language\",\n  \"search\": \"Search\",\n  \"searchText\": \"Search Text\",\n  \"comment\": \"Comment\",\n  \"question\": \"Question\",\n  \"filter\": \"Filter\",\n  \"fontSize\": \"Font size\",\n  \"reply\": \"Reply\",\n  \"replies\": \"Replies\",\n  \"login\": \"log in\",\n  \"signup\": \"sign up\",\n  \"logout\": \"log out\",\n  \"narthang\": \"narthang\",\n  \"peking\": \"peking\",\n  \"chone\": \"chone\",\n  \"derge\": \"derge\"\n}\n", "{\n  \"language\": \"\u0F66\u0F90\u0F51\u0F0B\u0F61\u0F72\u0F42\u0F0B\",\n  \"search\": \"\u0F60\u0F5A\u0F7C\u0F63\u0F0D\",\n  \"searchText\": \"\u0F54\u0F51\u0F0B\u0F46\u0F0B\u0F60\u0F5A\u0F7C\u0F63\u0F0D\",\n  \"comment\": \"\u0F60\u0F42\u0FB2\u0F7A\u0F63\u0F0B\u0F54\u0F0D\",\n  \"question\": \"\u0F51\u0FB2\u0F72\u0F0B\u0F56\u0F0D\",\n  \"filter\": \"\u0F5A\u0F42\u0F66\u0F0D\",\n  \"fontSize\": \"\u0F61\u0F72\u0F42\u0F0B\u0F42\u0F5F\u0F74\u0F42\u0F66\u0F0B\u0F46\u0F7A\u0F0B\u0F46\u0F74\u0F44\u0FB2\u0F0D\",\n  \"reply\": \"\u0F63\u0F53\u0F0D\",\n  \"replies\": \"\u0F63\u0F53\u0F0D\",\n  \"login\": \"\u0F53\u0F44\u0F0B\u0F60\u0F5B\u0F74\u0F63\u0F0D\",\n  \"signup\": \"\u0F50\u0F7C\u0F0B\u0F60\u0F42\u0F7C\u0F51\u0F0D\",\n  \"logout\": \"\u0F55\u0FB1\u0F72\u0F62\u0F0B\u0F50\u0F7C\u0F53\u0F0D\",\n  \"narthang\":\"\u0F66\u0FA3\u0F62\u0F0B\u0F50\u0F44\u0F0C\u0F0D\",\n  \"peking\":\"\u0F54\u0F7A\u0F0B\u0F45\u0F72\u0F53\u0F0D\",\n  \"chone\":\"\u0F46\u0F7C\u0F0B\u0F42\u0F53\u0F66\u0F0D\",\n  \"derge\":\"\u0F66\u0FA1\u0F7A\u0F0B\u0F51\u0F42\u0F7A\"\n}\n", "import { useFetcher, useLocation } from '@remix-run/react';\nimport uselitteraTranlation from '~/locales/useLitteraTranslations';\n\nexport default function LogInMessage() {\n  let loginFetcher = useFetcher();\n  let redirectTo = useLocation().pathname;\n  const translation = uselitteraTranlation();\n\n  return (\n    <div\n      id=\"toast-success\"\n      className=\"mb-4 flex w-full  items-center rounded-lg bg-white p-4 text-gray-500 shadow dark:bg-gray-800 dark:text-gray-400\"\n      role=\"alert\"\n    >\n      <div className=\"inline-flex h-8 w-8 flex-shrink-0 items-center justify-center rounded-lg bg-orange-100 text-orange-500 dark:bg-orange-700 dark:text-orange-200\">\n        <svg\n          aria-hidden=\"true\"\n          className=\"h-5 w-5\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n            clipRule=\"evenodd\"\n          ></path>\n        </svg>\n        <span className=\"sr-only\">Warning icon</span>\n      </div>\n      <loginFetcher.Form\n        method=\"POST\"\n        id=\"login\"\n        action=\"/auth/login\"\n        className=\"ml-3 flex items-center text-sm font-normal\"\n      >\n        <input type=\"hidden\" name=\"redirectTo\" defaultValue={redirectTo} />\n\n        <button\n          type=\"submit\"\n          name=\"_action\"\n          value=\"login\"\n          className=\"text-sm font-medium capitalize leading-tight text-gray-900 dark:text-white\"\n        >\n           {translation.login}\n        </button>\n      </loginFetcher.Form>\n    </div>\n  );\n}\n", "type SkeletonType = {\n  height: number;\n  number: number;\n};\nexport default function Skeleton({ height, number }: SkeletonType) {\n  const items = Array.from({ length: number }, (_, index) => index + 1);\n  return (\n    <div role=\"status\" className=\"flex h-full w-full animate-pulse flex-col \">\n      {items.map((l, index) => {\n        return (\n          <div\n            key={'skeleton' + index}\n            className=\" mb-2.5 block w-full  rounded-sm border border-gray-200 bg-gray-200  shadow  hover:bg-gray-100 dark:border-gray-700  dark:bg-gray-700 dark:hover:bg-gray-700\"\n            style={{ height: height }}\n          ></div>\n        );\n      })}\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n", "export default function Spinner({ color = 'blue', size = 'md' }) {\n  let width = 4;\n  let height = 4;\n  if (size === 'md') {\n    width = 6;\n    height = 6;\n  }\n  return (\n    <div role=\"status\">\n      <svg\n        aria-hidden=\"true\"\n        className={`inline w-${width} h-${height} mr-2 animate-spin text-gray-200 dark:text-gray-600 fill-${color}-600`}\n        viewBox=\"0 0 100 101\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n          fill=\"currentFill\"\n        />\n      </svg>\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n", "import React, { forwardRef, ForwardRefRenderFunction } from 'react';\n\ninterface TextAreaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst TextArea: ForwardRefRenderFunction<HTMLTextAreaElement, TextAreaProps> = (props, ref) => {\n  return (\n    <textarea\n      ref={ref}\n      {...props}\n      className=\"whitespace-pre-wrap block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\"\n    ></textarea>\n  );\n};\n\nexport default forwardRef<HTMLTextAreaElement, TextAreaProps>(TextArea);\n", "interface AvatarType {\n  title: string;\n  alt: string;\n  img: string;\n  rounded: boolean;\n  size: 'sm' | 'md';\n}\n\nexport function Avatar({ title, alt, img, rounded, size }: AvatarType) {\n  let px = 29;\n  switch (size) {\n    case 'sm':\n      px = 29;\n      break;\n    case 'md':\n      px = 40;\n      break;\n  }\n\n  return <img className={`${rounded && 'rounded-full'}`} src={img} alt={alt} title={title}\n  style={{width:px,height:px}} \n  />;\n}\n", "export default function copyToClipboard(text: string) {\n  // create a temporary textarea element to hold the text to copy\n  const textarea = document.createElement('textarea');\n  textarea.value = text;\n\n  // make sure the textarea is in the document and selectable\n  textarea.style.position = 'fixed';\n  textarea.style.opacity = '0';\n  document.body.appendChild(textarea);\n  textarea.select();\n\n  try {\n    // copy the text to the clipboard\n    document.execCommand('copy');\n    console.log('Text copied to clipboard');\n  } catch (err) {\n    console.error('Failed to copy text: ', err);\n  }\n\n  // remove the temporary textarea\n  document.body.removeChild(textarea);\n}\n", "export const fullSearch = (textList, search_term) => {\n  const results = [];\n  const extract_length = 60;\n  const left = parseInt((extract_length - search_term.length) / 2);\n  const delimiters = '\u0F0D\u0F0B ';\n  const delimiter_regex = new RegExp(`[${delimiters}]`, 'g');\n  const max_results = 0;\n\n  for (let text of textList) {\n    const content_length = text.content.length;\n    const textWithNewlines = text.content.replace(/<br\\s*\\/?\\s*(class\\s*=\\s*['\"]\\S*['\"])?\\s*>/gi, '\\n');\n    const content = textWithNewlines.replace(/(<([^>]+)>)/gi, '');\n    const contentMatch = Array.from(content.matchAll(new RegExp(search_term, 'g')));\n    const titleMatch = Array.from(text.text.name.matchAll(new RegExp(search_term, 'g')));\n\n    if (titleMatch.length > 0 || contentMatch.length > 0) {\n      const result = {\n        textId: text.textId,\n        order: text.order,\n        name: text.text.name,\n        author: text.text.author,\n        results: [],\n        total: 0,\n        extra: false,\n      };\n\n      for (let m of contentMatch) {\n        if (max_results === 0 || (max_results > 0 && result.total < max_results)) {\n          let start = m.index - left;\n\n          if (start < 0) {\n            start = 0;\n          }\n          let end = start + extract_length;\n          if (end > content_length) {\n            end = content_length;\n          }\n          let extract = content.substring(start, end);\n          const delimiterMatches = Array.from(extract.matchAll(delimiter_regex), (m) => m.index);\n\n          if (delimiterMatches.length > 0) {\n            const firstMatch = delimiterMatches[0];\n            start += firstMatch;\n          }\n\n          if (delimiterMatches.length > 1) {\n            const lastMatch = delimiterMatches[delimiterMatches.length - 1];\n            end = start + lastMatch - delimiterMatches[0];\n          } else {\n            end = extract.length;\n          }\n\n          extract = extract.substring(0, end);\n          result.results.push([m.index, extract]);\n          result.total += 1;\n          result.id = text.id;\n        }\n\n        if (result.total === max_results) {\n          result.extra = true;\n          break;\n        }\n      }\n\n      results.push(result);\n    }\n  }\n  // Sort the array by the 'total' property in descending order\n  results.sort((a, b) => b.total - a.total);\n  return results;\n};\n", "const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default function getFormattedDate(date: Date, prefomattedDate: boolean | string = false, hideYear = false) {\n  const day = date.getDate();\n  const month = MONTH_NAMES[date.getMonth()];\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  let minutes = date.getMinutes();\n\n  if (minutes < 10) {\n    // Adding leading zero to minutes\n    minutes = `0${minutes}`;\n  }\n\n  if (prefomattedDate) {\n    // Today at 10:20\n    // Yesterday at 10:20\n    return `${prefomattedDate}`;\n  }\n\n  if (hideYear) {\n    // 10. January at 10:20\n    return `${day} ${month}`;\n  }\n\n  // 10. January 2017. at 10:20\n  return `${day} ${month} ${year}`;\n}\n\n// --- Main function\nexport function timeAgo(dateParam: any) {\n  if (!dateParam) {\n    return null;\n  }\n\n  const date = typeof dateParam === 'object' ? dateParam : new Date(dateParam);\n  const DAY_IN_MS = 86400000; // 24 * 60 * 60 * 1000\n  const today = new Date();\n  const yesterday = new Date(today - DAY_IN_MS);\n  const seconds = Math.round((today - date) / 1000);\n  const minutes = Math.round(seconds / 60);\n  const isToday = today.toDateString() === date.toDateString();\n  const isYesterday = yesterday.toDateString() === date.toDateString();\n  const isThisYear = today.getFullYear() === date.getFullYear();\n  switch (true) {\n    case seconds < 5:\n      return 'now';\n    case seconds < 60:\n      return `${seconds} seconds ago`;\n    case seconds < 90:\n      return 'about a minute ago';\n    case minutes < 60:\n      return `${minutes} minutes ago`;\n    case isToday:\n      return getFormattedDate(date, 'Today'); // Today at 10:20\n    case isYesterday:\n      return getFormattedDate(date, 'Yesterday'); // Yesterday at 10:20\n    case isThisYear:\n      return getFormattedDate(date, false, true); // 10. January at 10:20\n    default:\n      return getFormattedDate(date); // 10. January 2017. at 10:20\n  }\n}\n", "import copyToClipboard from './copyToClipboard';\nimport { fullSearch } from './fullSearch.server';\nimport getFormattedDate, { timeAgo } from './getFormatedDate';\nimport DiffMatchPatch from 'diff-match-patch';\nimport { isMobile, isTablet } from 'react-device-detect';\nlet isSmallScreen = isMobile || isTablet;\nimport containTibetanletter from './containsTIbetanWord';\nexport { copyToClipboard, fullSearch, getFormattedDate, timeAgo, DiffMatchPatch, isSmallScreen, containTibetanletter };\n", "function containTibetanletter(str: string) {\n  const tibetanRegex = /[\\u0F00-\\u0FFF]/;\n  return tibetanRegex.test(str);\n}\n\nexport default containTibetanletter;\n", "import { FaBars } from 'react-icons/fa';\nimport { FcSettings } from 'react-icons/fc';\nimport { changeFont, exportDoc } from '../lib';\nimport { useState } from 'react';\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE_MOBILE } from '~/constants';\nimport { isSmallScreen } from '~/lib';\nimport { Editor } from '@tiptap/react';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { useRecoilState } from 'recoil';\nimport { ImageState } from '~/states';\nimport ImageWithPlaceholder from '~/features/Media/Image';\nimport { Dropdown } from 'flowbite-react';\n\ntype theme = { background: string; text: string };\n\nexport default function EditorSetting({ editor }: { editor: Editor }) {\n  const [image, setShowImage] = useRecoilState(ImageState);\n  const data = useLoaderData();\n  let [searchParam] = useSearchParams();\n  const version = searchParam.get('version');\n\n  const handleFontSizeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let value: string = e.target.value;\n    setFontSize(parseInt(value));\n    changeFont(value);\n  };\n  const toggleImage = (e) => {\n    setShowImage({ ...image, show: e.target.checked });\n  };\n  const [fontSize, setFontSize] = useState(isSmallScreen ? DEFAULT_FONT_SIZE_MOBILE : DEFAULT_FONT_SIZE);\n\n  let themes: theme[] = [\n    { background: 'white', text: 'black' },\n    { background: '#C4E0A6', text: 'black' },\n    { background: '#B9F3DD', text: 'black' },\n    { background: '#5A5A5C', text: 'white' },\n  ];\n  const changeTheme = (theme: theme) => {\n    document.documentElement.style.setProperty('--background-text-editor', theme.background);\n    document.documentElement.style.setProperty('--text-text-editor', theme.text);\n  };\n\n  return (\n    <Dropdown\n      label=\"editor_setting\"\n      renderTrigger={() => (\n        <button className=\"mr-3\">\n          <FcSettings color=\"inherit\" className=\"fill-gray-400 hover:text-gray-600 md:hidden \" size={24} />\n          <FaBars color=\"inherit\" className=\"hidden fill-gray-400 hover:text-gray-600 md:block \" size={24} />\n        </button>\n      )}\n      className=\"py-1 text-sm text-gray-700 dark:bg-gray-600 dark:text-gray-200\"\n      aria-labelledby=\"dropdownMenuIconHorizontalButton\"\n    >\n      <Dropdown.Item className=\"flex cursor-pointer flex-col gap-2 bg-gray-100 px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-100 dark:hover:text-white\">\n        <div className=\"flex flex-col items-center\">\n          <ImageWithPlaceholder\n            src={`https://opf.fi/image/${data.text.id}/${data.order}/${version}`}\n            alt={'qr'}\n            title=\"copy url\"\n            onClick={() => navigator.clipboard.writeText(window.location.href)}\n          />\n        </div>\n      </Dropdown.Item>\n      {image.url && (\n        <Dropdown.Item className=\"flex items-center px-4 py-2\">\n          <input\n            checked={image.show}\n            id=\"imageToggle\"\n            type=\"checkbox\"\n            className=\"mb-2 mr-2 cursor-pointer\"\n            onChange={toggleImage}\n          />\n          <label htmlFor=\"imageToggle\" className=\"mb-2 cursor-pointer\">\n            Image\n          </label>\n        </Dropdown.Item>\n      )}\n      <Dropdown.Item\n        onClick={() => exportDoc(editor?.getText(), data.text.name)}\n        className=\" flex cursor-pointer items-center px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n      >\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"mr-2\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M3 17C3 16.7348 3.10536 16.4804 3.29289 16.2929C3.48043 16.1054 3.73478 16 4 16H16C16.2652 16 16.5196 16.1054 16.7071 16.2929C16.8946 16.4804 17 16.7348 17 17C17 17.2652 16.8946 17.5196 16.7071 17.7071C16.5196 17.8946 16.2652 18 16 18H4C3.73478 18 3.48043 17.8946 3.29289 17.7071C3.10536 17.5196 3 17.2652 3 17ZM6.293 9.293C6.48053 9.10553 6.73484 9.00021 7 9.00021C7.26516 9.00021 7.51947 9.10553 7.707 9.293L9 10.586V3C9 2.73478 9.10536 2.48043 9.29289 2.29289C9.48043 2.10536 9.73478 2 10 2C10.2652 2 10.5196 2.10536 10.7071 2.29289C10.8946 2.48043 11 2.73478 11 3V10.586L12.293 9.293C12.3852 9.19749 12.4956 9.12131 12.6176 9.0689C12.7396 9.01649 12.8708 8.9889 13.0036 8.98775C13.1364 8.9866 13.2681 9.0119 13.391 9.06218C13.5139 9.11246 13.6255 9.18671 13.7194 9.28061C13.8133 9.3745 13.8875 9.48615 13.9378 9.60905C13.9881 9.73194 14.0134 9.86362 14.0123 9.9964C14.0111 10.1292 13.9835 10.2604 13.9311 10.3824C13.8787 10.5044 13.8025 10.6148 13.707 10.707L10.707 13.707C10.5195 13.8945 10.2652 13.9998 10 13.9998C9.73484 13.9998 9.48053 13.8945 9.293 13.707L6.293 10.707C6.10553 10.5195 6.00021 10.2652 6.00021 10C6.00021 9.73484 6.10553 9.48053 6.293 9.293Z\"\n            className=\"fill-gray-600\"\n          />\n        </svg>\n        Export\n      </Dropdown.Item>\n\n      <Dropdown.Item className=\"flex cursor-pointer items-center gap-2 px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\n        Font Size{' '}\n        <input\n          type=\"number\"\n          min={10}\n          value={fontSize}\n          size={2}\n          max={40}\n          style={{ border: 0, padding: 0, width: 40, color: 'black' }}\n          onChange={handleFontSizeChange}\n        />\n      </Dropdown.Item>\n      <Dropdown.Item className=\"flex  items-center gap-2 px-4 py-2\">\n        <div className=\"flex gap-2\">\n          {themes.map((theme) => {\n            return (\n              <div\n                key={theme.background}\n                className=\"h-5 w-5 cursor-pointer rounded-full border-2 hover:border-gray-400\"\n                title={theme.background}\n                style={{ backgroundColor: theme.background }}\n                onClick={() => changeTheme(theme)}\n              ></div>\n            );\n          })}\n        </div>\n      </Dropdown.Item>\n      <Dropdown.Item className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\n        Report\n      </Dropdown.Item>\n    </Dropdown>\n  );\n}\n", "export function changeFont(size: string) {\n  let editorref = document.querySelector('.editor');\n  if (editorref) editorref.setAttribute('style', `font-size:${size}px;`);\n  return editorref;\n}\n", "export function exportDoc(text: string, name: string) {\n  const element = document.createElement('a');\n  const file = new Blob([text], {\n    type: 'text/plain',\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = `${name}.txt`;\n  document.body.appendChild(element); // Required for this to work in FireFox\n  element.click();\n}\n", "export function scrollThreadIntoView(thread: string, thread2: string) {\n  if (!thread || !thread2) return null;\n  let doc = document.getElementById(thread);\n  let doc2 = document.getElementById(thread2);\n  let timer;\n  if (doc && doc2)\n    timer = setTimeout(() => {\n      scrollElementsIntoView(doc!, doc2!);\n    }, 400);\n  return timer;\n}\n\nfunction scrollElementsIntoView(element1: HTMLElement, element2: HTMLElement) {\n  // Scroll the first element into view\n  Promise.all([\n    element2.scrollIntoView({ behavior: 'smooth', block: 'start' }),\n    element1.scrollIntoView({ block: 'start', inline: 'start' }),\n  ]);\n  // Delay the scrolling of the second element to ensure it is within the view\n  setTimeout(() => {\n    window.getSelection()?.selectAllChildren(element1);\n  }, 100);\n}\n", "function checkUnknown(text: string) {\n  const replacementChar = '\\ufffd';\n  if (text.includes(replacementChar)) {\n    const regex = new RegExp(replacementChar, 'g');\n    const newStr = text.replace(regex, '');\n    // Refresh the data (e.g., reload it from a source)\n    return newStr; // Indicates that the data was refreshed\n  } else {\n    return text; // Indicates that the data was not refreshed\n  }\n}\n\nexport default checkUnknown;\n", "import { atom } from 'recoil';\nimport { FilterType } from './model/type';\n\n//permission\n\nexport const audioPermission = atom({\n  key: 'audioPermission',\n  default: false,\n});\n\nexport const ImageState = atom({\n  default: { show: true, url: '', isPortrait: false },\n  key: 'showImage',\n});\n\n//textName\n\nexport const textInfo = atom({\n  key: 'textName',\n  default: {\n    name: '',\n    id: '',\n  },\n});\n\n//share State\n\nexport const shareState = atom({\n  key: 'sharePost',\n  default: false,\n});\n\n//filter related states\nexport const openFilterState = atom({\n  key: 'openFilter', // unique ID (with respect to other atoms/selectors)\n  default: false, // default value (aka initial value)\n});\nexport const showLatest = atom<boolean>({\n  key: 'latestFilter',\n  default: true,\n});\nexport const filterDataState = atom<FilterType>({\n  key: 'filterData',\n  default: {\n    type: 'all',\n    date: { startDate: null, endDate: null },\n    user: [],\n    solved: 'both',\n  },\n});\n\n//text selection\n\nexport const selectedTextOnEditor = atom({\n  key: 'selectionSection',\n  default: {\n    type: '',\n    start: 0,\n    end: 0,\n    content: '',\n  },\n});\n", "import React, { useState, useEffect } from 'react';\nimport Spinner from '../../component/UI/Spinner';\n\nconst ImageWithPlaceholder = ({ src, alt,title='',onClick=()=>{} }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const image = new Image();\n    image.src = src;\n\n    image.onload = () => {\n      setLoading(false);\n    };\n\n    return () => {\n      image.onload = null;\n    };\n  }, [src]);\n\n  return (\n    <div style={{ position: 'relative', height: 80, width: 80 }}>\n      {loading && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: '#f2f2f2', // Placeholder background color\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Spinner/>\n        </div>\n      )}\n      <img\n        src={src}\n        alt={alt}\n        title={title}\n        onClick={onClick}\n        style={{ display: loading ? 'none' : 'block' }}\n        loading=\"lazy\"\n        className=\"w-full cursor-pointer object-contain\"\n      />\n    </div>\n  );\n};\n\nexport default ImageWithPlaceholder;\n", "import React from 'react';\n\nconst ToolButton = ({ children, isActive, ...props }: any) => {\n  return (\n    <button\n      {...props}\n      className={`text-gray-600 shadow px-2 py-1 rounded-sm ${\n        isActive ? 'bg-gray-400' : 'bg-white'\n      } disabled:opacity-70`}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default ToolButton;\n", "function convertPTagsToOlAfterH1(htmlText) {\n  var tempDiv = document.createElement('div');\n  tempDiv.innerHTML = htmlText;\n\n  var h1Tags = tempDiv.getElementsByTagName('h1');\n\n  for (var i = 0; i < h1Tags.length; i++) {\n    var olElement = document.createElement('ol');\n    // Check if there is a <p> tag after the current <h1>\n    var nextElement = h1Tags[i].nextElementSibling;\n    if (nextElement && nextElement.tagName.toLowerCase() === 'p') {\n      while (nextElement && nextElement.tagName.toLowerCase() === 'p') {\n        // Move the content of the <p> to a new <li> in the <ol>\n        var liElement = document.createElement('li');\n        liElement.appendChild(document.createTextNode(nextElement?.textContent));\n        olElement.appendChild(liElement);\n        // Remove the original <p> tag\n        nextElement.parentNode.removeChild(nextElement);\n        // Update the nextElement for the next iteration\n        nextElement = h1Tags[i].nextElementSibling;\n      }\n\n      // Insert the <ol> after the <h1>\n      h1Tags[i].parentNode.insertBefore(olElement, nextElement);\n    }\n  }\n\n  return tempDiv.innerHTML;\n}\n\nexport default convertPTagsToOlAfterH1;\n", "import { Editor } from '@tiptap/react';\nimport ToolButton from './ToolButton';\nimport convertPTagsToOlAfterH1 from '~/lib/ConvertpToList';\nimport { FaHighlighter } from 'react-icons/fa';\nimport { IoMdUndo, IoMdRedo } from 'react-icons/io';\nimport { FaBold } from 'react-icons/fa';\nimport { LuHeading1, LuHeading3 } from 'react-icons/lu';\nimport { MdOutlineFormatIndentDecrease } from 'react-icons/md';\nimport { CiTextAlignCenter } from 'react-icons/ci';\nfunction Tools({ editor }: any) {\n  if (!editor) return null;\n\n  function formatEditor() {\n    let content = editor?.getHTML();\n    let data = convertPTagsToOlAfterH1(content);\n    editor?.commands.setContent(data);\n  }\n\n  return (\n    <div className=\"flex justify-between bg-gray-200 z-10 rounded-md border-2 sticky top-0\">\n      <div>\n        <ToolButton\n          title=\"Heading 1\"\n          onClick={() => {\n            if (editor.isActive('orderedList')) {\n              replaceListItemWithH3(editor, 1);\n            } else {\n              editor.chain().focus().toggleHeading({ level: 1 }).run();\n            }\n          }}\n          isActive={editor.isActive('heading', { level: 1 })}\n        >\n          <LuHeading1 />\n        </ToolButton>\n\n        <ToolButton\n          title=\"Heading 3\"\n          onClick={() => {\n            if (editor.isActive('orderedList')) {\n              replaceListItemWithH3(editor, 3);\n            } else {\n              editor.commands.toggleHeading({ level: 3 });\n            }\n          }}\n        >\n          <LuHeading3 />\n        </ToolButton>\n\n        <ToolButton\n          title=\"Bold\"\n          onClick={() => editor.chain().focus().toggleBold().run()}\n          className={'ml-2 '}\n          isActive={editor.isActive('bold')}\n        >\n          <FaBold />\n        </ToolButton>\n        <ToolButton\n          title=\"Highlight\"\n          onClick={() => editor.chain().focus().toggleHighlight({ color: '#8ce99a' }).run()}\n          isActive={editor.isActive('highlight', { color: '#8ce99a' })}\n        >\n          <FaHighlighter />\n        </ToolButton>\n\n        <ToolButton title=\"Format\" onClick={formatEditor}>\n          <MdOutlineFormatIndentDecrease />\n        </ToolButton>\n        <ToolButton title=\"text center\" onClick={() => editor.commands.setTextAlign('center')}>\n          <CiTextAlignCenter />\n        </ToolButton>\n        <ToolButton title=\"undo\" onClick={() => editor.chain().focus().undo().run()} disabled={!editor.can().undo()}>\n          <IoMdUndo />\n        </ToolButton>\n        <ToolButton title=\"redo\" onClick={() => editor.chain().focus().redo().run()} disabled={!editor.can().redo()}>\n          <IoMdRedo />\n        </ToolButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Tools;\n\nconst replaceListItemWithH3 = (editor: Editor, level: 1 | 3) => {\n  if (!editor) {\n    console.error('Editor instance is not available.');\n    return;\n  }\n  const { state } = editor;\n  const { selection } = state;\n  const { $from, $to } = selection;\n  // Only proceed if the selection is within a list item\n  if ($from.parent.type.name === 'listItem' && $from.depth > 1) {\n    // Determine the range of the current list item\n    let startPos = $from.before($from.depth);\n    let endPos = $to.after($from.depth) - 1;\n    // Replace the list item with an H3 heading\n    editor\n      .chain()\n      .focus()\n      .deleteRange({ from: startPos, to: endPos })\n      .insertContentAt(startPos, { type: 'heading', attrs: { level }, content: $from.parent.content.toJSON() })\n      .run();\n  }\n};\n", "import Paragraph from '@tiptap/extension-paragraph';\nimport Document from '@tiptap/extension-document';\nimport Text from '@tiptap/extension-text';\nimport Bold from '@tiptap/extension-bold';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport Highlight from '@tiptap/extension-highlight';\nimport TextStyle from '@tiptap/extension-text-style';\nimport FontFamily from '@tiptap/extension-font-family';\nimport Underline from '@tiptap/extension-underline';\nimport Placeholder from '@tiptap/extension-placeholder';\nimport Italic from '@tiptap/extension-italic';\nimport Heading from '@tiptap/extension-heading';\nimport { Suggestion } from '~/features/Editor/tiptap/tiptap-extension/suggestion';\nimport PostMark from '~/features/Editor/tiptap/tiptap-extension/postMark';\nimport { SearchAndReplace } from '~/features/Editor/tiptap/tiptap-extension/searchAndReplace';\nimport editorProps from './events';\nimport History from '@tiptap/extension-history';\nimport TextAlign from '@tiptap/extension-text-align';\nimport ListItem from '@tiptap/extension-list-item';\nimport OrderedList from '@tiptap/extension-ordered-list';\nexport {\n  Heading,\n  Paragraph,\n  History,\n  Document,\n  Text,\n  Bold,\n  HardBreak,\n  Highlight,\n  TextStyle,\n  FontFamily,\n  Suggestion,\n  PostMark,\n  SearchAndReplace,\n  editorProps,\n  Placeholder,\n  Italic,\n  Underline,\n  ListItem,\n  OrderedList,\n  TextAlign,\n};\n", "import { getMarkRange, Mark, mergeAttributes } from '@tiptap/core';\nimport { Editor } from '@tiptap/react';\nimport { Plugin, TextSelection } from 'prosemirror-state';\nexport interface SuggestionOptions {\n  multicolor: boolean;\n  HTMLAttributes: Record<string, any>;\n}\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    suggestion: {\n      /**\n       * Set a highlight mark\n       */\n      setSuggestion: (attributes?: { color: string }) => ReturnType;\n      /**\n       * Toggle a highlight mark\n       */\n      toggleSuggestion: (attributes?: { color: string }) => ReturnType;\n      /**\n       * Unset a highlight mark\n       */\n      unsetSuggestion: () => ReturnType;\n      replaceSuggestion: (term: string) => ReturnType;\n    };\n  }\n}\nexport const replace = (replace, editor, dispatch) => {\n  dispatch(editor.state.tr.insertText(replace, 1, 3));\n};\nexport const Suggestion = (setter) =>\n  Mark.create({\n    name: 'suggestion',\n\n    addOptions() {\n      return {\n        multicolor: false,\n        HTMLAttributes: {},\n      };\n    },\n\n    addAttributes() {\n      return {\n        color: {\n          default: null,\n          parseHTML: (element) => element.getAttribute('data-color') || element.style.backgroundColor,\n          renderHTML: (attributes) => {\n            if (!attributes.color) {\n              return {};\n            }\n\n            return {\n              'data-color': attributes.color,\n              style: `background-color: ${attributes.color}; color: inherit`,\n            };\n          },\n        },\n        id: {\n          default: null,\n          parseHTML: (element) => element.getAttribute('id'),\n          renderHTML: (attributes) => {\n            return {\n              id: attributes.id,\n            };\n          },\n        },\n        original: {\n          default: null,\n          parseHTML: (element) => element.getAttribute('original'),\n          renderHTML: (attributes) => {\n            return {\n              original: attributes.original,\n            };\n          },\n        },\n      };\n    },\n\n    parseHTML() {\n      return [\n        {\n          tag: 'suggestion',\n        },\n      ];\n    },\n\n    renderHTML({ HTMLAttributes }) {\n      return ['suggestion', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n\n    addCommands() {\n      return {\n        setSuggestion:\n          (attributes) =>\n          ({ commands }) => {\n            return commands.setMark(this.name, attributes);\n          },\n        toggleSuggestion:\n          (attributes) =>\n          ({ commands }) => {\n            return commands.toggleMark(this.name, attributes);\n          },\n        unsetSuggestion:\n          () =>\n          ({ commands }) => {\n            return commands.unsetMark(this.name);\n          },\n        replaceSuggestion:\n          (term) =>\n          ({ editor, dispatch }) => {\n            replace(term, editor, dispatch);\n            return false;\n          },\n      };\n    },\n    addProseMirrorPlugins(this) {\n      return [\n        new Plugin({\n          props: {\n            handleClick(view, pos, event) {\n              const { schema, doc, tr } = view.state;\n              const range = getMarkRange(doc.resolve(pos), schema.marks.suggestion);\n              if (!range) return false;\n              const clickedNode = event.target;\n              setter(clickedNode?.id);\n\n              const [$start, $end] = [doc.resolve(range.from), doc.resolve(range.to)];\n              view.dispatch(tr.setSelection(new TextSelection($start, $end)));\n\n              return true;\n            },\n          },\n        }),\n      ];\n    },\n  });\nexport declare const Highlight: Mark<SuggestionOptions, any>;\n", "import { getMarkRange, Mark, mergeAttributes } from '@tiptap/core';\nimport { Plugin, TextSelection } from 'prosemirror-state';\nexport interface SuggestionOptions {\n  multicolor: boolean;\n  HTMLAttributes: Record<string, any>;\n}\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    post: {\n      /**\n       * Set a highlight mark\n       */\n      setPost: (attributes?: { color: string }) => ReturnType;\n      /**\n       * Toggle a highlight mark\n       */\n      togglePost: (attributes?: { color: string }) => ReturnType;\n      /**\n       * Unset a highlight mark\n       */\n      unsetPost: () => ReturnType;\n    };\n  }\n}\n\nconst PostMark = (setter) =>\n  Mark.create({\n    name: 'post',\n\n    addOptions() {\n      return {\n        multicolor: false,\n        HTMLAttributes: {},\n      };\n    },\n\n    addAttributes() {\n      return {\n        color: {\n          default: null,\n          parseHTML: (element) => element.getAttribute('data-color') || element.style.backgroundColor,\n          renderHTML: (attributes) => {\n            if (!attributes.color) {\n              return {};\n            }\n\n            return {\n              'data-color': attributes.color,\n              style: `background-color: ${attributes.color}; color: inherit`,\n            };\n          },\n        },\n        id: {\n          default: null,\n          parseHTML: (element) => element.getAttribute('id'),\n          renderHTML: (attributes) => {\n            return {\n              id: attributes.id,\n            };\n          },\n        },\n      };\n    },\n\n    parseHTML() {\n      return [\n        {\n          tag: 'post',\n        },\n      ];\n    },\n\n    renderHTML({ HTMLAttributes }) {\n      return ['post', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n    },\n\n    addCommands() {\n      return {\n        setPost:\n          (attributes) =>\n          ({ commands }) => {\n            return commands.setMark(this.name, attributes);\n          },\n        togglePost:\n          (attributes) =>\n          ({ commands }) => {\n            return commands.toggleMark(this.name, attributes);\n          },\n        unsetPost:\n          () =>\n          ({ commands }) => {\n            return commands.unsetMark(this.name);\n          },\n      };\n    },\n    addProseMirrorPlugins(this) {\n      return [\n        new Plugin({\n          props: {\n            handleClick(view, pos, event) {\n              const { schema, doc, tr } = view.state;\n              const range = getMarkRange(doc.resolve(pos), schema.marks.post);\n              if (!range) return false;\n              const clickedNode = event.target;\n              setter(clickedNode?.id);\n              const [$start, $end] = [doc.resolve(range.from), doc.resolve(range.to)];\n              view.dispatch(tr.setSelection(new TextSelection($start, $end)));\n\n              return true;\n            },\n          },\n        }),\n      ];\n    },\n  });\n\nexport default PostMark;\n", "// MIT License\n\n// Copyright (c) 2022 Jeet Mandaliya (Github Username: sereneinserenade)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Extension, Range } from '@tiptap/core';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    search: {\n      /**\n       * @description Set search term in extension.\n       */\n      setSearchTerm: (searchTerm: string) => ReturnType;\n      /**\n       * @description Set replace term in extension.\n       */\n      setReplaceTerm: (replaceTerm: string) => ReturnType;\n      /**\n       * @description Replace first instance of search result with given replace term.\n       */\n      replace: () => ReturnType;\n      /**\n       * @description Replace all instances of search result with given replace term.\n       */\n      replaceAll: () => ReturnType;\n    };\n  }\n}\n\ninterface TextNodesWithPosition {\n  text: string;\n  pos: number;\n}\n\nconst getRegex = (s: string, disableRegex: boolean, caseSensitive: boolean): RegExp => {\n  return RegExp(disableRegex ? s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') : s, caseSensitive ? 'gu' : 'gui');\n};\n\ninterface ProcessedSearches {\n  decorationsToReturn: DecorationSet;\n  results: Range[];\n}\n\nfunction processSearches(doc: ProsemirrorNode, searchTerm: RegExp, searchResultClass: string): ProcessedSearches {\n  const decorations: Decoration[] = [];\n  let textNodesWithPosition: TextNodesWithPosition[] = [];\n  const results: Range[] = [];\n\n  let index = 0;\n\n  if (!searchTerm) return { decorationsToReturn: DecorationSet.empty, results: [] };\n\n  doc?.descendants((node, pos) => {\n    if (node.isText) {\n      if (textNodesWithPosition[index]) {\n        textNodesWithPosition[index] = {\n          text: textNodesWithPosition[index].text + node.text,\n          pos: textNodesWithPosition[index].pos,\n        };\n      } else {\n        textNodesWithPosition[index] = {\n          text: `${node.text}`,\n          pos,\n        };\n      }\n    } else {\n      index += 1;\n    }\n  });\n\n  textNodesWithPosition = textNodesWithPosition.filter(Boolean);\n\n  for (let i = 0; i < textNodesWithPosition.length; i += 1) {\n    const { text, pos } = textNodesWithPosition[i];\n\n    const matches = Array.from(text.matchAll(searchTerm)).filter(([matchText]) => matchText.trim());\n\n    for (let j = 0; j < matches.length; j += 1) {\n      const m = matches[j];\n\n      if (m[0] === '') break;\n\n      if (m.index !== undefined) {\n        results.push({\n          from: pos + m.index,\n          to: pos + m.index + m[0].length,\n        });\n      }\n    }\n  }\n\n  for (let i = 0; i < results.length; i += 1) {\n    const r = results[i];\n    decorations.push(Decoration.inline(r.from, r.to, { class: searchResultClass }));\n  }\n\n  return {\n    decorationsToReturn: DecorationSet.create(doc, decorations),\n    results,\n  };\n}\n\nconst replace = (replaceTerm: string, results: Range[], { state, dispatch }: any) => {\n  const firstResult = results[0];\n\n  if (!firstResult) return;\n\n  const { from, to } = results[0];\n\n  if (dispatch) dispatch(state.tr.insertText(replaceTerm, from, to));\n};\n\nconst rebaseNextResult = (\n  replaceTerm: string,\n  index: number,\n  lastOffset: number,\n  results: Range[]\n): [number, Range[]] | null => {\n  const nextIndex = index + 1;\n\n  if (!results[nextIndex]) return null;\n\n  const { from: currentFrom, to: currentTo } = results[index];\n\n  const offset = currentTo - currentFrom - replaceTerm.length + lastOffset;\n\n  const { from, to } = results[nextIndex];\n\n  results[nextIndex] = {\n    to: to - offset,\n    from: from - offset,\n  };\n\n  return [offset, results];\n};\n\nconst replaceAll = (replaceTerm: string, results: Range[], { tr, dispatch }: any) => {\n  let offset = 0;\n\n  let resultsCopy = results.slice();\n\n  if (!resultsCopy.length) return;\n\n  for (let i = 0; i < resultsCopy.length; i += 1) {\n    const { from, to } = resultsCopy[i];\n\n    tr.insertText(replaceTerm, from, to);\n\n    const rebaseNextResultResponse = rebaseNextResult(replaceTerm, i, offset, resultsCopy);\n\n    if (!rebaseNextResultResponse) continue;\n\n    offset = rebaseNextResultResponse[0];\n    resultsCopy = rebaseNextResultResponse[1];\n  }\n\n  dispatch(tr);\n};\n\nexport const searchAndReplacePluginKey = new PluginKey('searchAndReplacePlugin');\n\ninterface SearchAndReplaceOptions {\n  searchResultClass: string;\n  caseSensitive: boolean;\n  disableRegex: boolean;\n}\n\ninterface SearchAndReplaceStorage {\n  searchTerm: string;\n  replaceTerm: string;\n  results: Range[];\n  lastSearchTerm: string;\n}\n\nexport const SearchAndReplace = Extension.create<SearchAndReplaceOptions, SearchAndReplaceStorage>({\n  name: 'searchAndReplace',\n\n  addOptions() {\n    return {\n      searchResultClass: 'search-result',\n      caseSensitive: false,\n      disableRegex: false,\n    };\n  },\n\n  addStorage() {\n    return {\n      searchTerm: '',\n      replaceTerm: '',\n      results: [],\n      lastSearchTerm: '',\n    };\n  },\n\n  addCommands() {\n    return {\n      setSearchTerm:\n        (searchTerm: string) =>\n        ({ editor }) => {\n          editor.storage.searchAndReplace.searchTerm = searchTerm;\n\n          return false;\n        },\n      setReplaceTerm:\n        (replaceTerm: string) =>\n        ({ editor }) => {\n          editor.storage.searchAndReplace.replaceTerm = replaceTerm;\n\n          return false;\n        },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    const editor = this.editor;\n    const { searchResultClass, disableRegex, caseSensitive } = this.options;\n\n    const setLastSearchTerm = (t) => (editor.storage.searchAndReplace.lastSearchTerm = t);\n\n    return [\n      new Plugin({\n        key: searchAndReplacePluginKey,\n        state: {\n          init: () => DecorationSet.empty,\n          apply({ doc, docChanged }, oldState) {\n            const { searchTerm, lastSearchTerm } = editor.storage.searchAndReplace;\n\n            if (!docChanged && lastSearchTerm === searchTerm) return oldState;\n\n            setLastSearchTerm(searchTerm);\n\n            if (!searchTerm) return DecorationSet.empty;\n\n            const { decorationsToReturn, results } = processSearches(\n              doc,\n              getRegex(searchTerm, disableRegex, caseSensitive),\n              searchResultClass\n            );\n\n            editor.storage.searchAndReplace.results = results;\n\n            return decorationsToReturn;\n          },\n        },\n        props: {\n          decorations(state) {\n            return this.getState(state);\n          },\n        },\n      }),\n    ];\n  },\n});\n", "const handleDOMEvents = {\n  keydown: (v, event) => {\n    let charCode = String.fromCharCode(event.which).toLowerCase();\n    let copyPressed = (event.ctrlKey || event.metaKey) && charCode === 'c';\n    if (![37, 38, 39, 40].includes(event.keyCode) && !copyPressed) {\n      event.preventDefault();\n    }\n  },\n  textInput: (v, evt) => {\n    evt.preventDefault();\n  },\n  drop: (v, e) => {\n    e.preventDefault();\n  },\n  dragstart: (v, e) => {\n    e.preventDefault();\n  },\n  paste: (v, event) => {\n    event.preventDefault();\n    console.log(v);\n  },\n};\n\nlet attributes = {\n  inputmode: 'none',\n  'data-encoding': 'UTF-8',\n};\n\nconst noneditable = {\n  handleDOMEvents: handleDOMEvents,\n  attributes,\n};\n\nconst editable = {\n  handleDOMEvents: {},\n  attributes,\n};\nexport default { editable, noneditable };\n", "import * as Extension from '~/features/Editor/tiptap';\nimport { useEditor } from '@tiptap/react';\nimport { useSetRecoilState } from 'recoil';\nimport { selectedTextOnEditor } from '~/states';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport convertPTagsToOlAfterH1 from '~/lib/ConvertpToList';\nimport { useEffect, useLayoutEffect, useMemo } from 'react';\nimport * as Y from 'yjs';\nimport { Collaboration } from '@tiptap/extension-collaboration';\nimport { HocuspocusProvider } from '@hocuspocus/provider';\nimport CollaborationCursor from '@tiptap/extension-collaboration-cursor';\nlet firsttime = true;\n\ntype useEditorProps = {\n  name: string;\n  content?: string;\n  isEditable?: boolean;\n  paramUpdate?: boolean;\n};\n\nconst useEditorInstance = ({ name, content, isEditable, paramUpdate = true }: useEditorProps) => {\n  const { user } = useLoaderData();\n  const setSelectionRange = useSetRecoilState(selectedTextOnEditor);\n  const [param, setSearchParams] = useSearchParams();\n  let documentName = name;\n  let provider;\n  function suggestionSetter(id: string) {\n    setSearchParams((p) => {\n      p.set('with', 'Suggestion');\n      p.set('thread', id);\n      return p;\n    });\n  }\n  function postSetter(id: string) {\n    setSearchParams((p) => {\n      p.set('with', 'Post');\n      p.set('thread', id);\n      return p;\n    });\n  }\n  const doc = useMemo(() => {\n    return new Y.Doc();\n  }, [documentName]);\n\n  useEffect(() => {\n    if (user) {\n      let url =\n        process.env.NODE_ENV === 'development'\n          ? 'ws://' + window.location.hostname + ':3000/socket'\n          : 'wss://' + window.location.hostname + '/socket';\n      provider = new HocuspocusProvider({\n        url,\n        name,\n        document: doc,\n      });\n    }\n  }, []);\n\n  let editor = useEditor(\n    {\n      extensions: [\n        Extension.Document,\n        Extension.Heading.configure({\n          levels: [1, 2, 3],\n        }),\n        Extension.Paragraph,\n        Extension.Text,\n        Extension.Bold,\n        Extension.FontFamily,\n        Extension.TextStyle,\n        Extension.SearchAndReplace.configure({\n          searchResultClass: 'search',\n          caseSensitive: false,\n          disableRegex: false,\n        }),\n        Extension.HardBreak.configure({\n          HTMLAttributes: {\n            class: 'pageBreak',\n          },\n        }),\n        Extension.Highlight.configure({\n          HTMLAttributes: {\n            class: 'highlight',\n          },\n          multicolor: true,\n        }),\n        Extension.History.configure({\n          newGroupDelay: 500,\n          depth: 100,\n        }),\n        Extension.OrderedList,\n        Extension.ListItem.extend({\n          content: 'text*', // allow nested lists\n        }),\n        Extension.Suggestion(suggestionSetter).configure({\n          HTMLAttributes: {\n            class: 'suggestion',\n          },\n        }),\n        Extension.PostMark(postSetter).configure({\n          HTMLAttributes: {\n            class: 'post',\n          },\n        }),\n        Extension.TextAlign.configure({\n          types: ['heading', 'paragraph'],\n        }),\n        Collaboration.configure({\n          document: provider?.document ?? doc,\n        }),\n      ],\n      editable: true,\n      editorProps: isEditable ? Extension.editorProps.editable : Extension.editorProps.noneditable,\n      onSelectionUpdate: ({ editor }) => {\n        if (!paramUpdate) return null;\n        if (!user) return null;\n        let from = editor.state.selection.from;\n        let to = editor.state.selection.to;\n        setSelectionRange({\n          type: '',\n          start: from,\n          end: to,\n          content: editor?.state.doc.textBetween(from, to, ''),\n        });\n        if (!editor?.isActive('suggestion') && !editor?.isActive('post') && !firsttime) {\n          if (param.get('with') === 'Suggestion' || param.get('with') === 'Post') {\n            setSearchParams((p) => {\n              p.delete('thread');\n              p.set('with', 'all');\n              return p;\n            });\n          }\n        }\n        firsttime = false;\n      },\n      onCreate({ editor }) {\n        setTimeout(() => {\n          if (editor.getText() === '') {\n            if (content) {\n              let content_with_list = convertPTagsToOlAfterH1(content);\n              editor?.commands.setContent(content_with_list);\n            }\n          }\n        }, 2000);\n      },\n    },\n    [],\n  );\n  return editor;\n};\nexport default useEditorInstance;\n", "import { fullSearch } from '~/lib';\nimport { db } from '~/services/db.server';\nimport { Version } from '@prisma/client';\nexport async function getPageWithId(id: string) {\n  try {\n    let page = db.page.findFirst({\n      where: {\n        id,\n      },\n      include: {\n        text: {\n          include: {\n            Page: true,\n          },\n        },\n      },\n    });\n    return page;\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport async function getVersions(textId: number, order: number) {\n  try {\n    const pages = await db.page.findMany({\n      where: {\n        textId,\n      },\n      select: {\n        version: true,\n      },\n    });\n    const versionCountMap: Record<string, number> = {};\n\n    pages.forEach((page) => {\n      if (!page.version) return;\n      if (versionCountMap.hasOwnProperty(page.version)) {\n        versionCountMap[page.version]++;\n      } else {\n        versionCountMap[page.version] = 1;\n      }\n    });\n\n    const versionsWithCount = Object.entries(versionCountMap).map(([version, count]) => ({ version, count }));\n    return versionsWithCount;\n  } catch (e) {\n    console.log(e);\n    return []; // Return an empty array if an error occurs\n  }\n}\nexport async function getPageContent(textId: number, order: number) {\n  let page = await getPage(textId, order, null);\n  let data = await db.page.findFirst({\n    where: {\n      id: page?.id,\n    },\n    select: {\n      id: true,\n      content: true,\n    },\n  });\n  return { id: data?.id, content: data?.content };\n}\nexport async function getPage(textId: number, order: number, version: Version | null) {\n  try {\n    let Id = textId;\n    let where = typeof version === 'string' ? { textId: Id, order, version } : { textId: Id, order };\n    let pageWhere = version ? { version } : {};\n    let page = db.page.findFirst({\n      where,\n      include: {\n        text: {\n          include: {\n            Page: {\n              where: pageWhere,\n              select: {\n                id: true,\n                order: true,\n                version: true,\n              },\n            },\n          },\n        },\n        Post: {\n          select: {\n            id: true,\n          },\n        },\n      },\n    });\n    return page;\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport async function getPageId(textId: number, order: number) {\n  try {\n    let page = await db.page.findFirst({\n      where: {\n        textId,\n        order,\n      },\n    });\n    return page?.id;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function searchPages(search_term = '') {\n  try {\n    const textList = await db.page.findMany({\n      where: {\n        text: {\n          name: {\n            contains: search_term,\n            mode: 'insensitive',\n          },\n        },\n        content: {\n          contains: search_term,\n        },\n      },\n      include: {\n        text: {\n          include: {\n            author: true,\n          },\n        },\n      },\n      orderBy: { content: 'asc' },\n    });\n\n    let results = fullSearch(textList, search_term);\n    let groupedData = [];\n\n    for (const item of results) {\n      const { textId } = item;\n      const existingGroup = groupedData.find((group) => group.textId === textId);\n      if (existingGroup) {\n        existingGroup.results.push(item);\n      } else {\n        groupedData.push({\n          textId: textId,\n          results: [item],\n          textName: item.name,\n        });\n      }\n    }\n    return Object.values(groupedData).map((value) => ({\n      results: value.results,\n      textId: value.textId,\n    }));\n  } catch (e: any) {\n    throw new Error('error finding text with name' + e.message);\n  }\n}\nexport async function updatePage(pageId: string, content: string) {\n  try {\n    let res = db.page.update({\n      data: {\n        content,\n      },\n      where: {\n        id: pageId,\n      },\n    });\n    return res;\n  } catch (e: any) {\n    throw new Error('update text error' + e.message);\n  }\n}\n", "import { db } from '~/services/db.server';\n\nexport const getUserPage = async (id: number | undefined) => {\n  let page = db.userText.findUnique({\n    where: { id },\n    include: {\n      translations: true,\n    },\n  });\n  return page;\n};\nexport let listUserText = async (textId: string, pageId: string) => {\n  try {\n    return await db.userText.findMany({\n      where: {\n        textId: parseInt(textId),\n        pageId,\n      },\n      select: {\n        id: true,\n        name: true,\n        user: true,\n      },\n    });\n  } catch (e) {\n    throw new Error(e);\n  }\n};\nexport const updateSource = async (id: string, content: string) => {\n  return db.userText.update({\n    where: { id: parseInt(id) },\n    data: {\n      content,\n    },\n  });\n};\n\nexport const createUserText = async (textId, pageId, userId, content, name) => {\n  return await db.userText.create({\n    data: {\n      textId,\n      pageId,\n      userId,\n      content,\n      name,\n    },\n  });\n};\n", "import { db } from '~/services/db.server';\nimport { getText } from './text';\nimport { getPage, getPageContent } from './page';\nimport { createUserText } from './userText';\nimport { languageOptionsType } from '~/constants';\n\n//get list of translations for a text\nexport let listTranslations = async (textId: number, pageId: string) => {\n  return await db.translation.findMany({\n    where: {\n      textId,\n      pageId,\n    },\n    include: {\n      userText: {\n        select: {\n          name: true,\n          user: {\n            select: {\n              username: true,\n            },\n          },\n        },\n      },\n    },\n  });\n};\n\nexport let getTranslation = async (id: number) => {\n  return await db.translation.findUnique({\n    where: {\n      id,\n    },\n    include: {\n      userText: {\n        select: {\n          user: {\n            select: {\n              username: true,\n            },\n          },\n        },\n      },\n    },\n  });\n};\n\n//create translation\nexport let createTranslation = async (\n  textId: number,\n  order: number,\n  language: languageOptionsType,\n  content: string,\n  userId: string,\n  name: string,\n) => {\n  let page = await getPageContent(textId, order);\n  //generate a copy of text/page in userText\n\n  let new_userPage = await createUserText(textId, page?.id, userId, page?.content, name);\n  //link it to Translation when creating\n\n  let new_translation = await db.translation.create({\n    data: {\n      language,\n      content,\n      userTextId: new_userPage.id,\n      textId,\n      pageId: page?.id,\n    },\n  });\n  return new_translation;\n};\n\nexport let deleteTranslation = async (id: number) => {\n  let deleted = await db.translation.delete({\n    where: { id },\n  });\n  return await db.userText.delete({\n    where: { id: deleted.userTextId },\n  });\n};\n\nexport let updateTranslation = async (id: number, content: string) => {\n  return await db.translation.update({\n    where: { id },\n    data: {\n      content,\n    },\n  });\n};\n\nexport let updateSourceAndTranslation = async ({\n  sourceId,\n  sourceContent,\n  sourceAnnotation,\n  translationId,\n  translationContent,\n  translationAnnotation,\n}) => {\n  return await db.$transaction([\n    db.userText.update({\n      where: { id: parseInt(sourceId) },\n      data: {\n        content: sourceContent,\n        Annotation: sourceAnnotation,\n      },\n    }),\n    db.translation.update({\n      where: { id: parseInt(translationId) },\n      data: {\n        content: translationContent,\n        annotation: translationAnnotation,\n      },\n    }),\n  ]);\n};\n", "import { useState, useEffect } from 'react';\n\nexport const useDebounce = (value: string | number, milliSeconds: any) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, milliSeconds);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, milliSeconds]);\n\n  return debouncedValue;\n};\n", "import { Editor } from '@tiptap/react';\nimport { Button } from 'flowbite-react';\nimport React from 'react';\nimport exportAsDocs from '~/lib/export_docs';\n\ntype Props = {\n  editor: Editor;\n  name: string;\n};\n\nfunction ExportButton({ editor, name }: Props) {\n  return (\n    <Button size={'xs'} className=\"text-slate-500\" onClick={() => exportAsDocs(editor)}>\n      {name}\n    </Button>\n  );\n}\n\nexport default ExportButton;\n", "import toast from 'react-hot-toast';\nimport { asBlob } from 'html-docx-js-typescript';\n\nexport default async function exportAsDocs(editor: any) {\n  if (!editor) {\n    toast.error('cannot export!');\n    return;\n  }\n  let htmlContent = editor.getHTML();\n  const docBlob = await asBlob(htmlContent); // Convert HTML to a Word document Blob\n  console.log(docBlob);\n  // Create a Blob for download\n  const url = URL.createObjectURL(docBlob);\n  const downloadLink = document.createElement('a');\n  downloadLink.href = url;\n  downloadLink.download = 'document.docx'; // Name the file\n\n  // Append to the document and trigger the download\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n\n  // Clean up\n  document.body.removeChild(downloadLink);\n  URL.revokeObjectURL(url);\n}\n", "export function processHTML(htmlString) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlString, 'text/html');\n  const body = doc.body;\n  const annotations = [];\n  let textContent = '';\n\n  function getAttributes(node) {\n    const attributes = {};\n    Array.from(node.attributes).forEach((attr) => {\n      attributes[attr.name] = attr.value;\n    });\n    return attributes;\n  }\n\n  function walkNodes(node, index = 0, openTags = []) {\n    Array.from(node.childNodes).forEach((child) => {\n      if (child.nodeType === Node.TEXT_NODE) {\n        const content = child.textContent;\n        const start = index;\n        const end = start + content.length;\n        textContent += content;\n\n        openTags.forEach((tag) => {\n          tag.end = end; // Update the end position for all open tags\n        });\n\n        index = end;\n      } else if (child.nodeType === Node.ELEMENT_NODE) {\n        const tagAnnotation = {\n          tagName: child.tagName,\n          attributes: getAttributes(child),\n          start: index,\n          end: index, // Temporary end value, will be updated\n          content: '',\n        };\n        openTags.push(tagAnnotation);\n        annotations.push(tagAnnotation);\n\n        index = walkNodes(child, index, openTags);\n\n        openTags.pop(); // Remove the tag from the stack once its children have been processed\n      }\n    });\n\n    return index;\n  }\n\n  walkNodes(body);\n\n  return {\n    text: textContent,\n    annotations: annotations,\n  };\n}\n\nexport function constructHTML(text, annotations) {\n  // Sort annotations by their start position, and in case of a tie, by end position in reverse\n  annotations.sort((a, b) => (a.start !== b.start ? a.start - b.start : b.end - a.end));\n\n  let htmlString = '';\n  let lastIndex = 0;\n  let openTags = [];\n\n  annotations.forEach((annot, idx) => {\n    // Close tags that end before this annotation starts\n    while (openTags.length > 0 && openTags[openTags.length - 1].end <= annot.start) {\n      const lastTag = openTags.pop();\n      htmlString += text.substring(lastIndex, lastTag.end) + `</${lastTag.tagName.toLowerCase()}>`;\n      lastIndex = lastTag.end;\n    }\n\n    // Add text before the current annotation if not already added\n    if (lastIndex < annot.start) {\n      htmlString += text.substring(lastIndex, annot.start);\n      lastIndex = annot.start;\n    }\n\n    // Open the tag with attributes\n    let attributesString = '';\n    for (const [key, value] of Object.entries(annot.attributes)) {\n      attributesString += ` ${key}=\"${value}\"`;\n    }\n    htmlString += `<${annot.tagName.toLowerCase()}${attributesString}>`;\n\n    // Add the tag to the stack of open tags\n    openTags.push(annot);\n  });\n\n  // Close any remaining open tags\n  while (openTags.length > 0) {\n    const tag = openTags.pop();\n    htmlString += text.substring(lastIndex, tag.end) + `</${tag.tagName.toLowerCase()}>`;\n    lastIndex = tag.end;\n  }\n\n  // Add any remaining text after the last tag\n  if (lastIndex < text.length) {\n    htmlString += text.substring(lastIndex);\n  }\n\n  return htmlString;\n}\n\n// Example usage with your provided annotations\n", "import { ActionFunction } from '@remix-run/node';\nimport { updateTheme } from '~/model/preference';\nimport { getUserSession } from '~/services/session.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  let user = await getUserSession(request);\n  let formData = await request.formData();\n  let theme = formData.get('theme') as string;\n  let res = await updateTheme(user.id, theme);\n  return res;\n};\n", "import { db } from '~/services/db.server';\n\nexport const updateTheme = async (userId: string, theme: string) => {\n  try {\n    // Check if the user already has a preference\n    const existingPreference = await db.user.findUnique({\n      where: {\n        id: userId,\n      },\n      include: {\n        preference: true,\n      },\n    });\n\n    if (existingPreference && existingPreference.preference) {\n      // If the preference exists, update the theme\n      await db.userPreference.update({\n        where: {\n          id: existingPreference.preference.id,\n        },\n        data: {\n          theme: theme,\n        },\n      });\n    } else {\n      // If the preference doesn't exist, create a new one for the user\n      await db.userPreference.create({\n        data: {\n          theme: theme,\n          User: {\n            connect: {\n              id: userId,\n            },\n          },\n        },\n      });\n    }\n\n    return theme;\n  } catch (e) {\n    console.log(e);\n  }\n};\n", "import { LoaderFunction, json, redirect } from '@remix-run/node';\nimport { useFetcher, useLoaderData } from '@remix-run/react';\nimport { getPage, getVersions } from '~/model/page';\n\nimport Header from '~/component/Layout/Header';\nimport { EditorContainer } from '~/features/Editor';\nimport { getUserSession } from '~/services/session.server';\nimport { findAllSuggestionByPageId } from '~/model/suggestion';\nimport { getText } from '~/model/text';\nimport { Version } from '@prisma/client';\nimport { CircleSpinnerOverlay } from 'react-spinner-overlay';\nimport useEditorInstance from '~/features/Editor/tiptap/useEditorInstance';\nimport { getAnnotations } from '~/model/annotation';\nimport TextHeader from '~/component/Layout/TextHeader';\nimport Menu from '~/component/menu/Menu';\nimport { findPostByTextIdAndPage } from '~/model/post';\nimport { listTranslations } from '~/model/translation';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const textId = parseInt(params.textId as string);\n  const order = parseInt(params.pageId as string);\n  const url = new URL(request.url);\n  const version = url.searchParams.get('version') as Version;\n  const searchParamsWith = url.searchParams.get('with') as String;\n  const thread = url.searchParams.get('thread') as string;\n  const versions = await getVersions(textId, order);\n  if (!version && versions?.length > 0) {\n    const currentSearchParams = new URL(request.url).searchParams;\n    if (!currentSearchParams.has('version')) {\n      currentSearchParams.append('version', versions[0].version);\n    }\n    return redirect(`${url.pathname}?${currentSearchParams.toString()}`);\n  }\n\n  const text = await getText(textId);\n  const page = await getPage(textId, order, version);\n  const annotations = await getAnnotations(page?.id!);\n  const user = await getUserSession(request);\n  const translations = searchParamsWith === 'Translations' ? await listTranslations(textId, page?.id!) : [];\n  const suggestions = searchParamsWith === 'Suggestion' ? await findAllSuggestionByPageId(page?.id!, thread) : [];\n  const posts = searchParamsWith === 'Post' ? await findPostByTextIdAndPage(textId, order, version) : [];\n  return json({\n    page,\n    user,\n    suggestions,\n    text,\n    order,\n    versions,\n    translations,\n    annotations,\n    posts,\n    pageId: page?.id,\n  });\n};\n\nexport default function Page() {\n  const data = useLoaderData<typeof loader>();\n  const { text, page } = data;\n  const saveTextFetcher = useFetcher();\n\n  let editor = useEditorInstance({ name: 'text' + text.id + 'page' + page.id, content: undefined, isEditable: false });\n  const withImage = !data.text.allow_post;\n\n  return (\n    <div className=\"flex flex-col\">\n      <Header editor={editor} />\n      <div className=\"flex\">\n        <div className=\"relative md:static flex w-full flex-col flex-1\" style={{ maxHeight: 'calc(100vh - 60px)' }}>\n          <TextHeader />\n          <div className=\" flex justify-between gap-4 transition-all flex-1 overflow-y-auto\">\n            <CircleSpinnerOverlay message={'updating text'} loading={saveTextFetcher.state !== 'idle'} />\n            <div className=\"w-full flex gap-2\">\n              <div\n                className={`${\n                  !withImage ? 'max-w-3xl' : 'w-full'\n                } justify-self-center p-2 dark:bg-gray-800 mx-auto font-monlam`}\n                id=\"textEditorContainer\"\n              >\n                {editor && (\n                  <EditorContainer editor={editor!} isSaving={false} page={page} saveTextFetcher={saveTextFetcher} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <Menu editor={editor} />\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { Editor, EditorContent } from '@tiptap/react';\nimport { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\n// import EditorSettings from \"./EditorSettings\";\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE_MOBILE } from '~/constants';\nimport { selectedTextOnEditor, ImageState } from '~/states';\nimport { checkUnknown, scrollThreadIntoView } from '../lib';\nimport Pagination from '~/component/UI/Pagination';\nimport { saveData } from '../lib/utils';\nimport { extractTextAndAnnotations, generateHtmlFromTextAndAnnotations } from '../lib/htmlParser';\nimport _ from 'lodash';\nimport ImageComponent from './ImageComponent';\nimport EditorMenu from './EditorMenu';\nimport { isSmallScreen } from '~/lib';\n\ntype EditorContainerProps = {\n  editor: Editor;\n  isSaving: boolean;\n  page: any;\n  saveTextFetcher: any;\n};\nfunction EditorContainer({ editor, isSaving, page, saveTextFetcher }: EditorContainerProps) {\n  const imageUrl = page.imageUrl;\n  const pageCount = page?.text.Page.length;\n  const pageId = page.id;\n  const { annotations, user, text } = useLoaderData();\n  const [Image, setImage] = useRecoilState(ImageState);\n  const [selection, setSelectionRange] = useRecoilState(selectedTextOnEditor);\n  const [searchParams, setSearchParams] = useSearchParams();\n  let searchString = searchParams.get('s') || '';\n  let thread = searchParams.get('thread') || '';\n  let saving = saveTextFetcher.state !== 'idle';\n\n  useEffect(() => {\n    let newContent = checkUnknown(page.content.replace(/[\\r\\n]+/g, '<p/><p>'));\n    let content = generateHtmlFromTextAndAnnotations(newContent, annotations);\n    setTimeout(() => {\n      if (editor.getText() === '') editor?.commands.setContent(content);\n    }, 2000);\n    setImage({ ...Image, url: imageUrl });\n  }, [annotations?.length, page.content]);\n\n  useEffect(() => {\n    if (!searchString || searchString.length === 0) {\n      editor.commands.setSearchTerm('');\n    }\n  }, [searchString]);\n\n  useEffect(() => {\n    let timer = scrollThreadIntoView(thread, `p_${thread}`);\n    editor.on('update', async ({ editor }) => {\n      let newContent = editor.getHTML();\n      let { text, annotations } = extractTextAndAnnotations(newContent);\n      if (text?.length > 100 && user) saveData(text, annotations, pageId, saveTextFetcher);\n    });\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [editor, thread]);\n\n  const handleImageLoaded = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    let height = e.target.height;\n    let width = e.target.width;\n    setImage({ ...Image, isPortrait: height > width });\n  };\n\n  const renderEditorContent = () => (\n    <EditorContent\n      editor={editor}\n      className=\"editor transition-all\"\n      style={{\n        fontSize: isSmallScreen ? DEFAULT_FONT_SIZE_MOBILE : DEFAULT_FONT_SIZE,\n        pointerEvents: isSaving ? 'none' : 'all',\n        color: saveTextFetcher.state !== 'idle' ? 'gray' : 'inherit',\n      }}\n    />\n  );\n\n  return (\n    <div className=\" mb-4  flex  shadow-sm\" style={{ flexDirection: Image.isPortrait ? 'row-reverse' : 'column' }}>\n      {Image.show && Image.url && <ImageComponent Image={Image} handleImageLoaded={handleImageLoaded} />}\n\n      <div style={{ zIndex: 0 }}>\n        <Header isSaving={isSaving} pageCount={pageCount} user={user} />\n        {!user && <div>changes won't get saved if you are not logged in</div>}\n        {!editor ? <LoadingIndicator /> : renderEditorContent()}\n        {editor && (\n          <EditorMenu\n            editor={editor}\n            selection={selection}\n            setSelectionRange={setSelectionRange}\n            setSearchParams={setSearchParams}\n            isPostAllowed={text.allow_post}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EditorContainer;\n\nconst LoadingIndicator = () => (\n  <div className=\"flex h-[400px] w-full animate-pulse justify-center\">\n    <div className=\"mr-2 h-full flex-1 bg-gray-300 dark:bg-gray-700\"></div>\n  </div>\n);\n\nconst Header = ({ isSaving, pageCount, user }) => (\n  <div className=\"text-light z-10 flex items-center justify-between px-2 py-4\">\n    <div className=\"flex w-full items-center justify-between gap-2\">\n      <div\n        className=\"textname flex items-center gap-2\"\n        style={{ fontSize: 'clamp(18px, 24px, 2.2vw)', fontWeight: 'bold' }}\n      >\n        {isSaving && <span className=\"animate-pulse text-sm font-light\">saving...</span>}\n      </div>\n      <Pagination pageCount={pageCount} />\n    </div>\n  </div>\n);\n", "import { Link, useLoaderData, useSearchParams } from '@remix-run/react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\ntype PaginationPropType = {\n  pageCount: number;\n};\n\nexport default function Pagination({ pageCount }: PaginationPropType) {\n  let data = useLoaderData();\n  let textId = data.text.id;\n  let order = parseInt(data.order);\n  let [searchParams,] = useSearchParams();\n  let version=searchParams.get('version')\n  let PreviousLink = `/text/${textId}/page/${order - 1}${version ? \"/?version=\"+version :''}`;\n  let nextLink = `/text/${textId}/page/${order + 1}${version ? \"/?version=\"+version:\"\"}`;\n  return (\n    <div className=\"flex justify-end gap-3\">\n      {order - 1 > 0 && (\n        <Link to={PreviousLink} className=\"mr-1 flex items-center gap-2 rounded  p-1\">\n          <FaArrowLeft />\n          previous\n        </Link>\n      )}\n      {order + 1 <= pageCount && (\n        <Link to={nextLink} className=\"mr-1 flex items-center gap-2 rounded  p-1\">\n          next\n          <FaArrowRight />\n        </Link>\n      )}\n    </div>\n  );\n}\n", "import { annotationType } from './htmlParser';\n\nexport const saveData = async (\n  textContent: string,\n  annotations: annotationType[],\n  pageId: string,\n  saveTextFetcher: any,\n) => {\n  const formData = new FormData();\n  formData.append('pageId', pageId);\n  formData.append('content', textContent);\n  formData.append('annotations', JSON.stringify(annotations));\n  saveTextFetcher.submit(formData, {\n    method: 'POST',\n    action: '/api/text',\n  });\n};\n", "export type annotationType = {\n  id: string | null;\n  start: number;\n  end: number;\n  type: string;\n  content: string | null;\n};\n\nexport function extractTextAndAnnotations(html: string) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n  let text = '';\n  const annotations: annotationType[] = [];\n  const walk = (node) => {\n    if (node.nodeType === 3) {\n      // Text node\n      const content = node.textContent || '';\n      if (node.parentNode.classList.contains('post') || node.parentNode.classList.contains('suggestion')) {\n        const start = text.length;\n        const end = start + content.length;\n        const type = node.parentNode.classList.contains('post')\n          ? 'P'\n          : node.parentNode.classList.contains('suggestion')\n          ? 'S'\n          : '';\n        const id = node.parentNode.getAttribute('id');\n        annotations.push({\n          start,\n          end,\n          type,\n          id,\n          content,\n        });\n      }\n      text += content;\n    } else {\n      for (let child of node.childNodes) {\n        walk(child);\n      }\n    }\n  };\n  walk(doc.body);\n  return { text, annotations };\n}\n\nexport function generateHtmlFromTextAndAnnotations(text: string, annotations: annotationType[]) {\n  let html = text;\n  annotations.sort((a, b) => b.start - a.start); // Sort annotations in descending order\n\n  annotations.forEach((annotation) => {\n    let tagType;\n    switch (annotation.type) {\n      case 'P':\n        tagType = 'post';\n        break;\n      case 'S':\n        tagType = 'suggestion';\n        break;\n    }\n    const tagStart = `<${tagType} class=\"${tagType}\" id=\"${annotation.id}\">`;\n    const tagEnd = `</${tagType}>`;\n\n    html = html.slice(0, annotation.start) + tagStart + annotation.content + tagEnd + html.slice(annotation.end);\n  });\n\n  html = '<p>' + html + '</p>'; // Wrap the modified html with <p> tags\n  return html;\n}\n", "import { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch';\nimport Controls from './Controls';\n\ntype ImageComponentProps = {\n  Image: any;\n  handleImageLoaded: () => void;\n};\n\nconst ImageComponent = ({ Image, handleImageLoaded }: ImageComponentProps) => (\n  <div\n    className=\"relative flex w-full max-w-full justify-center bg-gray-100\"\n    onMouseDown={(e) => (e.target.style.cursor = 'grabbing')}\n    onMouseUp={(e) => (e.target.style.cursor = 'grab')}\n  >\n    <TransformWrapper>\n      {(utils) => (\n        <>\n          <Controls {...utils} url={Image.url} />\n          <TransformComponent\n            wrapperStyle={{ zIndex: 10, width: '100%', maxHeight: '40vh', cursor: 'grab' }}\n            contentStyle={{ width: '100%', maxHeight: '100%' }}\n          >\n            <img\n              alt=\"Text Image\"\n              src={Image.url}\n              className=\"text-image border-2 border-gray-200\"\n              style={{ maxHeight: '100%', objectFit: 'contain' }}\n              onLoad={handleImageLoaded}\n            />\n          </TransformComponent>\n        </>\n      )}\n    </TransformWrapper>\n  </div>\n);\n\nexport default ImageComponent;\n", "import React, { useEffect } from 'react';\n\nconst Controls = ({ zoomIn, zoomOut, resetTransform, url }: any) => {\n  useEffect(() => {\n    resetTransform();\n  }, [url]);\n\n  return (\n    <div className=\"absolute right-3 top-0 z-20 flex gap-3  \" style={{ float: 'right' }}>\n      <button className=\"tool-image\" onClick={() => zoomIn()}>\n        Zoom In +\n      </button>\n      <button className=\"tool-image\" onClick={() => zoomOut()}>\n        Zoom Out -\n      </button>\n      <button className=\"tool-image\" onClick={() => resetTransform()}>\n        reset\n      </button>\n    </div>\n  );\n};\n\n\nexport default Controls;", "import { useLoaderData } from '@remix-run/react';\nimport { Editor } from '@tiptap/core';\nimport { BubbleMenu } from '@tiptap/react';\nimport { Button } from 'flowbite-react';\nimport React from 'react';\nimport ButtonGroup from '~/component/UI/ButtonGroups';\nimport { isSmallScreen } from '~/lib';\n\ntype EditorMenuProps = {\n  editor: Editor;\n  selection: any;\n  setSelectionRange: any;\n  setSearchParams: any;\n  isPostAllowed?: boolean;\n};\n\nfunction EditorMenu({ editor, selection, setSelectionRange, setSearchParams, isPostAllowed }: EditorMenuProps) {\n  const { user, text } = useLoaderData();\n  function handleSuggestionClick() {\n    setSelectionRange({\n      ...selection,\n      type: '',\n    });\n    setSearchParams((p) => {\n      p.set('with', 'Suggestion');\n      return p;\n    });\n  }\n  function handleDeleteMark() {\n    if (editor.isActive('post')) {\n      editor.commands.unsetPost();\n    }\n    if (editor.isActive('suggestion')) {\n      editor.commands.unsetSuggestion();\n    }\n    editor.commands.setTextSelection(0);\n  }\n\n  const handleBubbleClick = (type: string) => {\n    if (selection.start)\n      setSelectionRange({\n        ...selection,\n        type,\n      });\n    setSearchParams((p) => {\n      p.set('with', 'Post');\n      return p;\n    });\n  };\n\n  const InSelectionLimit = selection.content.length > 0 && selection.content.length < 239;\n  const isTextAdmin = text.userId !== user?.id;\n  return (\n    <>\n      {editor && user && (\n        <BubbleMenu\n          shouldShow={({ editor }) => {\n            const postmarkType = editor.schema.marks.post;\n            const suggestmarkType = editor.schema.marks.suggestion;\n\n            // check if the mark is partially included in the selection\n            const selection = editor.state.selection;\n            if (editor.isActive('suggestion') || editor.isActive('post')) {\n              return true;\n            } else if (\n              editor.state.doc.rangeHasMark(selection.$from.pos, selection.$to.pos, postmarkType) ||\n              editor.state.doc.rangeHasMark(selection.$from.pos, selection.$to.pos, suggestmarkType)\n            ) {\n              return false;\n            } else {\n              return true;\n            }\n          }}\n          editor={editor}\n          tippyOptions={{\n            appendTo: 'parent',\n            placement: isSmallScreen ? 'bottom' : 'top',\n          }}\n        >\n          {!editor.isActive('suggestion') && !editor.isActive('post') ? (\n            InSelectionLimit && (\n              <ButtonGroup>\n                <Button\n                  title=\"suggestion\"\n                  type=\"button\"\n                  color=\"gray\"\n                  onClick={() => handleSuggestionClick()}\n                  label=\"Suggestion\"\n                  className=\"pr-4 pl-2\"\n                />\n                <Button\n                  title=\"comment\"\n                  color=\"gray\"\n                  onClick={() => handleBubbleClick('comment')}\n                  label=\"Comment\"\n                  type=\"button\"\n                  hidden={!isPostAllowed}\n                  className=\"px-2\"\n                />\n                <Button\n                  type=\"button\"\n                  title=\"question\"\n                  color=\"gray\"\n                  onClick={() => handleBubbleClick('question')}\n                  label=\"Question\"\n                  hidden={!isPostAllowed}\n                  className=\"pr-4\"\n                />\n              </ButtonGroup>\n            )\n          ) : (\n            <Button\n              title=\"delete\"\n              type=\"button\"\n              color=\"gray\"\n              onClick={() => handleDeleteMark()}\n              label=\"Delete\"\n              className={`disabled:opacity-50 disabled:cursor-not-allowed ${isTextAdmin && 'hidden'}`}\n            />\n          )}\n        </BubbleMenu>\n      )}\n    </>\n  );\n}\n\nexport default EditorMenu;\n", "import React, { ReactElement } from 'react';\n\ninterface ButtonGroupProps {\n  children: ReactElement[] | ReactElement;\n  className?: string;\n}\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({ children, className }) => {\n  return (\n    <div className={'inline-flex ' + className ?? ''}>\n      {React.Children.map(children, (child, index) => {\n        if (React.isValidElement(child)) {\n          // Clone the child element, adding additional props or modifying existing ones\n          return React.cloneElement(child, {\n            className: `${child.props.className} ${\n              index !== React.Children.count(children) - 1 ? 'rounded-r-none' : ''\n            } ${index !== 0 ? 'rounded-l-none' : ''} `,\n            // Add other props or logic as necessary\n          });\n        }\n        return child;\n      })}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n", "import EditorContainer from './component/EditorContainer';\nimport SearchString from './component/SearchString.client';\n\nexport { EditorContainer, SearchString };\n", "import { db } from '~/services/db.server';\n\nexport async function findAllSuggestionByPageId(pageId: string, thread: string) {\n  try {\n    if (!thread) return [];\n\n    let data = await db.suggestion.findMany({\n      where: {\n        AND: [\n          { pageId },\n          {\n            threadId: thread,\n          },\n        ],\n      },\n      include: {\n        user: true,\n        likedBy: true,\n        SuggestionComment: {\n          include: {\n            author: true,\n          },\n        },\n      },\n      orderBy: [{ likedBy: { _count: 'desc' } }, { created_at: 'desc' }],\n    });\n    return data;\n  } catch (e) {\n    throw new Error('error fetching suggestion' + e);\n  }\n}\n\nexport async function getSuggestionWithThreadId(threadId: string) {\n  try {\n    let data = await db.suggestion.findMany({\n      where: {\n        threadId,\n      },\n      include: {\n        user: true,\n        likedBy: true,\n        SuggestionComment: {\n          include: {\n            author: true,\n          },\n        },\n      },\n      orderBy: [{ created_at: 'asc' }, { likedBy: { _count: 'desc' } }],\n    });\n    return data;\n  } catch (e) {\n    throw new Error('error fetching suggestion' + e);\n  }\n}\n\nexport async function createSuggestion({ oldValue, newValue, textId, pageId, userId, threadId, audioUrl }) {\n  try {\n    let data = await db.suggestion.create({\n      data: {\n        oldValue,\n        newValue,\n        textId: parseInt(textId),\n        pageId: pageId,\n        userId,\n        threadId,\n        audioUrl,\n      },\n    });\n    return data;\n  } catch (e) {\n    throw new Error('suggestion cannot be created on DB' + e);\n  }\n}\n\n//update\n\nexport async function updateSuggestionLike(id: string, userId: string, payload: boolean) {\n  try {\n    let response = await db.suggestion.update({\n      data: {\n        likedBy: payload\n          ? {\n              connect: {\n                id: userId,\n              },\n            }\n          : {\n              disconnect: {\n                id: userId,\n              },\n            },\n      },\n      where: {\n        id,\n      },\n      select: {\n        likedBy: true,\n      },\n    });\n    return response;\n  } catch (e) {\n    throw new Error('update suggestion like error: ' + e.message);\n  }\n}\n\nexport async function findSuggestionByUserLiked(id: string, userId: string) {\n  try {\n    let f = await db.suggestion.findFirst({\n      where: {\n        id: id,\n        likedBy: {\n          some: {\n            id: userId,\n          },\n        },\n      },\n    });\n    return f;\n  } catch (e) {\n    throw new Error('could not find suggestion by userliked' + e.message);\n  }\n}\n\nexport async function updateSuggestionContent(id: string, newValue: string) {\n  try {\n    console.log(id);\n    let response = await db.suggestion.update({\n      where: {\n        id,\n      },\n      data: {\n        newValue,\n      },\n    });\n    return response;\n  } catch (e) {\n    throw new Error('update suggestion like error: ' + e.message);\n  }\n}\nexport async function findSuggestionWithMostLikes(id: string) {\n  try {\n    const mostLikedSuggestion = await db.suggestion.findFirst({\n      where: {\n        threadId: id,\n      },\n      orderBy: [\n        {\n          likedBy: {\n            _count: 'desc',\n          },\n        },\n        {\n          created_at: 'desc',\n        },\n      ],\n      take: 1,\n    });\n    return mostLikedSuggestion;\n  } catch (e) {\n    console.warn(e);\n  }\n}\n//delete suggestion\nexport async function deleteSuggestion(id: string) {\n  try {\n    let data = await db.suggestion.delete({\n      where: {\n        id,\n      },\n    });\n    let remaining = await getSuggestionWithThreadId(data.threadId);\n    return remaining?.length;\n  } catch (e) {\n    throw new Error('cannot delete post ', e);\n  }\n}\n", "// find text by textId\n\nimport { db } from '~/services/db.server';\n// get all text\nexport async function getText(id: number) {\n  try {\n    let text = await db.text.findUnique({\n      where: {\n        id: id,\n      },\n      select: {\n        id: true,\n        name: true,\n        allow_post: true,\n        userId: true,\n      },\n    });\n    return text;\n  } catch (e: any) {\n    throw new Error('fetching text error' + e.message);\n  }\n}\n\nexport async function findAllText(id = true, name = true, content = false) {\n  try {\n    let text = await db.text.findMany({\n      select: {\n        id,\n        name,\n        userId: true,\n        author: true,\n      },\n    });\n    return text;\n  } catch (e: any) {\n    throw new Error('fetching text error' + e.message);\n  }\n}\nexport async function findLatestText() {\n  try {\n    let texts = await db.text.findMany({\n      select: {\n        id: true,\n        name: true,\n        Page: {\n          select: {\n            id: true,\n            version: true,\n          },\n        },\n        allow_post: true,\n      },\n      take: 4,\n      orderBy: {\n        createdAt: 'desc',\n      },\n    });\n\n    return {\n      count: texts.length,\n      texts,\n    };\n  } catch (e) {\n    throw new Error('fetching text error' + e.message);\n  }\n}\nexport async function findAllTextWithDetail() {\n  try {\n    let text = await db.text.findMany({\n      include: {\n        author: true,\n        Page: true,\n      },\n    });\n    return text;\n  } catch (e: any) {\n    throw new Error('fetching text error' + e.message);\n  }\n}\n\n// find text by textId\nexport async function findTextByPageId(pageId: string) {\n  try {\n    const text = await db.page.findFirst({\n      where: {\n        id: pageId,\n      },\n      select: {\n        content: true,\n      },\n    });\n    if (text === null) throw new Error('text not available');\n    return text;\n  } catch (e: any) {\n    throw new Error('cannot find text with error ' + e.message);\n  }\n}\n\n//delete text\nexport async function deleteText(id: string) {\n  try {\n    let res = await db.text.delete({\n      where: {\n        id: parseInt(id),\n      },\n    });\n    return res;\n  } catch (e: any) {\n    throw new Error('delete text error' + e.message);\n  }\n}\n", "import { db } from '~/services/db.server';\n\nexport const updateAnnotations = async (pageId: string, annotations: string) => {\n  let parsedAnnotations;\n  try {\n    parsedAnnotations = JSON.parse(annotations);\n  } catch (e) {\n    throw new Error('Invalid JSON format');\n  }\n\n  // Fetch existing annotations from the database for the given pageId\n  const existingAnnotations = await db.annotations.findMany({\n    where: { pageId },\n  });\n\n  // Prepare transactions for upserting annotations\n  const upsertTransactions = parsedAnnotations.map((a) => {\n    const { id, ...otherData } = a;\n    return db.annotations.upsert({\n      where: { id },\n      update: { ...otherData, pageId },\n      create: { id, ...otherData, pageId },\n    });\n  });\n\n  // Find annotations to be deleted\n  const deleteTransactions = existingAnnotations\n    .filter((ea) => !parsedAnnotations.some((pa) => pa.id === ea.id))\n    .map((a) => db.annotations.delete({ where: { id: a.id } }));\n\n  // Combine upsert and delete transactions\n  const transactions = [...upsertTransactions, ...deleteTransactions];\n\n  try {\n    const annotationsRes = await db.$transaction(transactions);\n    return annotationsRes;\n  } catch (e) {\n    throw new Error(`Error processing annotations: ${e.message}`);\n  }\n};\nexport const getAnnotations = async (pageId: string) => {\n  try {\n    let annotationsRes = await db.annotations.findMany({\n      where: {\n        pageId: pageId,\n      },\n    });\n    return annotationsRes;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n", "import { Link, useLoaderData, useLocation } from '@remix-run/react';\nimport { HEADER_HEIGHT } from '~/constants';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { IoIosOptions } from 'react-icons/io';\nfunction TextHeader() {\n  const { text } = useLoaderData();\n  let loc = useLocation();\n  return (\n    <div className=\"bg-gray-50 dark:bg-gray-500 flex justify-between items-center border-t py-3\" style={{ height: 60 }}>\n      <div className=\"flex justify-between gap-4 items-center lg:px-9 px-3 max-w-3xl w-full mx-auto\">\n        <Link to=\"/\">\n          <AiOutlineClose size={30} className=\"text-gray-500 dark:text-white\" />\n        </Link>\n        <div className=\"relative md:-top-1 font-bold\" style={{ fontSize: 'clamp(18px, 24px, 2.2vw)' }}>\n          {text.name}\n        </div>\n        <Link to={loc.pathname + '?with=all'}>\n          <IoIosOptions size={30} className=\"text-gray-500 dark:text-white\" />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default TextHeader;\n", "import { useSearchParams } from '@remix-run/react';\nimport MenuHeader from './MenuHeader';\nimport MenuHome from './MenuHome';\nimport TableOfContents from './TableOfContent';\nimport Search from './Search';\nimport Translations from './Translations';\nimport Post from './Post';\nimport { Editor } from '@tiptap/react';\nimport Suggestion from './Suggestion';\nimport { useEffect } from 'react';\n\nfunction Menu({ editor }: { editor: Editor | null }) {\n  let [searchParams] = useSearchParams();\n  let menu = searchParams.get('with');\n  useEffect(() => {\n    if (menu !== 'Search' && editor) {\n      editor.commands?.setSearchTerm(''); //reset search on params change\n    }\n  }, [menu]);\n  if (!menu) return null;\n  return (\n    <div\n      className=\"w-full absolute md:static flex flex-col md:max-w-[30%] pb-4\"\n      style={{ maxHeight: 'calc(100vh - 60px)' }}\n    >\n      <MenuHeader />\n      {menu === 'all' && <MenuHome />}\n      {menu === 'TableOfContent' && <TableOfContents editor={null} />}\n      {menu === 'Search' && <Search editor={editor} />}\n      {menu === 'Translations' && <Translations />}\n      {menu === 'Post' && <Post editor={editor} />}\n      {menu === 'Suggestion' && editor && <Suggestion editor={editor} />}\n    </div>\n  );\n}\n\nexport default Menu;\n", "import { useSearchParams } from '@remix-run/react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\n\nfunction MenuHeader() {\n  let [searchParams, setSearchParams] = useSearchParams();\n  let header = searchParams.get('with');\n\n  function handleBack() {\n    setSearchParams((p) => {\n      p.set('with', 'all');\n      p.delete('thread');\n      return p;\n    });\n  }\n  return (\n    <div className=\"w-full uppercase text-gray-500 h-[60px] bg-gray-100 dark:text-white dark:bg-gray-400 flex items-center justify-between px-6 py-4\">\n      {header === 'all' ? (\n        'Resources'\n      ) : (\n        <div className=\"flex items-center gap-2\">\n          <button type=\"button\" onClick={handleBack}>\n            <IoIosArrowRoundBack size={30} />\n          </button>\n          {header}\n        </div>\n      )}\n      <button type=\"button\" onClick={() => setSearchParams({})}>\n        <AiOutlineCloseCircle />\n      </button>\n    </div>\n  );\n}\n\nexport default MenuHeader;\n", "import { useSearchParams } from '@remix-run/react';\n\nfunction MenuHome() {\n  let li_className = 'hover:text-gray-500 cursor-pointer';\n  const [, setSearchParams] = useSearchParams();\n  function handleMenuClick(value: string) {\n    setSearchParams((p) => {\n      p.set('with', value);\n      return p;\n    });\n  }\n  return (\n    <div className=\"border-l p-3 flex-1\">\n      <ul className=\"p-2 text-gray-400 capitalize text-lg\">\n        <li className={li_className}>\n          <button type=\"button\" onClick={() => handleMenuClick('TableOfContent')}>\n            Table of Contents\n          </button>\n        </li>\n        <li className={li_className}>\n          <button type=\"button\" onClick={() => handleMenuClick('Search')}>\n            Search in Text\n          </button>\n        </li>\n        <li className={li_className}>\n          <button type=\"button\" onClick={() => handleMenuClick('Translations')}>\n            Translations\n          </button>\n        </li>\n        <li className={li_className}>\n          <button type=\"button\" onClick={() => handleMenuClick('Post')}>\n            Post\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default MenuHome;\n", "import { useLoaderData, Link, useLocation } from '@remix-run/react';\nimport { Editor } from '@tiptap/react';\nimport React, { useState } from 'react';\nimport { GrClose } from 'react-icons/gr';\nimport uselitteraTranlation from '~/locales/useLitteraTranslations';\n\ntype tableProps = {\n  editor: Editor | null;\n};\n\nconst TableOfContents = ({ editor }: tableProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isVersionOpen, setIsVersionOpen] = useState(true);\n  const data = useLoaderData();\n  const translation: any = uselitteraTranlation();\n  const handleDropdownToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleVersionToggle = () => {\n    setIsVersionOpen(!isVersionOpen);\n  };\n\n  const handleJump = (start: number) => {\n    editor?.chain().setTextSelection(start).focus().scrollIntoView().run();\n  };\n  return (\n    <div className=\"z-50 w-full bg-gray-100 p-4 dark:bg-gray-600 flex-1\">\n      <div className=\"relative\">\n        <button\n          className=\"mb-1 flex w-full items-center justify-between rounded-lg bg-gray-100 p-4 px-4 py-2 shadow dark:bg-gray-700\"\n          onClick={handleDropdownToggle}\n        >\n          Chapter 1\n          <svg\n            className={`ml-2 h-4 w-4 transform ${!isOpen ? 'rotate-90' : 'rotate-0'}`}\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <ul className=\"ml-4 cursor-pointer\">\n            <li onClick={() => handleJump(45)}>Section 1.1</li>\n            <li onClick={() => handleJump(1845)}>Section 1.2</li>\n            <li onClick={() => handleJump(4445)}>Section 1.3</li>\n          </ul>\n        )}\n      </div>\n      {data.versions.length > 0 && (\n        <div className=\"relative\">\n          <button\n            className=\"mb-1 flex w-full items-center justify-between rounded-lg bg-white px-4 py-2 shadow dark:bg-gray-700\"\n            onClick={handleVersionToggle}\n          >\n            versions\n            <svg\n              className={`ml-2 h-4 w-4 transform ${!isVersionOpen ? 'rotate-90' : 'rotate-0'}`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n            </svg>\n          </button>\n          {isVersionOpen &&\n            data.versions.map(({ version, count }: any, index: number) => {\n              return (\n                <div className=\"mr-3\" key={version + index}>\n                  {translation[version]}\n                  <div className=\"flex gap-2\">\n                    {new Array(count).fill(0).map((_, index) => {\n                      let location = useLocation();\n                      let textId = location.pathname.split('/')[2];\n                      let page = index + 1;\n                      return (\n                        <div key={index + 'pages'} className=\"rounded-sm bg-slate-100 p-1 shadow hover:bg-yellow-200\">\n                          <Link to={`/text/${textId}/page/${page}/?version=${version}`}>{page}</Link>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      )}\n      {/* Add more chapters here */}\n    </div>\n  );\n};\n\nexport default TableOfContents;\n", "import { Link, useSearchParams } from '@remix-run/react';\nimport searchInstance from '../hooks/searchInstance';\nimport { useState } from 'react';\nimport { Editor } from '@tiptap/react';\n\nfunction SearhList({ editor }: { editor: Editor }) {\n  let [param, setParam] = useSearchParams();\n  let searchTerm = param.get('s');\n  let data = searchInstance();\n\n  const handleSearch = (list) => {\n    if (list?.at) editor?.chain().focus().setTextSelection(list.at).scrollIntoView().run();\n  };\n\n  return (\n    <div className=\"flex-1 h-full p-2\">\n      <div>\n        {data.map((list, index) => {\n          const parts = list.context.split(new RegExp(`(${searchTerm})`, 'gi'));\n          return (\n            <div key={index} className=\"p-2 border rounded-md mb-2 cursor-pointer\" onClick={() => handleSearch(list)}>\n              {parts.map((part, partIndex) => {\n                // Check if the part is the search text\n                const isSearchText = part === searchTerm;\n                return (\n                  <span key={partIndex}>\n                    {isSearchText ? (\n                      // Wrap search text with spaces in a <strong> tag\n                      <strong>{part}</strong>\n                    ) : (\n                      // Render non-search text normally\n                      <span>{part}</span>\n                    )}\n                  </span>\n                );\n              })}\n              <div className=\"text-xs\">{list.textName && <span>Text Name:{list.textName}</span>}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default SearhList;\n", "import { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { checkUnknown } from '~/features/Editor/lib';\n\nfunction searchInstance() {\n  let { page } = useLoaderData();\n  let fullText = checkUnknown(page.content.replace(/[\\r\\n]+/g, '<p/><p>'));\n  let [param, setParam] = useSearchParams();\n  let searchTerm = param.get('s');\n  if (searchTerm !== null) {\n    let data = findOccurrencesWithContext(fullText, searchTerm);\n    return data;\n  }\n  return [];\n}\n\nexport default searchInstance;\n\nfunction findOccurrencesWithContext(fullText: string, targetString: string | null, contextRange = 20) {\n  const occurrences = [];\n  // Check if fullText or targetString is undefined or null\n  if (!fullText || !targetString) {\n    console.error(fullText, targetString);\n    return occurrences;\n  }\n  const targetLength = targetString.length;\n\n  let index = fullText.indexOf(targetString);\n  while (index !== -1) {\n    const start = Math.max(0, index - contextRange);\n    const end = Math.min(fullText.length, index + targetLength + contextRange);\n    const at = fullText.indexOf(targetString, index);\n\n    const occurrence = {\n      start,\n      end,\n      at,\n      context: fullText.substring(start, end),\n    };\n\n    occurrences.push(occurrence);\n    index = fullText.indexOf(targetString, index + 1);\n  }\n\n  return occurrences;\n}\n", "import { Editor } from '@tiptap/react';\nimport { SearchString } from '~/features/Editor';\n\nimport SearchList from './SearchList';\n\nfunction Search({ editor }: { editor: Editor | null }) {\n  if (!editor) return null;\n  return (\n    <div className=\"flex flex-col flex-1 overflow-y-auto\">\n      <SearchString editor={editor} />\n      <SearchList editor={editor} />\n    </div>\n  );\n}\n\nexport default Search;\n", "import { Link, useFetcher, useLoaderData } from '@remix-run/react';\nimport { Button } from 'flowbite-react';\nimport { useEffect, useState } from 'react';\nimport { AiFillDelete } from 'react-icons/ai';\nimport TranslationUploader from './TranslationUploader';\nfunction Translations() {\n  let { text, page, translations } = useLoaderData();\n  const [upload, setUpload] = useState(false);\n\n  let fetcher = useFetcher();\n  useEffect(() => {\n    if (fetcher.data) {\n      setUpload(false);\n    }\n  }, [fetcher?.data]);\n\n  let handleDelete = (id) => {\n    fetcher.submit(\n      { id },\n      {\n        method: 'DELETE',\n        action: '/api/translation',\n      },\n    );\n  };\n\n  return (\n    <div className=\"relative\">\n      {upload ? (\n        <TranslationUploader fetcher={fetcher} />\n      ) : (\n        <Button\n          onClick={() => setUpload(true)}\n          size={'sm'}\n          className=\"bg-green-400 rounded shadow-sm text-white hover:bg-green-500 fixed bottom-5 right-5\"\n        >\n          + upload\n        </Button>\n      )}\n      <div className=\"mt-3 mx-3 flex flex-col gap-3\">\n        {translations.length === 0 && <div className=\"text-red-500 mx-3\">No translation yet</div>}\n        {translations?.map((translation, index) => {\n          let url = `/text/${text.id}/page/${page.order}/translation/${translation.id}`;\n          return (\n            <div\n              key={'translation-' + index}\n              className=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col w-full px-3 py-2\"\n            >\n              <div className=\"w-full flex justify-between\">\n                <Link to={url} className=\"flex-1\">\n                  <div>\n                    {translation?.language} - {translation.userText.name}\n                    <div className=\"text-sm font-light \">{translation.userText.user.username}</div>\n                  </div>\n                </Link>\n                <Button onClick={() => handleDelete(translation.id)} className=\"bg-red-400 hover:bg-red-500\">\n                  <AiFillDelete />\n                </Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Translations;\n", "import { useState, useEffect, useRef } from 'react';\nimport toast from 'react-hot-toast';\nimport { LANGUAGE_OPTION_TRANSLATION } from '~/constants';\nimport { useTxtUpload } from '../hooks/useTxtUpload';\nimport { useLoaderData } from '@remix-run/react';\nimport { Card, TextInput } from 'flowbite-react';\nimport { formatBytes } from '~/lib/formatSize';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nfunction TranslationUploader({ fetcher }: { fetcher: any }) {\n  const { acceptedFiles, fileContent, getRootProps, getInputProps, setFileContent } = useTxtUpload();\n  let { text, page } = useLoaderData();\n  let textInputRef = useRef<HTMLInputElement>(null);\n  const [title, setTitle] = useState('');\n  const [language, setLanguage] = useState('english');\n  let handleSubmit = () => {\n    if (title === '' || !title) return toast('please enter title');\n    fetcher.submit(\n      {\n        content: fileContent,\n        textId: text.id,\n        pageId: page.order,\n        name: title,\n        language,\n      },\n      {\n        method: 'POST',\n        action: '/api/translation',\n      },\n    );\n    setFileContent('');\n    setTitle('');\n  };\n  useEffect(() => {\n    if (fileContent !== '') {\n      textInputRef.current?.focus();\n    }\n  }, [fileContent]);\n\n  // when user click close button - reset the text input and file content\n  const closeFileUpload = () => {\n    setFileContent('');\n    setTitle('');\n  };\n  return (\n    <div className=\"flex flex-col  gap-3\">\n      {fileContent !== '' ? (\n        <Card>\n          <div className=\"flex justify-between\">\n            <h4>\n              File: {acceptedFiles[0].name} , {formatBytes(acceptedFiles[0].size)}\n            </h4>\n            <button type=\"button\" onClick={closeFileUpload}>\n              <AiOutlineCloseCircle />\n            </button>\n          </div>\n          <TextInput\n            ref={textInputRef}\n            placeholder=\"title\"\n            required\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\" htmlFor=\"selectionLanguage\">\n            choose translation language\n          </label>\n          <select\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n            id=\"selectionLanguage\"\n            placeholder=\"language\"\n            value={language}\n            onChange={(e) => setLanguage(e.target.value)}\n          >\n            {LANGUAGE_OPTION_TRANSLATION.map((option) => {\n              return (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n          <button\n            type=\"button\"\n            onClick={handleSubmit}\n            className=\"bg-green-400 rounded shadow-sm p-2 text-white hover:bg-green-500\"\n          >\n            upload translation\n          </button>\n        </Card>\n      ) : (\n        <div\n          {...getRootProps({\n            className: 'dropzone',\n          })}\n        >\n          <input {...getInputProps()} accept=\".txt\" />\n          <p>Drag 'n' drop a .TXT files here</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TranslationUploader;\n", "import { useEffect, useMemo, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n};\n\nconst focusedStyle = {\n  borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744',\n};\n\nexport const useTxtUpload = () => {\n  const { acceptedFiles, getRootProps, getInputProps, isFocused, isDragAccept, isDragReject } = useDropzone({\n    accept: {\n      'text/*': ['.txt'],\n    },\n    maxFiles: 1,\n  });\n  const [fileContent, setFileContent] = useState('');\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isFocused ? focusedStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isFocused, isDragAccept, isDragReject],\n  );\n\n  useEffect(() => {\n    let file = acceptedFiles[0];\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        const text = event.target.result;\n        setFileContent(text);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [acceptedFiles[0]]);\n\n  return {\n    acceptedFiles,\n    fileContent,\n    getRootProps: (data) => getRootProps({ ...data, style }),\n    getInputProps,\n    setFileContent,\n  };\n};\n", "export function formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n", "import { useState, useCallback } from 'react';\nimport { useFetcher, useLoaderData, useSearchParams } from '@remix-run/react';\nimport uselitteraTranlation from '~/locales/useLitteraTranslations';\nimport Replies from './Replies';\nimport ReplyForm from './ReplyForm';\nimport { Editor } from '@tiptap/react';\nimport { PostType } from '~/model/type';\nimport copyToClipboard from '~/lib/copyToClipboard';\nimport { FormWithAudio } from './component/FormWithAudio';\nimport { timeAgo } from '~/lib';\nimport { ForumLink } from '~/constants';\nimport { Dropdown } from 'flowbite-react';\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\nimport { AudioPlayer } from '../Media';\nimport { ClientOnly } from 'remix-utils/client-only';\nimport { AiFillLike } from 'react-icons/ai';\ntype PostPropType = {\n  isOptimistic: boolean;\n  post: PostType;\n  showDivider: boolean;\n  editor?: Editor;\n};\n\nfunction Post({ isOptimistic, post, showDivider, editor }: PostPropType) {\n  const {\n    id,\n    creatorUser,\n    created_at,\n    content,\n    likedBy,\n    topic_id: topicId,\n    type,\n    replyCount,\n    isSolved,\n    threadId,\n    audioUrl,\n    selection,\n  } = post!;\n  const [openReply, setOpenReply] = useState(false);\n  const [showReplies, setShowReplies] = useState(false);\n  const [effect, setEffect] = useState(false);\n  const [ReplyCount, setReplyCount] = useState(replyCount);\n  const [edit, setEdit] = useState(false);\n  const { user } = useLoaderData();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const fetcher = useFetcher();\n  const translation = uselitteraTranlation();\n\n  const isSelected = threadId === searchParams?.get('thread');\n  let likedByMe = user ? likedBy.some((l) => l && l.username === user.username) : false;\n  const handleSelectPost = useCallback(\n    (id: string) => {\n      setSearchParams((p) => {\n        p.set('with', 'Post');\n        p.set('thread', id);\n        return p;\n      });\n    },\n    [threadId],\n  );\n\n  let likeCount = fetcher.data ? fetcher.data?.length : likedBy.length;\n  let likeInFetcher = fetcher?.formData?.get('like');\n\n  likedByMe = likeInFetcher === 'true' ? true : likeInFetcher === 'false' ? false : likedByMe;\n  if (fetcher.state === 'submitting') {\n    likedByMe ? likeCount++ : likeCount--;\n  }\n  function handleLikeClick() {\n    setEffect(true);\n    if (user) {\n      fetcher.submit(\n        {\n          action: 'like',\n          id,\n          userId: user.id,\n          like: !likedByMe ? 'true' : 'false',\n        },\n        { method: 'PATCH', action: '/api/post', encType: 'multipart/form-data' },\n      );\n    }\n  }\n  async function deletePost() {\n    if (user.username !== creatorUser?.username) return alert('you can not delete post');\n    let decision = confirm('do you want to delete the post');\n    if (decision) {\n      fetcher.submit(\n        {\n          id,\n          threadId,\n        },\n        {\n          action: '/api/post',\n          method: 'DELETE',\n        },\n      );\n    } else {\n      console.log('cancelled');\n    }\n  }\n\n  function handleShare() {\n    let url;\n    url = window.location.href + '&thread=' + threadId;\n    if (window.location.href.includes('thread=')) url = window.location.href;\n    copyToClipboard(url);\n    alert('url coppied on clipboard');\n  }\n\n  function handleEdit() {\n    if (user.username === creatorUser?.username) setEdit(true);\n  }\n\n  return (\n    <div\n      className={`${fetcher.formMethod === 'DELETE' && 'hidden'} relative px-6 pt-6 pb-4 ${\n        isSelected ? 'bg-[#F3F4F6] dark:bg-gray-800' : 'bg-white dark:bg-gray-700'\n      }`}\n      // style={{\n      //   backgroundColor: isSelected ? '#F3F4F6' : 'white',\n      // }}\n      id={`p_${threadId}`}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center justify-start space-x-3\">\n          <img className=\"h-8 w-8 rounded-full\" src={creatorUser?.avatarUrl} alt=\"Extra small avatar\"></img>\n          <div className=\"flex flex-col items-start\">\n            <div className=\"font-serif text-sm font-medium leading-tight text-gray-900 dark:text-gray-200\">\n              {creatorUser?.name}\n            </div>\n            <p className=\"flex-1 text-right text-sm leading-tight text-gray-500 dark:text-gray-200\">\n              {timeAgo(created_at)!}\n            </p>\n          </div>\n          {isSolved && (\n            <svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M13.707 0.293031C13.8945 0.480558 13.9998 0.734866 13.9998 1.00003C13.9998 1.26519 13.8945 1.5195 13.707 1.70703L5.70704 9.70703C5.51951 9.8945 5.26521 9.99982 5.00004 9.99982C4.73488 9.99982 4.48057 9.8945 4.29304 9.70703L0.293041 5.70703C0.110883 5.51843 0.0100885 5.26583 0.0123669 5.00363C0.0146453 4.74143 0.119814 4.49062 0.305222 4.30521C0.490631 4.1198 0.741443 4.01464 1.00364 4.01236C1.26584 4.01008 1.51844 4.11087 1.70704 4.29303L5.00004 7.58603L12.293 0.293031C12.4806 0.10556 12.7349 0.000244141 13 0.000244141C13.2652 0.000244141 13.5195 0.10556 13.707 0.293031Z\"\n                fill=\"#046C4E\"\n              />\n            </svg>\n          )}\n        </div>\n        <Dropdown\n          renderTrigger={() => (\n            <div>\n              <HiOutlineDotsHorizontal className=\"cursor-pointer\" />\n            </div>\n          )}\n          label=\"\"\n          dismissOnClick={true}\n        >\n          {user && user.username === creatorUser?.username && (\n            <>\n              <Dropdown.Item onClick={handleEdit}>Edit</Dropdown.Item>\n              <Dropdown.Item onClick={deletePost}>Remove</Dropdown.Item>\n            </>\n          )}\n          <Dropdown.Item>Report</Dropdown.Item>\n          <Dropdown.Item as=\"a\" href={ForumLink + `/t/${topicId}`} target=\"_blank\">\n            Forum\n          </Dropdown.Item>\n        </Dropdown>\n      </div>\n      <div className=\"flex flex-col items-start justify-start\">\n        <div\n          className=\" w-full text-base leading-normal cursor-pointer  dark:text-gray-100\"\n          onClick={() => handleSelectPost(threadId)}\n        >\n          <div className=\"flex w-full items-center justify-end text-xs text-gray-300 font-light uppercase italic\">\n            {type}\n          </div>\n          {selection && (\n            <div\n              className={`bg-white shadow ${isSelected ? 'font-bold dark:bg-gray-500 ' : ' dark:bg-gray-700'}`}\n              style={{\n                borderRadius: '3px',\n                fontSize: 20,\n                padding: 10,\n              }}\n            >\n              {selection}\n            </div>\n          )}\n          {edit ? (\n            <FormWithAudio\n              post={post}\n              type=\"update\"\n              fetcher={fetcher}\n              onClose={() => setEdit(false)}\n              editor={editor!}\n            />\n          ) : (\n            <p\n              dangerouslySetInnerHTML={{\n                __html: content,\n              }}\n              className=\"mt-1 \"\n            ></p>\n          )}\n        </div>\n        {audioUrl && audioUrl?.length > 0 && !edit && (\n          <ClientOnly fallback={<p>Loading...</p>}>{() => <AudioPlayer src={audioUrl} />}</ClientOnly>\n        )}\n        {isOptimistic ? (\n          <div className=\"font-sans text-sm text-gray-300\">posting ...</div>\n        ) : (\n          <div\n            className=\"flex w-full flex-1 items-center justify-between\"\n            style={{\n              marginBlock: 14,\n            }}\n          >\n            <div className=\"flex h-full items-center justify-start gap-4\">\n              <button\n                type=\"button\"\n                disabled={!user || fetcher.formMethod === 'PATCH'}\n                className={`${effect && 'animate-wiggle'} flex cursor-pointer items-center justify-start gap-1 `}\n                onClick={handleLikeClick}\n                onAnimationEnd={() => setEffect(false)}\n              >\n                <AiFillLike\n                  style={{\n                    fill: likedByMe ? 'rgb(49,196,141)' : 'gray',\n                  }}\n                />\n                <div className=\"  text-sm font-medium leading-tight text-gray-500 dark:text-gray-100\">\n                  {likeCount > 0 && likeCount}\n                </div>\n              </button>\n\n              <div className={`flex items-center justify-start`} onClick={() => setShowReplies((prev) => !prev)}>\n                <svg\n                  width=\"16\"\n                  height=\"14\"\n                  viewBox=\"0 0 16 14\"\n                  className=\"fill-gray-500\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M15.2008 9.19995V1.99995C15.2008 1.52256 15.0111 1.06472 14.6736 0.727159C14.336 0.389593 13.8782 0.199951 13.4008 0.199951H2.60078C2.12339 0.199951 1.66555 0.389593 1.32799 0.727159C0.990424 1.06472 0.800781 1.52256 0.800781 1.99995V9.19995C0.800781 9.67734 0.990424 10.1352 1.32799 10.4727C1.66555 10.8103 2.12339 11 2.60078 11H5.30078L8.00078 13.7L10.7008 11H13.4008C13.8782 11 14.336 10.8103 14.6736 10.4727C15.0111 10.1352 15.2008 9.67734 15.2008 9.19995ZM3.50078 3.79995C3.50078 3.56126 3.5956 3.33234 3.76439 3.16356C3.93317 2.99477 4.16209 2.89995 4.40078 2.89995H11.6008C11.8395 2.89995 12.0684 2.99477 12.2372 3.16356C12.406 3.33234 12.5008 3.56126 12.5008 3.79995C12.5008 4.03865 12.406 4.26756 12.2372 4.43635C12.0684 4.60513 11.8395 4.69995 11.6008 4.69995H4.40078C4.16209 4.69995 3.93317 4.60513 3.76439 4.43635C3.5956 4.26756 3.50078 4.03865 3.50078 3.79995ZM4.40078 6.49995C4.16209 6.49995 3.93317 6.59477 3.76439 6.76356C3.5956 6.93234 3.50078 7.16126 3.50078 7.39995C3.50078 7.63865 3.5956 7.86756 3.76439 8.03635C3.93317 8.20513 4.16209 8.29995 4.40078 8.29995H7.10078C7.33948 8.29995 7.56839 8.20513 7.73718 8.03635C7.90596 7.86756 8.00078 7.63865 8.00078 7.39995C8.00078 7.16126 7.90596 6.93234 7.73718 6.76356C7.56839 6.59477 7.33948 6.49995 7.10078 6.49995H4.40078Z\"\n                  />\n                </svg>\n\n                <button\n                  type=\"button\"\n                  className={`text-sm font-medium lowercase leading-tight text-gray-500 dark:text-gray-100`}\n                >\n                  <span className=\"ml-2\">{showReplies ? 'hide' : 'show'}</span>\n                </button>\n              </div>\n\n              <div\n                onClick={handleShare}\n                title=\"share\"\n                className=\"flex items-center justify-start gap-2 fill-gray-400 text-gray-400 transition-all hover:fill-blue-400 hover:text-blue-400 dark:text-gray-200 hover:dark:text-blue-400\"\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M13.0001 6C13.6092 6.00002 14.2039 5.8146 14.7051 5.4684C15.2064 5.1222 15.5903 4.63162 15.8059 4.06191C16.0215 3.49219 16.0586 2.87034 15.9122 2.27903C15.7658 1.68773 15.4429 1.15501 14.9864 0.7517C14.5299 0.348392 13.9614 0.0936137 13.3565 0.0212462C12.7517 -0.0511213 12.1392 0.062351 11.6004 0.346574C11.0616 0.630796 10.6221 1.0723 10.3404 1.61237C10.0586 2.15245 9.94792 2.7655 10.0231 3.37L5.08305 5.84C4.65928 5.43135 4.12465 5.15642 3.54574 5.04944C2.96684 4.94247 2.36926 5.00819 1.82744 5.2384C1.28561 5.46862 0.823499 5.85316 0.498659 6.34413C0.173819 6.8351 0.000610352 7.4108 0.000610352 7.9995C0.000610352 8.5882 0.173819 9.1639 0.498659 9.65487C0.823499 10.1458 1.28561 10.5304 1.82744 10.7606C2.36926 10.9908 2.96684 11.0565 3.54574 10.9496C4.12465 10.8426 4.65928 10.5676 5.08305 10.159L10.0231 12.629C9.93555 13.3312 10.0991 14.0418 10.4848 14.6351C10.8706 15.2284 11.4536 15.6663 12.1309 15.8713C12.8082 16.0763 13.5362 16.0353 14.1862 15.7555C14.8362 15.4757 15.3664 14.9751 15.683 14.3422C15.9996 13.7093 16.0823 12.9849 15.9165 12.2969C15.7506 11.6089 15.3469 11.0017 14.7767 10.5826C14.2065 10.1635 13.5065 9.9595 12.8004 10.0066C12.0943 10.0537 11.4276 10.3489 10.9181 10.84L5.97805 8.37C6.00832 8.12426 6.00832 7.87574 5.97805 7.63L10.9181 5.16C11.4561 5.68 12.1901 6 13.0001 6Z\"\n                    className=\"fill-inherit\"\n                  />\n                </svg>\n              </div>\n            </div>\n            {user && (\n              <div onClick={() => setOpenReply((prev) => !prev)} className=\"flex items-start justify-start space-x-1.5\">\n                <svg\n                  width=\"16\"\n                  height=\"13\"\n                  viewBox=\"0 0 16 13\"\n                  className=\"fill-gray-500 dark:fill-gray-100\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path d=\"M6.13858 7.95584L5.67917 8.15319C5.65821 8.10438 5.62774 8.06025 5.58953 8.02335L5.58328 8.01731L5.58334 8.01726L3.51964 5.95356L2.66608 5.1H3.87319H8.90059C10.2267 5.1 11.4984 5.62679 12.4361 6.56447C13.3738 7.50215 13.9006 8.77392 13.9006 10.1V11.9C13.9006 12.0061 13.9427 12.1078 14.0177 12.1828C14.0928 12.2579 14.1945 12.3 14.3006 12.3C14.4067 12.3 14.5084 12.2579 14.5834 12.1828C14.6584 12.1078 14.7006 12.0061 14.7006 11.9V10.1C14.7006 8.56175 14.0895 7.08649 13.0018 5.99878C11.9141 4.91107 10.4388 4.3 8.90059 4.3H3.87319H2.66608L3.51964 3.44645L5.58328 1.3828C5.5833 1.38279 5.58332 1.38277 5.58334 1.38275C5.65829 1.30774 5.7004 1.20604 5.7004 1.1C5.7004 0.993988 5.65831 0.892311 5.58339 0.817309C5.58335 0.817274 5.58332 0.817239 5.58328 0.817203M6.13858 7.95584L4.66429 0.463703C4.83306 0.294979 5.06194 0.200195 5.30059 0.200195C5.53924 0.200195 5.76811 0.294979 5.93689 0.463703L5.58328 0.817203M6.13858 7.95584L5.67917 8.15319C5.70014 8.20199 5.71117 8.25448 5.71163 8.30759C5.7121 8.3607 5.70197 8.41337 5.68186 8.46253C5.66175 8.51169 5.63205 8.55635 5.59449 8.59391C5.55693 8.63146 5.51227 8.66116 5.46312 8.68128C5.41396 8.70139 5.36128 8.71151 5.30817 8.71105C5.25506 8.71059 5.20257 8.69955 5.15377 8.67859C5.10497 8.65763 5.06083 8.62715 5.02393 8.58895L5.02399 8.58889L5.01784 8.58275L1.4179 4.9828C1.34291 4.90779 1.30078 4.80607 1.30078 4.7C1.30078 4.59396 1.34289 4.49226 1.41784 4.41726C1.41786 4.41724 1.41788 4.41722 1.4179 4.4172L5.01779 0.81731L6.13858 7.95584ZM5.58328 0.817203C5.50828 0.742282 5.40661 0.700195 5.30059 0.700195C5.19455 0.700195 5.09285 0.742302 5.01784 0.817256L5.58328 0.817203Z\" />\n                </svg>\n                <button type=\"button\" className=\"text-sm font-medium leading-tight text-gray-500 dark:text-gray-100\">\n                  {openReply ? 'Close' : translation?.reply}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {openReply && (\n        <ReplyForm\n          topicId={topicId}\n          closeReply={() => {\n            setOpenReply(false);\n          }}\n          updateReplyCount={() => setReplyCount((p) => p + 1)}\n        />\n      )}\n      {showReplies && (\n        <Replies\n          postId={id}\n          topicId={topicId}\n          isCreator={user?.username === creatorUser?.username}\n          type={type}\n          setReplyCount={setReplyCount}\n          replyCount={ReplyCount!}\n        />\n      )}\n      {!showDivider && <hr />}\n    </div>\n  );\n}\n\nexport default Post;\n", "import { useFetcher } from '@remix-run/react';\nimport { useState, useMemo, useEffect } from 'react';\nimport Reply from './Reply.client';\n\ntype replyType = {\n  is_approved: boolean;\n};\n\ntype RepliesProps = {\n  postId: string;\n  topicId: number;\n  isCreator: boolean;\n  type: 'question' | 'comment';\n  replyCount: number;\n  setReplyCount: any;\n};\nfunction Replies({ postId, topicId, isCreator, type, replyCount, setReplyCount }: RepliesProps) {\n  const [replies, setReplies] = useState<replyType[]>([]);\n  const postListFetcher = useFetcher();\n  useEffect(() => {\n    postListFetcher.load(`/api/reply/${topicId}`);\n  }, []);\n  let data = postListFetcher.data;\n  useEffect(() => {\n    if (data) {\n      let replies = data.posts;\n      setReplies(replies);\n      setReplyCount(replies.length);\n    }\n  }, [data]);\n\n  if (!data) return null;\n  return (\n    <>\n      {replies.length < 1 && <div className=\"text-gray-500 text-sm mb-2 \">no reply yet</div>}\n      {replies.map((reply: any, index: number) => {\n        return (\n          <Reply\n            key={reply.id}\n            reply={reply}\n            isCreator={isCreator}\n            postId={postId}\n            type={type}\n            showDivider={replies.length <= index + 1}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Replies;\n", "import { useFetcher, useLoaderData } from '@remix-run/react';\nimport { useRef, useEffect, useState } from 'react';\nimport { AudioRecorder, AudioPlayer } from '../Media';\nimport { v4 as uuidv4 } from 'uuid';\nimport TiptapInstance from '~/component/UI/TiptapInstance';\nimport { Button } from 'flowbite-react';\n\ntype ReplyFormPropsType = {\n  closeReply: () => void;\n  topicId: number;\n  updateReplyCount: () => void;\n};\n\nexport default function ReplyForm({ closeReply, topicId, updateReplyCount }: ReplyFormPropsType) {\n  const postFetcher = useFetcher();\n  const textareaRef = useRef(null);\n  const loaderData = useLoaderData();\n  const [audio, setAudio] = useState({ tempUrl: '', blob: null });\n  const [textArea, setTextArea] = useState('');\n  useEffect(() => {\n    if (postFetcher.data) {\n      updateReplyCount();\n      closeReply();\n    }\n  }, [postFetcher.formData, loaderData.posts, topicId]);\n  if (postFetcher.formData) {\n    if (textareaRef.current) textareaRef.current.value = '';\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    var form_data = new FormData();\n    if (audio.blob) {\n      form_data.append('file', audio.blob, `reply-${topicId}-${uuidv4()}.wav`);\n    }\n    let item = {\n      postString: textArea,\n      topicId,\n    };\n    for (var key in item) {\n      form_data.append(key, item[key]);\n    }\n    postFetcher.submit(form_data, {\n      action: '/api/reply',\n      method: 'POST',\n      encType: 'multipart/form-data',\n    });\n  };\n  let emptyTextField = textArea === '' || postFetcher.state !== 'idle' || textArea === '<p></p>';\n  return (\n    <div className=\"mt-1 flex justify-between\">\n      <div\n        style={{\n          borderLeft: '4px solid #e5e7eb',\n        }}\n      ></div>\n      <form\n        onSubmit={handleSubmit}\n        className=\"flex w-11/12 flex-col justify-center shadow-md \"\n        style={{\n          opacity: postFetcher.state !== 'idle' ? 0.5 : 1,\n          cursor: postFetcher.state !== 'idle' ? 'not-allowed' : 'auto',\n          minHeight: 100,\n          padding: 14,\n        }}\n      >\n        <TiptapInstance placeholder=\"Write your reply here ...\" onChange={setTextArea} />\n        <input id=\"textArea\" name=\"postString\" value={textArea} hidden required />\n        {audio.tempUrl !== '' ? (\n          <>\n            <div className=\"mt-2 flex w-full items-center gap-3 \">\n              <AudioPlayer src={audio.tempUrl} />\n              <div onClick={() => setAudio({ tempUrl: '', blob: null })}>\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M9 2C8.81434 2.0001 8.63237 2.05188 8.47447 2.14955C8.31658 2.24722 8.18899 2.38692 8.106 2.553L7.382 4H4C3.73478 4 3.48043 4.10536 3.29289 4.29289C3.10536 4.48043 3 4.73478 3 5C3 5.26522 3.10536 5.51957 3.29289 5.70711C3.48043 5.89464 3.73478 6 4 6V16C4 16.5304 4.21071 17.0391 4.58579 17.4142C4.96086 17.7893 5.46957 18 6 18H14C14.5304 18 15.0391 17.7893 15.4142 17.4142C15.7893 17.0391 16 16.5304 16 16V6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5C17 4.73478 16.8946 4.48043 16.7071 4.29289C16.5196 4.10536 16.2652 4 16 4H12.618L11.894 2.553C11.811 2.38692 11.6834 2.24722 11.5255 2.14955C11.3676 2.05188 11.1857 2.0001 11 2H9ZM7 8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7C8.26522 7 8.51957 7.10536 8.70711 7.29289C8.89464 7.48043 9 7.73478 9 8V14C9 14.2652 8.89464 14.5196 8.70711 14.7071C8.51957 14.8946 8.26522 15 8 15C7.73478 15 7.48043 14.8946 7.29289 14.7071C7.10536 14.5196 7 14.2652 7 14V8ZM12 7C11.7348 7 11.4804 7.10536 11.2929 7.29289C11.1054 7.48043 11 7.73478 11 8V14C11 14.2652 11.1054 14.5196 11.2929 14.7071C11.4804 14.8946 11.7348 15 12 15C12.2652 15 12.5196 14.8946 12.7071 14.7071C12.8946 14.5196 13 14.2652 13 14V8C13 7.73478 12.8946 7.48043 12.7071 7.29289C12.5196 7.10536 12.2652 7 12 7Z\"\n                    className=\"fill-gray-200\"\n                  />\n                </svg>\n              </div>\n            </div>\n          </>\n        ) : null}\n        <div className=\"mt-2 flex justify-between gap-2\">\n          {audio.tempUrl === '' ? <AudioRecorder setAudio={setAudio} /> : <div />}\n          <div className=\"flex justify-end gap-2\">\n            <Button onClick={closeReply} type=\"reset\" label=\"close\" />\n            <Button\n              type=\"submit\"\n              onClick={handleSubmit}\n              style={{\n                opacity: emptyTextField ? 0.3 : 1,\n              }}\n              disabled={emptyTextField}\n              label={\n                postFetcher.state === 'submitting'\n                  ? 'submiting'\n                  : postFetcher.state === 'loading'\n                  ? 'post created'\n                  : 'respond'\n              }\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n", "import { AudioPlayer } from '~/features/Media/AudioPlayer.client';\nimport AudioRecorder from '~/features/Media/AudioRecorder.client';\n\nexport { AudioPlayer, AudioRecorder };\n", "import React, { useState } from 'react';\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport * as Extension from '~/features/Editor/tiptap';\n\nconst ContentEditableDiv = (props) => {\n   let editor;\n   if (typeof document !== 'undefined') {\n     editor = useEditor({\n       extensions: [\n         Extension.Document,\n         Extension.Paragraph,\n         Extension.Text,\n         Extension.Bold,\n         Extension.FontFamily,\n         Extension.TextStyle,\n         Extension.Italic,\n         Extension.Underline,\n         Extension.Placeholder.configure({\n           placeholder: ({ node }) => {\n             return props.placeholder;\n           },\n         }),\n         Extension.HardBreak.configure({\n           HTMLAttributes: {\n             class: 'pageBreak',\n           },\n         }),\n         Extension.Highlight.configure({\n           HTMLAttributes: {\n             class: 'highlight',\n           },\n         }),\n        \n       ],\n       editable: true,\n       onUpdate: async ({ editor }) => {\n         let newContent = editor.getHTML();\n         props.onChange(newContent);\n       },\n     });\n   }\n\n    return (\n      <>\n        {editor ? <EditorContent editor={editor} /> : null}\n      </>\n    );\n};\n\nexport default ContentEditableDiv;", "import { useLoaderData, useOutletContext } from '@remix-run/react';\nimport { Editor } from '@tiptap/react';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { selectedTextOnEditor, textInfo } from '~/states';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button } from 'flowbite-react';\nimport { AudioPlayer, AudioRecorder } from '~/features/Media';\nimport { PostType } from '~/model/type';\nimport TiptapInstance from '~/component/UI/TiptapInstance';\ntype FormWithAudioProps = {\n  fetcher: any;\n  type: 'post' | 'update';\n  post: PostType | null;\n  onClose?: () => void | null;\n  editor: Editor;\n};\nexport function FormWithAudio({ fetcher, type, post, onClose = () => {}, editor }: FormWithAudioProps) {\n  let content = post?.content ?? '';\n  let audioUrl = post?.audioUrl ?? '';\n  const [audio, setAudio] = useState({ tempUrl: audioUrl, blob: null });\n\n  const [body, setBody] = useState(content);\n  const [error, setError] = useState('');\n  const [selection, setSelection] = useRecoilState(selectedTextOnEditor);\n  const data = useLoaderData();\n\n  let textName = data.text.name;\n  let order = data.order;\n  let isFormEmpty = body.length < 5 || body === '<p></p>';\n\n  useEffect(() => {\n    setBody(content ? content : '');\n    setAudio({ tempUrl: audioUrl ? audioUrl : '', blob: null });\n    setError('');\n  }, [selection.start]);\n  function validator() {\n    let lengthOfSelection = selection.end - selection?.start;\n    let errormessage = '';\n    if (audio.tempUrl !== '' && isFormEmpty) {\n      errormessage = 'ERROR : describe the audio';\n    } else if (isFormEmpty) {\n      errormessage = 'ERROR : write more than 5 character';\n    } else if (lengthOfSelection > 254) {\n      errormessage = 'ERROR : selecting more than 255 letter not allowed';\n    } else if (body.length > 250) {\n      errormessage = 'ERROR : content more than 255 letter not allowed';\n    } else {\n      errormessage = '';\n    }\n    return errormessage;\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let errormessage = validator();\n    if (errormessage && errormessage !== '') {\n      setError(errormessage);\n      return null;\n    }\n    let id = null;\n    if (!editor.isActive('post')) {\n      id = uuidv4();\n    } else {\n      id = editor.getAttributes('post')?.id;\n    }\n    let item = {\n      threadId: id,\n      selectionSegment: selection.content,\n      textId: data?.text?.id,\n      pageId: data?.pageId,\n      order: order,\n      topic: textName,\n      body: body,\n      type: selection.type,\n    };\n    let blob = audio?.blob;\n    var form_data = new FormData();\n    if (blob) {\n      form_data.append('file', blob, `text-${data?.text?.id}-${uuidv4()}.wav`);\n    } else {\n      form_data.append('audioUrl', audio.tempUrl);\n    }\n    if (type === 'update') {\n      form_data.append('body', body);\n      form_data.append('action', 'update');\n      form_data.append('postId', post?.id!);\n      let responseData = await fetcher.submit(form_data, {\n        method: 'PATCH',\n        action: '/api/post',\n        encType: 'multipart/form-data',\n      });\n      if (responseData) onClose();\n      return responseData;\n    } else {\n      for (var key in item) {\n        form_data.append(key, item[key]);\n      }\n      if (selection) {\n        let awaitdata = await fetcher.submit(form_data, {\n          method: 'POST',\n          action: '/api/post',\n          encType: 'multipart/form-data',\n        });\n        if (!awaitdata?.message) {\n          setSelection({ ...selection, type: '' });\n          editor.commands.setPost({\n            id,\n          });\n        }\n      }\n    }\n  }\n  return (\n    <fetcher.Form className=\"flex flex-col gap-3 \">\n      <TiptapInstance placeholder=\"what are your thoughts?\" value={body} onChange={(value: string) => setBody(value)} />\n      {audio.tempUrl !== '' ? (\n        <>\n          <div className=\"flex w-full items-center gap-3 \">\n            <AudioPlayer src={audio.tempUrl} />\n            <div onClick={() => setAudio({ tempUrl: '', blob: null })}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M9 2C8.81434 2.0001 8.63237 2.05188 8.47447 2.14955C8.31658 2.24722 8.18899 2.38692 8.106 2.553L7.382 4H4C3.73478 4 3.48043 4.10536 3.29289 4.29289C3.10536 4.48043 3 4.73478 3 5C3 5.26522 3.10536 5.51957 3.29289 5.70711C3.48043 5.89464 3.73478 6 4 6V16C4 16.5304 4.21071 17.0391 4.58579 17.4142C4.96086 17.7893 5.46957 18 6 18H14C14.5304 18 15.0391 17.7893 15.4142 17.4142C15.7893 17.0391 16 16.5304 16 16V6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5C17 4.73478 16.8946 4.48043 16.7071 4.29289C16.5196 4.10536 16.2652 4 16 4H12.618L11.894 2.553C11.811 2.38692 11.6834 2.24722 11.5255 2.14955C11.3676 2.05188 11.1857 2.0001 11 2H9ZM7 8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7C8.26522 7 8.51957 7.10536 8.70711 7.29289C8.89464 7.48043 9 7.73478 9 8V14C9 14.2652 8.89464 14.5196 8.70711 14.7071C8.51957 14.8946 8.26522 15 8 15C7.73478 15 7.48043 14.8946 7.29289 14.7071C7.10536 14.5196 7 14.2652 7 14V8ZM12 7C11.7348 7 11.4804 7.10536 11.2929 7.29289C11.1054 7.48043 11 7.73478 11 8V14C11 14.2652 11.1054 14.5196 11.2929 14.7071C11.4804 14.8946 11.7348 15 12 15C12.2652 15 12.5196 14.8946 12.7071 14.7071C12.8946 14.5196 13 14.2652 13 14V8C13 7.73478 12.8946 7.48043 12.7071 7.29289C12.5196 7.10536 12.2652 7 12 7Z\"\n                  className=\"fill-gray-200\"\n                />\n              </svg>\n            </div>\n          </div>\n        </>\n      ) : null}\n      {error && error !== '' && <div className=\"font-sm text-red-500\">{error}</div>}\n      {fetcher.data?.message && <div className=\"font-sm text-red-500\">{fetcher.data?.message}</div>}\n      <div className=\"flex items-center justify-between\">\n        {audio.tempUrl === '' ? <AudioRecorder setAudio={setAudio} /> : <div />}\n\n        <div className=\"flex justify-end gap-2\">\n          <Button\n            type=\"reset\"\n            onClick={() => {\n              setAudio({ tempUrl: '', blob: null });\n              setSelection({ ...selection, type: '' });\n              onClose();\n            }}\n            style={{ borderRadius: 24 }}\n            label=\"cancel\"\n            className=\"bg-transparent text-black\"\n          />\n          <Button\n            style={{ borderRadius: 24, opacity: isFormEmpty ? 0.3 : 1 }}\n            disabled={isFormEmpty}\n            onClick={handleSubmit}\n            type=\"submit\"\n            label=\"Respond\"\n            className=\"bg-green-400 text-white pr-3\"\n          />\n        </div>\n      </div>\n    </fetcher.Form>\n  );\n}\n\nexport default FormWithAudio;\n", "import * as React from \"react\";\nimport { useHydrated } from \"./use-hydrated.js\";\n/**\n * Render the children only after the JS has loaded client-side. Use an optional\n * fallback component if the JS is not yet loaded.\n *\n * Example: Render a Chart component if JS loads, renders a simple FakeChart\n * component server-side or if there is no JS. The FakeChart can have only the\n * UI without the behavior or be a loading spinner or skeleton.\n * ```tsx\n * return (\n *   <ClientOnly fallback={<FakeChart />}>\n *     {() => <Chart />}\n *   </ClientOnly>\n * );\n * ```\n */\nexport function ClientOnly({ children, fallback = null }) {\n    return useHydrated() ? React.createElement(React.Fragment, null, children()) : React.createElement(React.Fragment, null, fallback);\n}\n", "import { useEffect, useState } from \"react\";\nlet hydrating = true;\n/**\n * Return a boolean indicating if the JS has been hydrated already.\n * When doing Server-Side Rendering, the result will always be false.\n * When doing Client-Side Rendering, the result will always be false on the\n * first render and true from then on. Even if a new component renders it will\n * always start with true.\n *\n * Example: Disable a button that needs JS to work.\n * ```tsx\n * let hydrated = useHydrated();\n * return (\n *   <button type=\"button\" disabled={!hydrated} onClick={doSomethingCustom}>\n *     Click me\n *   </button>\n * );\n * ```\n */\nexport function useHydrated() {\n    let [hydrated, setHydrated] = useState(() => !hydrating);\n    useEffect(function hydrate() {\n        hydrating = false;\n        setHydrated(true);\n    }, []);\n    return hydrated;\n}\n", "import Post from './Post';\nimport { useRecoilValue } from 'recoil';\nimport { filterDataState, showLatest } from '~/states';\nimport { FilterType, PostType } from '~/model/type';\nimport Filter from './Filter';\nimport { Skeleton } from '~/component/UI';\n\ntype PostPropsType = {\n  posts: any[];\n  editor: any;\n};\n\nfunction Posts({ posts, editor }: PostPropsType) {\n  let filters = useRecoilValue(filterDataState);\n  let isLatest = useRecoilValue(showLatest);\n  if (!posts) {\n    return <Skeleton number={4} height={80} />;\n  }\n  let lists = applyFilter(posts, filters, isLatest);\n  return (\n    <>\n      <Filter />\n      <div className=\" flex flex-col h-full overflow-y-scroll flex-1 \">\n        {lists?.length > 0 ? (\n          lists?.map((post: PostType, index: number) => {\n            return (\n              <Post\n                key={post.id}\n                post={post}\n                isOptimistic={false}\n                showDivider={lists.length <= index + 1}\n                editor={editor}\n              />\n            );\n          })\n        ) : (\n          <div className=\"text-center\">\n            <p>No post available</p>\n            Feel free to be the first one to ask Question !\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nconst applyFilter = <T extends PostType>(list: T[], filter: FilterType, isLatest: boolean) => {\n  if (filter.type && filter.type !== 'all')\n    list = list.filter((l) => {\n      return l.type === filter.type;\n    });\n  if (filter.user?.length)\n    list = list.filter((l) => {\n      return filter.user?.includes(l?.creatorUser?.username);\n    });\n  if (filter.date.startDate)\n    list = list.filter((l) => {\n      const startDate = filter.date.startDate ? new Date(filter.date.startDate) : null;\n      const endDate = filter.date.endDate ? new Date(filter.date.endDate) : null;\n\n      if (startDate && endDate) {\n        const createdAt = new Date(l.created_at);\n        return createdAt > startDate && createdAt < endDate;\n      }\n\n      return false;\n    });\n  if (filter.solved && filter.solved !== 'both')\n    list = list.filter((l) => {\n      return l.isSolved === (filter.solved === 'solved');\n    });\n  if (list.length > 0) {\n    list.sort(function (a, b) {\n      let c: Date = new Date(a.created_at);\n      let d: Date = new Date(b.created_at);\n      return !isLatest ? c.getTime() - d.getTime() : d.getTime() - c.getTime();\n    });\n  }\n  return list;\n};\n\nexport default Posts;\n", "import { useState, useId, useEffect, memo } from 'react';\nimport { useFetcher } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { filterDataState, openFilterState } from '~/states';\nimport uselitteraTranlation from '~/locales/useLitteraTranslations';\nimport Datepicker from 'react-tailwindcss-datepicker';\nimport { Modal, Button } from 'flowbite-react';\ntype FilterProps = {};\nfunction Filter({}: FilterProps) {\n  const [filterData, setFilterData] = useRecoilState(filterDataState);\n  const [openFilter, setOpenFilter] = useRecoilState(openFilterState);\n  const [userInput, setUserInput] = useState('');\n  const searchUser = useFetcher();\n  const typeId = useId();\n  const solvedId = useId();\n\n  useEffect(() => {\n    setUserInput('');\n  }, [filterData]);\n\n  const handleTypeCheck = (e) => {\n    let solved = e.target.value === 'comment' ? 'both' : filterData.solved;\n    setFilterData((prevData) => ({\n      ...prevData,\n      type: e.target.value,\n      solved,\n    }));\n  };\n\n  const handleDateChange = (e) => {\n    setFilterData((prevData) => ({ ...prevData, date: e }));\n  };\n  const handleSolvedChange = (e) => {\n    setFilterData((prevData) => ({ ...prevData, solved: e.target.value }));\n  };\n  function handleNameClick(userToAdd: string) {\n    if (filterData.user.includes(userToAdd) || !userToAdd.length) {\n      return;\n    }\n    setFilterData((prev) => ({\n      ...prev,\n      user: [...prev.user, userToAdd],\n    }));\n  }\n  function handleRemoveUser(userToRemove: string) {\n    setFilterData((prev) => ({\n      ...prev,\n      user: prev.user.filter((names) => names !== userToRemove),\n    }));\n  }\n  function apply() {\n    setOpenFilter(false);\n  }\n  function reset() {\n    setFilterData({\n      type: 'all',\n      date: { startDate: null, endDate: null },\n      user: [],\n      solved: 'both',\n    });\n    setOpenFilter(false);\n  }\n  const translation = uselitteraTranlation();\n\n  let isFetchingUser = searchUser.state === 'loading';\n  return (\n    <Modal\n      show={openFilter}\n      onClose={() => setOpenFilter(false)}\n      dismissible={true}\n      size=\"md\"\n      style={{ height: '100dvh' }}\n    >\n      <Modal.Header>{translation.filter}</Modal.Header>\n      <div className=\"p-5\">\n        <div className=\"flex flex-col items-start justify-start space-y-4\">\n          {/* Type of post  */}\n          <div className=\"flex flex-col items-start justify-start space-y-2\">\n            <p className=\"text-sm font-semibold leading-tight\">Type</p>\n            <div className=\"flex flex-col items-start justify-start space-y-0.5\">\n              {[\n                { value: 'all', label: 'All' },\n                { value: 'comment', label: 'Comments only' },\n                { value: 'question', label: 'Questions only' },\n              ].map(({ value, label }) => {\n                let isChecked = filterData.type == value;\n                return (\n                  <div key={value} className=\"flex py-2\">\n                    <input\n                      id={`${typeId}-${value}`}\n                      type=\"radio\"\n                      onChange={handleTypeCheck}\n                      defaultChecked={isChecked}\n                      value={value}\n                      name=\"filter-type\"\n                      className=\"h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600\"\n                    />\n                    <label\n                      htmlFor={`${typeId}-${value}`}\n                      className=\"ml-2 text-sm font-medium text-gray-500 dark:text-gray-300\"\n                    >\n                      {label}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          {/* DateFilter */}\n          <div className=\"flex w-full flex-col items-start justify-start space-y-2\">\n            <p className=\"text-sm font-semibold leading-tight \">Date</p>\n            <Datepicker value={filterData.date} inputName=\"date\" onChange={handleDateChange} />\n          </div>\n          {/* UserFilter */}\n          <div className=\"flex w-full flex-col items-start justify-start space-y-2.5\">\n            <p className=\"text-sm font-semibold leading-tight \">Users</p>\n\n            {filterData.user?.map((user) => {\n              return (\n                <div\n                  key={user}\n                  className=\"flex items-center justify-center space-x-1 rounded bg-gray-100 px-1.5 py-0.5\"\n                >\n                  <p className=\"text-center text-xs font-medium leading-none text-gray-600\">{user}</p>\n                  <svg\n                    onClick={() => handleRemoveUser(user)}\n                    width=\"18\"\n                    height=\"18\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M8.18966 6.2102L8.18971 6.21014L8.18346 6.2041C7.91942 5.94908 7.56578 5.80797 7.1987 5.81116C6.83162 5.81435 6.48049 5.96159 6.22091 6.22116C5.96134 6.48073 5.81411 6.83187 5.81092 7.19894C5.80773 7.56602 5.94884 7.91966 6.20386 8.1837L6.20381 8.18376L6.20995 8.1899L7.0201 9.00005L6.2127 9.80745C6.0806 9.93591 5.97515 10.0892 5.90241 10.2585C5.82903 10.4293 5.79041 10.6131 5.7888 10.7989C5.78718 10.9848 5.82261 11.1692 5.893 11.3412C5.96339 11.5133 6.06735 11.6696 6.1988 11.8011C6.33025 11.9325 6.48656 12.0365 6.65861 12.1069C6.83067 12.1772 7.01502 12.2127 7.20091 12.2111C7.3868 12.2094 7.57051 12.1708 7.74132 12.0974C7.91064 12.0247 8.06392 11.9193 8.19237 11.7872L8.9998 10.9798L9.80995 11.7899L9.8099 11.79L9.81615 11.796C10.0802 12.051 10.4338 12.1921 10.8009 12.1889C11.168 12.1857 11.5191 12.0385 11.7787 11.7789C12.0383 11.5194 12.1855 11.1682 12.1887 10.8012C12.1919 10.4341 12.0508 10.0804 11.7957 9.81639L11.7958 9.81634L11.7897 9.8102L10.9795 9.00005L11.7897 8.1899L11.7897 8.18996L11.7957 8.1837C12.0508 7.91966 12.1919 7.56602 12.1887 7.19894C12.1855 6.83187 12.0383 6.48073 11.7787 6.22116C11.5191 5.96159 11.168 5.81435 10.8009 5.81116C10.4338 5.80797 10.0802 5.94908 9.81615 6.2041L9.8161 6.20405L9.80995 6.2102L8.9998 7.02034L8.18966 6.2102ZM13.7374 13.7377C12.4809 14.9942 10.7768 15.7 8.9998 15.7C7.22285 15.7 5.51868 14.9942 4.26219 13.7377C3.0057 12.4812 2.2998 10.777 2.2998 9.00005C2.2998 7.2231 3.0057 5.51893 4.26219 4.26243C5.51868 3.00594 7.22285 2.30005 8.9998 2.30005C10.7768 2.30005 12.4809 3.00594 13.7374 4.26243C14.9939 5.51893 15.6998 7.2231 15.6998 9.00005C15.6998 10.777 14.9939 12.4812 13.7374 13.7377Z\"\n                      fill=\"#9CA3AF\"\n                      stroke=\"#9CA3AF\"\n                    />\n                  </svg>\n                </div>\n              );\n            })}\n            <div className=\"flex w-full flex-col items-start justify-start space-y-2 rounded-lg px-0.5 pb-1\">\n              <div className=\"inline-flex w-full items-center justify-start rounded-lg border border-blue-600 bg-gray-50 px-4 py-1\">\n                <div className=\"flex h-full flex-1 items-center justify-start space-x-2\">\n                  <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      d=\"M15.75 15.75L11.25 11.25M12.75 7.5C12.75 8.18944 12.6142 8.87213 12.3504 9.50909C12.0865 10.146 11.6998 10.7248 11.2123 11.2123C10.7248 11.6998 10.146 12.0865 9.50909 12.3504C8.87213 12.6142 8.18944 12.75 7.5 12.75C6.81056 12.75 6.12787 12.6142 5.49091 12.3504C4.85395 12.0865 4.2752 11.6998 3.78769 11.2123C3.30018 10.7248 2.91347 10.146 2.64963 9.50909C2.3858 8.87213 2.25 8.18944 2.25 7.5C2.25 6.10761 2.80312 4.77226 3.78769 3.78769C4.77226 2.80312 6.10761 2.25 7.5 2.25C8.89239 2.25 10.2277 2.80312 11.2123 3.78769C12.1969 4.77226 12.75 6.10761 12.75 7.5Z\"\n                      stroke=\"#1C64F2\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                  <searchUser.Form method=\"GET\" action=\"/api/user/search\" className=\"flex w-full\">\n                    <input\n                      type=\"text\"\n                      name=\"filterUser\"\n                      value={userInput}\n                      onChange={(e) => {\n                        setUserInput(e.target.value);\n                        searchUser.submit(\n                          {\n                            filterUser: e.target.value,\n                          },\n                          { method: 'GET', action: '/api/user/search' },\n                        );\n                      }}\n                      className=\"h-full flex-1 border-none border-transparent bg-transparent text-sm leading-none text-gray-900 outline-none focus:border-none focus:border-transparent focus:outline-none focus:ring-0\"\n                    />\n                    <button type=\"button\" onClick={() => setUserInput('')}>\n                      <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                          d=\"M8.18966 6.2102L8.18971 6.21014L8.18346 6.2041C7.91942 5.94908 7.56578 5.80797 7.1987 5.81116C6.83162 5.81435 6.48049 5.96159 6.22091 6.22116C5.96134 6.48073 5.81411 6.83187 5.81092 7.19894C5.80773 7.56602 5.94884 7.91966 6.20386 8.1837L6.20381 8.18376L6.20995 8.1899L7.0201 9.00005L6.2127 9.80745C6.0806 9.93591 5.97515 10.0892 5.90241 10.2585C5.82903 10.4293 5.79041 10.6131 5.7888 10.7989C5.78718 10.9848 5.82261 11.1692 5.893 11.3412C5.96339 11.5133 6.06735 11.6696 6.1988 11.8011C6.33025 11.9325 6.48656 12.0365 6.65861 12.1069C6.83067 12.1772 7.01502 12.2127 7.20091 12.2111C7.3868 12.2094 7.57051 12.1708 7.74132 12.0974C7.91064 12.0247 8.06392 11.9193 8.19237 11.7872L8.9998 10.9798L9.80995 11.7899L9.8099 11.79L9.81615 11.796C10.0802 12.051 10.4338 12.1921 10.8009 12.1889C11.168 12.1857 11.5191 12.0385 11.7787 11.7789C12.0383 11.5194 12.1855 11.1682 12.1887 10.8012C12.1919 10.4341 12.0508 10.0804 11.7957 9.81639L11.7958 9.81634L11.7897 9.8102L10.9795 9.00005L11.7897 8.1899L11.7897 8.18996L11.7957 8.1837C12.0508 7.91966 12.1919 7.56602 12.1887 7.19894C12.1855 6.83187 12.0383 6.48073 11.7787 6.22116C11.5191 5.96159 11.168 5.81435 10.8009 5.81116C10.4338 5.80797 10.0802 5.94908 9.81615 6.2041L9.8161 6.20405L9.80995 6.2102L8.9998 7.02034L8.18966 6.2102ZM13.7374 13.7377C12.4809 14.9942 10.7768 15.7 8.9998 15.7C7.22285 15.7 5.51868 14.9942 4.26219 13.7377C3.0057 12.4812 2.2998 10.777 2.2998 9.00005C2.2998 7.2231 3.0057 5.51893 4.26219 4.26243C5.51868 3.00594 7.22285 2.30005 8.9998 2.30005C10.7768 2.30005 12.4809 3.00594 13.7374 4.26243C14.9939 5.51893 15.6998 7.2231 15.6998 9.00005C15.6998 10.777 14.9939 12.4812 13.7374 13.7377Z\"\n                          fill=\"#9CA3AF\"\n                          stroke=\"#9CA3AF\"\n                        />\n                      </svg>\n                    </button>\n                  </searchUser.Form>\n                </div>\n              </div>\n              {isFetchingUser && 'loading'}\n              {searchUser.data?.length > 0 && userInput !== '' && !isFetchingUser && (\n                <div className=\"flex w-full flex-col items-center justify-start space-y-3 rounded-lg border border-gray-200  p-4 shadow\">\n                  {searchUser.data?.map((user) => {\n                    return (\n                      <div className=\"w-full cursor-pointer\" key={user?.username}>\n                        <div className=\"inline-flex w-full items-center justify-start space-x-2 rounded-lg\">\n                          <img className=\"h-6 w-6 rounded-full\" src={user?.avatarUrl} alt=\"Extra small avatar\"></img>\n                          <div className=\"flex-1 text-sm leading-tight\" onClick={() => handleNameClick(user?.username)}>\n                            {user?.username}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n              {searchUser.data?.length === 0 && userInput !== '' && !isFetchingUser && (\n                <span className=\"text-red-400\">User not Found</span>\n              )}\n            </div>\n          </div>\n\n          {/* isSolved */}\n          {filterData.type !== 'comment' && (\n            <div className=\"flex flex-col items-start justify-start space-y-2\">\n              <p className=\"text-sm font-semibold leading-tight\">Solved</p>\n              <div className=\"flex flex-col items-start justify-start space-y-0.5\">\n                {[\n                  { value: 'both', label: 'both' },\n                  { value: 'solved', label: 'solved only' },\n                  { value: 'unsolved', label: 'unsolved only' },\n                ].map(({ value, label }) => (\n                  <div key={value} className=\"flex py-2\">\n                    <input\n                      id={`${solvedId}-${value}`}\n                      type=\"radio\"\n                      value={value}\n                      onChange={handleSolvedChange}\n                      defaultChecked={filterData.solved === value}\n                      name=\"filter-solved\"\n                      className=\"h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600\"\n                    />\n                    <label\n                      htmlFor={`${solvedId}-${value}`}\n                      className=\"ml-2 text-sm font-medium text-gray-500 dark:text-gray-300\"\n                    >\n                      {label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"mt-2 flex w-full items-start justify-end gap-3\">\n          <Button onClick={apply} label=\"Apply filters\" type=\"submit\" />\n          <Button onClick={reset} color=\"light\" type=\"reset\" label=\"reset\" />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(Filter);\n", "import { useFetcher, useLoaderData, useOutletContext } from '@remix-run/react';\nimport Post from './Post';\nimport { selectedTextOnEditor } from '~/states';\nimport { useRecoilValue } from 'recoil';\nimport { MustLoggedIn as LogInMessage } from '~/component/UI';\nimport { FormWithAudio } from './component/FormWithAudio';\n\nconst PostForm = ({ editor }: any) => {\n  const { user } = useLoaderData();\n  const createPost = useFetcher();\n  const selection = useRecoilValue(selectedTextOnEditor);\n  let isPosting = createPost.formData && createPost.formData.get('body') !== '';\n  if (selection.type === '') return null;\n  if (isPosting) {\n    return (\n      <Post\n        post={{\n          audioUrl: '',\n          creatorUser: user,\n          created_at: new Date(Date.now()),\n          likedBy: [],\n          replyCount: 0,\n          id: 'random',\n          isSolved: false,\n          content: createPost?.formData?.get('body') as string,\n          topic_id: 0,\n          type: createPost?.formData?.get('type') as 'question' | 'comment',\n          threadId: '',\n        }}\n        editor={null}\n        isOptimistic={true}\n      />\n    );\n  }\n  return (\n    <>\n      <div className=\"flex justify-between p-6\">\n        <div\n          style={{ lineHeight: '24px', color: 'rbg(41,41,41)', fontSize: 20, fontWeight: '500' }}\n          className=\"mb-3 font-serif capitalize leading-tight text-gray-900 dark:text-gray-300\"\n        >\n          {selection.type === 'question' ? 'ask question' : 'new comment'}\n        </div>\n      </div>\n      <section className=\" m-3 rounded py-3\" style={{ boxShadow: 'rgba(0, 0, 0, 0.12) 0px 2px 8px 0px' }}>\n        {user ? (\n          <>\n            <div className=\"flex items-start justify-between\">\n              <div className=\"mb-1 flex items-center gap-2 px-4\">\n                <img className=\"h-8 w-8 rounded-full\" src={user?.avatarUrl} alt=\"avatar\"></img>\n                <div className=\"font-serif text-sm font-medium leading-tight text-gray-900 dark:text-gray-200\">\n                  {user?.name}\n                </div>\n              </div>\n            </div>\n            <div aria-label=\"Default tabs\" className=\"px-4 pt-4\" style={{ lineHeight: '14px' }}>\n              <FormWithAudio fetcher={createPost} type=\"post\" post={null} editor={editor} />\n            </div>\n          </>\n        ) : (\n          <LogInMessage />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default PostForm;\n", "import { useEffect } from 'react';\nimport PostForm from '~/features/Post/PostForm';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport Posts from '~/features/Post/Posts';\nimport uselitteraTranlation from '~/locales/useLitteraTranslations';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { openFilterState, showLatest } from '~/states';\nimport { FaFilter } from 'react-icons/fa';\n\nexport default function PostSidebar({ editor }: { editor: any }) {\n  const data = useLoaderData();\n  let [params] = useSearchParams();\n  let selectedId = params.get('thread') as string;\n  useEffect(() => {\n    if (selectedId && selectedId !== '') {\n      setTimeout(() => {\n        document.getElementById('p_' + selectedId)?.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'center',\n        });\n        document.getElementById(selectedId)?.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'center',\n        });\n      }, 2000);\n    }\n  }, []);\n  const setOpenFilter = useSetRecoilState(openFilterState);\n\n  const translation = uselitteraTranlation();\n\n  if (data?.posts?.error) return <div className=\"mt-2 p-3 text-red-700\">Error:{data.posts.error}</div>;\n  return (\n    <div className=\"flex flex-col w-full flex-1\">\n      <PostForm editor={editor} />\n\n      <div className=\"sticky top-0 z-50  flex  w-full items-center justify-between gap-2 bg-white dark:bg-gray-700 \">\n        <div className=\"z-30 flex flex-1 items-center  justify-between  py-2\">\n          <div className=\"flex\">\n            <LatestFilter />\n            <button\n              id=\"filterButton\"\n              onClick={() => setOpenFilter((prev) => !prev)}\n              className=\"flex items-center justify-center space-x-2 rounded-lg border border-gray-200 px-3 py-2 filter\"\n            >\n              <FaFilter className=\"text-gray-500\" />\n              <span className=\"text-sm font-medium leading-tight text-gray-500 dark:text-gray-50\">\n                {translation.filter}\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <hr />\n\n      <Posts posts={data?.posts} editor={editor} />\n    </div>\n  );\n}\n\nconst LatestFilter = () => {\n  const [isLatest, setIsLatestPost] = useRecoilState(showLatest);\n  const options = ['Latest', 'Earliest'];\n  const toggleLatest = () => {\n    setIsLatestPost((prev) => !prev);\n  };\n  return (\n    <div\n      className=\"cursor-pointer p-3 text-sm font-medium leading-tight text-gray-500 dark:text-gray-50\"\n      onClick={toggleLatest}\n    >\n      {isLatest ? options[0] : options[1]}\n    </div>\n  );\n};\n", "import { Editor } from '@tiptap/react';\nimport { PostSidebar } from '~/features/Post';\n\nfunction Post({ editor }: { editor: Editor | null }) {\n  return (\n    <div\n      className={` hidden w-full md:flex transition-all duration-75 z-[1] `}\n      style={{ maxHeight: 'calc(100% - 60px)' }}\n    >\n      <PostSidebar editor={editor} />;\n    </div>\n  );\n}\n\nexport default Post;\n", "import { useFetcher, useLoaderData, useOutlet, useOutletContext } from '@remix-run/react';\nimport { Editor } from '@tiptap/react';\nimport { timeAgo } from '~/lib/getFormatedDate';\nimport { useDetectClickOutside } from 'react-detect-click-outside';\nimport { TextArea } from '~/component/UI';\nimport { AudioPlayer, AudioRecorder } from '../Media';\nimport { v4 as uuidv4 } from 'uuid';\nimport { replaceMarkContent } from '~/features/Editor/tiptap/markAction';\nimport Comment from './Comment';\nimport { useFetcherWithPromise } from '~/component/hooks/useFetcherPromise';\nimport { Button } from 'flowbite-react';\nimport { useState } from 'react';\n\ntype SuggestionProps = {\n  editor: Editor | null;\n  suggest: any;\n  optimistic: boolean;\n};\n\nexport default function Suggestion({ editor, suggest, optimistic = false }: SuggestionProps) {\n  const likeFetcher = useFetcherWithPromise();\n  const deleteFetcher = useFetcher();\n  const editFetcher = useFetcher();\n  const [effect, setEffect] = useState(false);\n  const [openEdit, setOpenEdit] = useState(false);\n  const [openComment, setOpenComment] = useState(false);\n  const [openEditMenu, setOpenEditMenu] = useState(false);\n  const { text, user } = useLoaderData();\n  const ref = useDetectClickOutside({\n    onTriggered: () => setOpenEditMenu(false),\n  });\n  let likedByMe = user ? suggest.likedBy.some((l) => l?.username === user.username) : false;\n\n  let likeInFetcher = likeFetcher?.formData?.get('like');\n  let likeCount = likeFetcher.data ? likeFetcher.data?.likedBy.likedBy.length : suggest.likedBy.length;\n  if (likeInFetcher === 'true') {\n    likedByMe = true;\n    if (likeFetcher.state === 'submitting') likeCount++;\n  }\n  if (likeInFetcher === 'false') {\n    likedByMe = false;\n    if (likeFetcher.state === 'submitting') likeCount--;\n  }\n  const handleLike = async (id: string) => {\n    if (!user) return;\n    setEffect(true);\n    const res = await likeFetcher.submit(\n      {\n        id,\n        like: !likedByMe ? 'true' : 'false',\n        threadId: suggest.threadId,\n      },\n      { method: 'POST', action: '/api/suggestion/like' },\n    );\n    replaceMarkContent(editor, suggest.threadId, res?.highestLiked);\n  };\n\n  let time = timeAgo(suggest.created_at);\n\n  function deleteSuggestion(id: string) {\n    let decision = confirm('do you want to delete the post');\n    if (decision) {\n      deleteFetcher.submit(\n        {\n          id,\n          threadId: suggest.threadId,\n        },\n        {\n          action: '/api/suggestion',\n          method: 'DELETE',\n        },\n      );\n    } else {\n      console.log('cancelled');\n    }\n  }\n  function checkPendetaName(val: string) {\n    let value = val.toLowerCase();\n    switch (value) {\n      case 'derge':\n        return '\u0F66\u0FA1\u0F7A\u0F0B\u0F51\u0F42\u0F7A';\n      case 'narthang':\n        return '\u0F66\u0FA3\u0F62\u0F0B\u0F50\u0F44\u0F0C\u0F0D';\n      case 'peking':\n        return '\u0F54\u0F7A\u0F0B\u0F45\u0F72\u0F53\u0F0D';\n      case 'chone':\n        return '\u0F46\u0F7C\u0F0B\u0F42\u0F53\u0F66\u0F0D';\n      default:\n        return val;\n    }\n  }\n  return (\n    <div key={suggest.id} className={`${deleteFetcher?.formData && 'hidden'} p-3 `}>\n      <div className=\"relative mb-2 flex justify-between\">\n        <div className=\"  flex items-center gap-3\">\n          {suggest.user.length && (\n            <>\n              <div className=\"flex -space-x-4\">\n                {suggest.user?.map((item) => (\n                  <img\n                    title={item.username}\n                    key={item.id}\n                    className=\"h-6 w-6 rounded-full border-2 border-white dark:border-gray-800\"\n                    src={item.avatarUrl}\n                    alt=\"a\"\n                  />\n                ))}\n              </div>\n              <div className=\"flex gap-1 text-base font-medium leading-tight text-gray-900 dark:text-gray-200 \">\n                {suggest.user?.map((item, index) => (\n                  <div key={item.id + index} className=\"text-md capitalize\">\n                    {checkPendetaName(item.username)}\n                    {index !== suggest.user.length - 1 && <span> | </span>}\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n          {suggest.oldValue && <p className=\"text-sm text-gray-600 dark:text-gray-400\">{time}</p>}\n        </div>\n        <button\n          className=\"inline-flex items-center rounded-lg text-center text-sm font-medium  text-gray-400 dark:bg-gray-700 dark:focus:ring-gray-600 dark:hover:bg-gray-600\"\n          type=\"button\"\n          onClick={() => setOpenEditMenu((p) => !p)}\n        >\n          <svg\n            className=\"h-5 w-5\"\n            aria-hidden=\"true\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\"></path>\n          </svg>\n        </button>\n\n        <div\n          ref={ref}\n          className={`${\n            openEditMenu ? 'absolute' : 'hidden'\n          } right-0 top-1.5 z-10 w-36 divide-y divide-gray-100 rounded bg-white shadow dark:divide-gray-600 dark:bg-gray-700`}\n        >\n          <ul\n            className=\"py-1 text-sm text-gray-700 dark:text-gray-200\"\n            aria-labelledby=\"dropdownMenuIconHorizontalButton\"\n          >\n            {user && suggest.user.length && suggest.user?.some((e) => e.username === user.username) && (\n              <>\n                <li>\n                  <div\n                    onClick={() => setOpenEdit(true)}\n                    className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                  >\n                    Edit\n                  </div>\n                </li>\n                <li>\n                  <div\n                    onClick={() => deleteSuggestion(suggest.id)}\n                    className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                  >\n                    Remove\n                  </div>\n                </li>\n              </>\n            )}\n            <li>\n              <div className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\n                Report\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      {suggest.oldValue ? (\n        <div className=\" mb-3 w-full text-base leading-normal text-black\">\n          <span className=\"text-sm font-bold\">Replace :</span>\n          <span\n            onClick={() => {\n              if (text.author.username === user.username)\n                replaceMarkContent(editor, suggest.threadId, suggest.oldValue);\n            }}\n            className={`text-gray-500 dark:text-gray-100`}\n          >\n            \"{suggest.oldValue}\"\n          </span>\n          <span className=\"text-sm font-bold\"> with :</span>\n          {openEdit ? (\n            <editFetcher.Form\n              className=\"flex gap-2\"\n              action=\"/api/suggestion\"\n              method=\"PATCH\"\n              onSubmit={() => setOpenEdit(false)}\n            >\n              <input\n                name=\"newValue\"\n                type=\"text\"\n                className=\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 sm:text-xs\"\n                defaultValue={suggest.newValue}\n              />\n              <input name=\"id\" type=\"text\" value={suggest.id} hidden />\n              <Button type=\"submit\">{editFetcher.state === 'submitting' ? 'saving' : 'confirm'}</Button>\n              <Button label=\"cancel\" type=\"reset\" onClick={() => setOpenEdit(false)} />\n            </editFetcher.Form>\n          ) : (\n            <span\n              onClick={() => {\n                if (text.author.username === user.username)\n                  replaceMarkContent(editor, suggest.threadId, suggest.newValue);\n              }}\n              className={`text-gray-500 dark:text-gray-100 `}\n            >\n              \"{suggest.newValue}\"\n            </span>\n          )}\n        </div>\n      ) : (\n        <div>\n          <span\n            onClick={() => {\n              if (text.author.username === user.username)\n                replaceMarkContent(editor, suggest.threadId, suggest.newValue);\n            }}\n            className={`text-gray-500 dark:text-gray-100 `}\n          >\n            \"{suggest.newValue}\"\n          </span>\n        </div>\n      )}\n\n      <div className=\"mb-2\">\n        {suggest?.audioUrl && suggest.audioUrl !== '' && <AudioPlayer src={suggest?.audioUrl} />}\n      </div>\n      <div className=\"flex justify-between\">\n        {optimistic ? (\n          <div className=\"text-light text-sm \">saving</div>\n        ) : (\n          <>\n            <div className=\"flex gap-4\">\n              <button\n                disabled={likeFetcher.state === 'submitting'}\n                onClick={() => handleLike(suggest.id)}\n                className={`${effect && 'animate-wiggle'} flex cursor-pointer items-center justify-start space-x-1.5`}\n                onAnimationEnd={() => setEffect(false)}\n              >\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    style={!likedByMe ? { fill: 'gray' } : { fill: 'lightgreen' }}\n                    d=\"M0.800049 7.95005C0.800049 7.77276 0.834968 7.59722 0.902812 7.43343C0.970655 7.26964 1.0701 7.12081 1.19545 6.99545C1.32081 6.8701 1.46964 6.77066 1.63343 6.70281C1.79722 6.63497 1.97276 6.60005 2.15005 6.60005C2.32733 6.60005 2.50288 6.63497 2.66667 6.70281C2.83046 6.77066 2.97928 6.8701 3.10464 6.99545C3.23 7.12081 3.32944 7.26964 3.39729 7.43343C3.46513 7.59722 3.50005 7.77276 3.50005 7.95005V13.35C3.50005 13.7081 3.35782 14.0515 3.10464 14.3046C2.85147 14.5578 2.50809 14.7 2.15005 14.7C1.79201 14.7 1.44863 14.5578 1.19545 14.3046C0.942281 14.0515 0.800049 13.7081 0.800049 13.35V7.95005ZM4.40005 7.79975V12.6867C4.39989 13.0212 4.49295 13.3492 4.66877 13.6337C4.84459 13.9183 5.09623 14.1482 5.39545 14.2977L5.44045 14.3202C5.93985 14.5698 6.49045 14.6999 7.04875 14.7H11.9231C12.3394 14.7002 12.7429 14.5561 13.0648 14.2922C13.3868 14.0284 13.6074 13.6611 13.6889 13.2528L14.7689 7.85285C14.8211 7.59173 14.8147 7.32229 14.7502 7.06395C14.6857 6.8056 14.5647 6.56478 14.3959 6.35886C14.227 6.15293 14.0146 5.98703 13.774 5.87311C13.5333 5.75918 13.2703 5.70008 13.004 5.70005H9.80005V2.10005C9.80005 1.62266 9.61041 1.16482 9.27284 0.827257C8.93528 0.489691 8.47744 0.300049 8.00005 0.300049C7.76135 0.300049 7.53244 0.39487 7.36365 0.563653C7.19487 0.732435 7.10005 0.961354 7.10005 1.20005V1.80035C7.10005 2.57928 6.84741 3.3372 6.38005 3.96035L5.12005 5.63975C4.65269 6.2629 4.40005 7.02082 4.40005 7.79975V7.79975Z\"\n                  ></path>\n                </svg>\n                <div className=\"  text-sm font-medium leading-tight text-gray-500 dark:text-gray-100\">\n                  {likeCount > 0 && likeCount}\n                </div>\n              </button>\n            </div>\n            {user && (\n              <div\n                onClick={() => setOpenComment((prev) => !prev)}\n                className={`flex items-start justify-start space-x-1.5  rounded-t-lg `}\n              >\n                <svg\n                  width=\"16\"\n                  height=\"13\"\n                  viewBox=\"0 0 16 13\"\n                  className=\"fill-gray-500 dark:fill-gray-100\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path d=\"M6.13858 7.95584L5.67917 8.15319C5.65821 8.10438 5.62774 8.06025 5.58953 8.02335L5.58328 8.01731L5.58334 8.01726L3.51964 5.95356L2.66608 5.1H3.87319H8.90059C10.2267 5.1 11.4984 5.62679 12.4361 6.56447C13.3738 7.50215 13.9006 8.77392 13.9006 10.1V11.9C13.9006 12.0061 13.9427 12.1078 14.0177 12.1828C14.0928 12.2579 14.1945 12.3 14.3006 12.3C14.4067 12.3 14.5084 12.2579 14.5834 12.1828C14.6584 12.1078 14.7006 12.0061 14.7006 11.9V10.1C14.7006 8.56175 14.0895 7.08649 13.0018 5.99878C11.9141 4.91107 10.4388 4.3 8.90059 4.3H3.87319H2.66608L3.51964 3.44645L5.58328 1.3828C5.5833 1.38279 5.58332 1.38277 5.58334 1.38275C5.65829 1.30774 5.7004 1.20604 5.7004 1.1C5.7004 0.993988 5.65831 0.892311 5.58339 0.817309C5.58335 0.817274 5.58332 0.817239 5.58328 0.817203M6.13858 7.95584L4.66429 0.463703C4.83306 0.294979 5.06194 0.200195 5.30059 0.200195C5.53924 0.200195 5.76811 0.294979 5.93689 0.463703L5.58328 0.817203M6.13858 7.95584L5.67917 8.15319C5.70014 8.20199 5.71117 8.25448 5.71163 8.30759C5.7121 8.3607 5.70197 8.41337 5.68186 8.46253C5.66175 8.51169 5.63205 8.55635 5.59449 8.59391C5.55693 8.63146 5.51227 8.66116 5.46312 8.68128C5.41396 8.70139 5.36128 8.71151 5.30817 8.71105C5.25506 8.71059 5.20257 8.69955 5.15377 8.67859C5.10497 8.65763 5.06083 8.62715 5.02393 8.58895L5.02399 8.58889L5.01784 8.58275L1.4179 4.9828C1.34291 4.90779 1.30078 4.80607 1.30078 4.7C1.30078 4.59396 1.34289 4.49226 1.41784 4.41726C1.41786 4.41724 1.41788 4.41722 1.4179 4.4172L5.01779 0.81731L6.13858 7.95584ZM5.58328 0.817203C5.50828 0.742282 5.40661 0.700195 5.30059 0.700195C5.19455 0.700195 5.09285 0.742302 5.01784 0.817256L5.58328 0.817203Z\" />\n                </svg>\n                <button className=\"text-sm font-medium leading-tight text-gray-500 dark:text-gray-100\">\n                  {!openComment ? 'Comment' : 'close'}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      {openComment && (\n        <CommentSection\n          id={suggest.id}\n          setOpenComment={setOpenComment}\n          comments={suggest.SuggestionComment}\n          type={likedByMe ? 'support' : 'reject'}\n        />\n      )}\n    </div>\n  );\n}\ntype CommentProps = {\n  id: string;\n  setOpenComment: (value: boolean) => void;\n  comments: [];\n  type: 'support' | 'reject' | null;\n};\nfunction CommentSection({ id, setOpenComment, comments, type }: CommentProps) {\n  const [commentText, setCommentText] = useState('');\n  const [audio, setAudio] = useState({ tempUrl: '', blob: null });\n  const data = useLoaderData();\n  const postCommentFetcher = useFetcher();\n\n  function postComment() {\n    let item = {\n      id,\n      commentContent: commentText,\n      type: type,\n    };\n    let blob = audio.blob;\n    var form_data = new FormData();\n    if (blob) {\n      form_data.append('file', blob, `text-${data?.text?.id}-${uuidv4()}.wav`);\n    }\n    for (var key in item) {\n      form_data.append(key, item[key]);\n    }\n    postCommentFetcher.submit(form_data, {\n      method: 'POST',\n      action: '/api/suggestion/comment',\n      encType: 'multipart/form-data',\n    });\n    setCommentText('');\n    setAudio({ blob: null, tempUrl: '' });\n  }\n  return (\n    <div className=\"mt-2 flex justify-between gap-2 rounded  bg-gray-100 pt-1\">\n      <div className=\"flex flex-1 flex-col gap-2 \">\n        <TextArea\n          onChange={(e) => setCommentText(e.target.value)}\n          placeholder=\"comment on suggestion\"\n          value={commentText}\n          rows={1}\n        />\n        {audio.tempUrl !== '' ? (\n          <>\n            <div className=\"my-2 flex w-full items-center gap-3\">\n              <AudioPlayer src={audio.tempUrl} />\n              <div onClick={() => setAudio({ tempUrl: '', blob: null })}>\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M9 2C8.81434 2.0001 8.63237 2.05188 8.47447 2.14955C8.31658 2.24722 8.18899 2.38692 8.106 2.553L7.382 4H4C3.73478 4 3.48043 4.10536 3.29289 4.29289C3.10536 4.48043 3 4.73478 3 5C3 5.26522 3.10536 5.51957 3.29289 5.70711C3.48043 5.89464 3.73478 6 4 6V16C4 16.5304 4.21071 17.0391 4.58579 17.4142C4.96086 17.7893 5.46957 18 6 18H14C14.5304 18 15.0391 17.7893 15.4142 17.4142C15.7893 17.0391 16 16.5304 16 16V6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5C17 4.73478 16.8946 4.48043 16.7071 4.29289C16.5196 4.10536 16.2652 4 16 4H12.618L11.894 2.553C11.811 2.38692 11.6834 2.24722 11.5255 2.14955C11.3676 2.05188 11.1857 2.0001 11 2H9ZM7 8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7C8.26522 7 8.51957 7.10536 8.70711 7.29289C8.89464 7.48043 9 7.73478 9 8V14C9 14.2652 8.89464 14.5196 8.70711 14.7071C8.51957 14.8946 8.26522 15 8 15C7.73478 15 7.48043 14.8946 7.29289 14.7071C7.10536 14.5196 7 14.2652 7 14V8ZM12 7C11.7348 7 11.4804 7.10536 11.2929 7.29289C11.1054 7.48043 11 7.73478 11 8V14C11 14.2652 11.1054 14.5196 11.2929 14.7071C11.4804 14.8946 11.7348 15 12 15C12.2652 15 12.5196 14.8946 12.7071 14.7071C12.8946 14.5196 13 14.2652 13 14V8C13 7.73478 12.8946 7.48043 12.7071 7.29289C12.5196 7.10536 12.2652 7 12 7Z\"\n                    className=\"fill-gray-200\"\n                  />\n                </svg>\n              </div>\n            </div>\n          </>\n        ) : null}\n        <div className=\"flex justify-between\">\n          {audio.tempUrl === '' ? <AudioRecorder setAudio={setAudio} /> : <div />}\n          <div className=\"flex justify-end gap-2\">\n            <Button\n              label={postCommentFetcher.state === 'submitting' ? 'commenting' : 'comment'}\n              type=\"submit\"\n              onClick={postComment}\n              disabled={!!postCommentFetcher.formData}\n            />\n            <Button label=\"cancel\" type=\"reset\" onClick={() => setOpenComment(false)} />\n          </div>\n        </div>\n        <Comment comments={comments} />\n      </div>\n    </div>\n  );\n}\n", "import { Editor } from '@tiptap/react';\n\nfunction removeMark(editor: Editor | null, id: string) {\n  if (!editor) return null;\n  let markID = id;\n  const { doc } = editor?.state;\n  doc.descendants((node, pos) => {\n    if (node.marks) {\n      node.marks.forEach((mark) => {\n        if (mark.attrs.id === markID) {\n          const from = pos;\n          const to = pos + node.nodeSize;\n          // Select the range\n          editor.view.dispatch(\n            editor.view.state.tr\n              .setSelection(editor.view.state.selection.constructor.near(editor.view.state.doc.resolve(from)))\n              .setSelection(editor.view.state.selection.constructor.near(editor.view.state.doc.resolve(to)))\n              .removeMark(from, to, mark.type),\n          );\n        }\n      });\n    }\n  });\n}\n\nfunction replaceMarkContent(editor: Editor | null, markID: string, content: string) {\n  if (!editor) return null;\n  const { doc } = editor?.state;\n\n  doc.descendants((node, pos) => {\n    if (node.marks && node.marks.length > 0) {\n      node.marks.forEach((mark) => {\n        if (mark.attrs.id === markID) {\n          const from = pos;\n          const to = pos + node.nodeSize;\n          // Select the range\n          let trx = editor.view.state.tr\n            .setSelection(editor.view.state.selection.constructor?.near(editor.view.state.doc.resolve(from)))\n            .setSelection(editor.view.state.selection.constructor?.near(editor.view.state.doc.resolve(to)));\n          const markType = editor.view.state.schema.marks.suggestion;\n          if (editor.state.doc.textBetween(from, to, ' ') !== content)\n            editor.view.dispatch(\n              trx.replaceWith(\n                from,\n                to,\n                editor.view.state.schema.text(content, [\n                  markType.create({\n                    id: markID,\n                  }),\n                ]),\n              ),\n            );\n        }\n      });\n    }\n  });\n}\nexport { removeMark, replaceMarkContent };\n", "import { timeAgo } from '~/lib/getFormatedDate';\nimport { SuggestionCommentType } from '~/model/type';\nimport { AudioPlayer } from '../Media';\nimport { useState } from 'react';\nimport { useDetectClickOutside } from 'react-detect-click-outside';\nimport { useFetcher, useOutletContext } from '@remix-run/react';\nimport { TextArea } from '~/component/UI';\nimport { Button } from 'flowbite-react';\ntype CommentProps = {\n  comments: SuggestionCommentType[];\n};\n\nexport default function Comments({ comments }: CommentProps) {\n  return (\n    <>\n      {comments.length > 0 &&\n        comments.map((comment: SuggestionCommentType, index) => <Comment key={comment.id} comment={comment} />)}\n    </>\n  );\n}\n\nconst Comment = ({ comment }: { comment: SuggestionCommentType }) => {\n  const [openEditMenu, setOpenEditMenu] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [newContent, setNewContent] = useState(comment.text);\n  const [checked, setChecked] = useState(comment.type === 'support');\n  const { user } = useOutletContext();\n\n  const ref = useDetectClickOutside({\n    onTriggered: () => setOpenEditMenu(false),\n  });\n  let color = comment.type === 'support' ? 'bg-green-100' : comment.type === 'reject' ? 'bg-red-100' : null;\n  let time = timeAgo(comment.createdAt);\n  let fetcher = useFetcher();\n  let handleEdit = () => {\n    setEdit(true);\n  };\n  let handleDelete = () => {\n    let decision = confirm('do you want to delete the post');\n    if (decision) {\n      fetcher.submit(\n        {\n          id: comment.id,\n        },\n        {\n          action: 'api/suggestion/comment',\n          method: 'DELETE',\n          encType: 'multipart/form-data',\n        },\n      );\n    } else {\n      console.log('cancelled');\n    }\n  };\n  const handleSubmit = () => {\n    fetcher.submit(\n      {\n        id: comment.id,\n        newContent: newContent,\n        type: checked ? 'support' : 'reject',\n      },\n      {\n        action: 'api/suggestion/comment',\n        method: 'PATCH',\n        encType: 'multipart/form-data',\n      },\n    );\n    setEdit(false);\n  };\n  let audioPresent = comment.audioUrl && comment.audioUrl !== '';\n  return (\n    <div className={`rounded-lg p-2  text-base dark:bg-gray-700 ${color}`}>\n      <div className=\"mb-2 flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <p className=\"mr-3 inline-flex items-center text-sm text-gray-900 dark:text-white\">\n            <img className=\"mr-2 h-6 w-6 rounded-full\" src={comment.author?.avatarUrl} alt=\"author image\" />\n            {comment.author?.name}\n          </p>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">{time}</p>\n        </div>\n        <div className=\"relative ml-3\" ref={ref}>\n          <button\n            className=\" inline-flex items-center rounded-lg text-center text-sm font-medium  text-gray-400    dark:bg-gray-700 dark:focus:ring-gray-600 dark:hover:bg-gray-600\"\n            type=\"button\"\n            onClick={() => setOpenEditMenu((p) => !p)}\n          >\n            <svg\n              className=\"h-5 w-5\"\n              aria-hidden=\"true\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\"></path>\n            </svg>\n          </button>\n\n          <div\n            className={`${\n              openEditMenu ? 'absolute' : 'hidden'\n            } right-0 top-1.5 z-10 w-36 divide-y divide-gray-100 rounded bg-white shadow dark:divide-gray-600 dark:bg-gray-700`}\n          >\n            <ul\n              className=\"py-1 text-sm text-gray-700 dark:text-gray-200\"\n              aria-labelledby=\"dropdownMenuIconHorizontalButton\"\n            >\n              {user && user.username === comment?.author.username && (\n                <>\n                  <li>\n                    <div\n                      onClick={handleEdit}\n                      className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                    >\n                      Edit\n                    </div>\n                  </li>\n                  <li>\n                    <div\n                      onClick={handleDelete}\n                      className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\"\n                    >\n                      Remove\n                    </div>\n                  </li>\n                </>\n              )}\n              <li>\n                <div className=\"block cursor-pointer px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white\">\n                  Report\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {edit ? (\n        <div className=\"flex flex-col\">\n          <TextArea value={newContent} onChange={(e) => setNewContent(e.target.value)}></TextArea>\n          <div className=\"mt-2 flex justify-between gap-2\">\n            <div className=\"flex-1 \">\n              <label htmlFor={'checkbox' + comment.id} className=\"mr-2\">\n                support\n              </label>\n              <input\n                type=\"checkbox\"\n                id={'checkbox' + comment.id}\n                className=\"h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600\"\n                defaultChecked={checked}\n                onChange={(e) => setChecked(e.target.checked)}\n              ></input>\n              {audioPresent && <AudioPlayer src={comment.audioUrl} />}\n            </div>\n            <Button onClick={handleSubmit} label=\"submit\" type=\"submit\" />\n            <Button onClick={() => setEdit(false)} label=\"cancel\" type=\"reset\" />\n          </div>\n        </div>\n      ) : (\n        <>\n          {audioPresent && <AudioPlayer src={comment.audioUrl} />}\n\n          <p className=\"text-gray-500 dark:text-gray-400\">{comment.text}</p>\n        </>\n      )}\n    </div>\n  );\n};\n", "import { useRef, useEffect, useCallback } from 'react';\nimport { SubmitFunction, useFetcher } from '@remix-run/react';\nexport function useFetcherWithPromise() {\n  let resolveRef = useRef<any>();\n  let promiseRef = useRef<Promise<any>>();\n  let fetcher = useFetcher();\n\n  if (!promiseRef.current) {\n    promiseRef.current = new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }\n\n  const resetResolver = useCallback(() => {\n    promiseRef.current = new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }, [promiseRef, resolveRef]);\n\n  const submit: SubmitFunction = useCallback(\n    async (...args) => {\n      fetcher.submit(...args);\n      return promiseRef.current;\n    },\n    [fetcher, promiseRef],\n  );\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.state === 'idle') {\n      resolveRef.current(fetcher.data);\n      resetResolver();\n    }\n  }, [fetcher, resetResolver]);\n\n  return { ...fetcher, submit };\n}\n", "import { Editor } from '@tiptap/react';\nimport Suggestion from './Suggestion';\nimport { useLoaderData } from '@remix-run/react';\nfunction Suggestions({ editor }: { editor: Editor | null }) {\n  const { suggestions } = useLoaderData();\n\n  let groupedSuggestion = transformObjectsByNewValue(suggestions);\n  return (\n    <div\n      className=\"z-1 flex-1 overflow-visible overflow-y-auto bg-slate-50 p-2 shadow-md dark:bg-gray-700\"\n      style={{ minWidth: 350, fontFamily: 'sans-serif' }}\n    >\n      <div className=\"flex flex-col  gap-2 \">\n        {groupedSuggestion.map((suggest) => {\n          return <Suggestion optimistic={false} editor={editor} suggest={suggest} key={suggest.id} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Suggestions;\n\nfunction combineObjectsByNewValue(objects) {\n  const combinedObjects = {};\n\n  objects.forEach((obj) => {\n    const { newValue } = obj;\n    if (newValue in combinedObjects) {\n      combinedObjects[newValue].push(obj);\n    } else {\n      combinedObjects[newValue] = [obj];\n    }\n  });\n\n  return combinedObjects;\n}\n\nfunction transformObjectsByNewValue(objects) {\n  const transformedObjects = [];\n\n  const combinedObjects = combineObjectsByNewValue(objects);\n\n  for (const newValue in combinedObjects) {\n    const objectsWithSameNewValue = combinedObjects[newValue];\n    const usersArray = objectsWithSameNewValue.map((obj) => obj.user);\n    const likedByArray = objectsWithSameNewValue.reduce((likedByArr, obj) => {\n      likedByArr.push(...obj.likedBy);\n      return likedByArr;\n    }, []);\n\n    objectsWithSameNewValue.forEach((obj) => {\n      const newObj = { ...obj };\n      newObj.user = usersArray;\n      newObj.likedBy = likedByArray;\n      transformedObjects.push(newObj);\n    });\n  }\n\n  // Remove repeating newValue data\n  const uniqueValues = [...new Set(transformedObjects.map((obj) => obj.newValue))];\n  const uniqueTransformedObjects = uniqueValues.map((newValue) => {\n    const objectsWithSameNewValue = transformedObjects.filter((obj) => obj.newValue === newValue);\n    return objectsWithSameNewValue[0];\n  });\n\n  return uniqueTransformedObjects;\n}\n", "import { useLoaderData, useSearchParams } from '@remix-run/react';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Editor } from '@tiptap/react';\nimport { TextArea, MustLoggedIn as LogInMessage } from '~/component/UI';\nimport Suggestion from './Suggestion';\nimport { AudioPlayer, AudioRecorder } from '../Media';\nimport { useFetcherWithPromise } from '~/component/hooks/useFetcherPromise';\nimport { Button } from 'flowbite-react';\ntype SuggestionFormProps = {\n  editor: Editor | null;\n};\n\nexport default function SuggestionForm({ editor }: SuggestionFormProps) {\n  let { user, page, text } = useLoaderData();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [suggestionInput, setSuggestionInput] = useState('');\n  const [error, setError] = useState<null | string>(null);\n  const addSuggestion = useFetcherWithPromise();\n  const [audio, setAudio] = useState({ tempUrl: '', blob: null });\n  const handleSuggestionSubmit = async () => {\n    if (suggestionInput === '') {\n      setError('suggestion cannot be empty');\n      return null;\n    }\n    const { state } = editor;\n    const { from, to } = state.selection;\n    const originalText = state.doc.textBetween(from, to, ' ');\n    let id = null;\n\n    if (!editor.isActive('suggestion')) {\n      id = uuidv4();\n    } else {\n      id = editor.getAttributes('suggestion').id;\n    }\n\n    let item = {\n      oldValue: originalText,\n      textId: text.id,\n      pageId: page?.id,\n      newValue: suggestionInput,\n      userId: user?.id,\n      threadId: id,\n    };\n    let blob = audio.blob;\n    var form_data = new FormData();\n    if (blob) {\n      form_data.append('file', blob, `text-${text?.id}-${uuidv4()}.wav`);\n    }\n    for (var key in item) {\n      form_data.append(key, item[key]);\n    }\n    let awaitdata = await addSuggestion.submit(form_data, {\n      action: '/api/suggestion',\n      method: 'POST',\n      encType: 'multipart/form-data',\n    });\n    if (!awaitdata?.message) {\n      editor.commands.setSuggestion({\n        id,\n        original: originalText,\n      });\n      setError(null);\n      setSuggestionInput('');\n      setAudio({\n        blob: null,\n        tempUrl: '',\n      });\n    }\n  };\n  const handleSuggestionCancel = () => {\n    setSearchParams((p) => {\n      p.set('with', 'all');\n      return p;\n    });\n  };\n  let isPosting = addSuggestion.formData;\n  if (!user) return <LogInMessage />;\n  if (isPosting)\n    return (\n      <div className=\"bg-slate-50 p-2 shadow-md dark:bg-gray-700 \">\n        <div className=\"flex flex-col gap-2 \">\n          <Suggestion\n            editor={null}\n            optimistic={true}\n            suggest={{\n              created_at: new Date(),\n              id: '',\n              likedBy: [],\n              newValue: addSuggestion.formData?.get('newValue') as string,\n              oldValue: addSuggestion.formData?.get('oldValue') as string,\n              textId: parseInt(addSuggestion.formData?.get('textId') as string),\n              threadId: addSuggestion.formData?.get('threadId') as string,\n              updatedAt: new Date(),\n              user: user,\n              suggestionComments: [],\n              userId: '',\n              text: text.id,\n              audioUrl: '',\n            }}\n          />\n        </div>\n      </div>\n    );\n  return (\n    <div className=\" bg-slate-50 p-2 shadow-md dark:bg-gray-700\">\n      {addSuggestion.data?.message && <div className=\"font-sm text-red-500\">{addSuggestion.data?.message}</div>}\n      <TextArea\n        placeholder=\"any suggestion?\"\n        value={suggestionInput}\n        rows={1}\n        onChange={(e) => setSuggestionInput(e.target.value)}\n      />\n      {audio.tempUrl !== '' ? (\n        <>\n          <div className=\"mt-2 flex w-full items-center gap-3\">\n            <AudioPlayer src={audio.tempUrl} />\n            <div onClick={() => setAudio({ tempUrl: '', blob: null })}>\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M9 2C8.81434 2.0001 8.63237 2.05188 8.47447 2.14955C8.31658 2.24722 8.18899 2.38692 8.106 2.553L7.382 4H4C3.73478 4 3.48043 4.10536 3.29289 4.29289C3.10536 4.48043 3 4.73478 3 5C3 5.26522 3.10536 5.51957 3.29289 5.70711C3.48043 5.89464 3.73478 6 4 6V16C4 16.5304 4.21071 17.0391 4.58579 17.4142C4.96086 17.7893 5.46957 18 6 18H14C14.5304 18 15.0391 17.7893 15.4142 17.4142C15.7893 17.0391 16 16.5304 16 16V6C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5C17 4.73478 16.8946 4.48043 16.7071 4.29289C16.5196 4.10536 16.2652 4 16 4H12.618L11.894 2.553C11.811 2.38692 11.6834 2.24722 11.5255 2.14955C11.3676 2.05188 11.1857 2.0001 11 2H9ZM7 8C7 7.73478 7.10536 7.48043 7.29289 7.29289C7.48043 7.10536 7.73478 7 8 7C8.26522 7 8.51957 7.10536 8.70711 7.29289C8.89464 7.48043 9 7.73478 9 8V14C9 14.2652 8.89464 14.5196 8.70711 14.7071C8.51957 14.8946 8.26522 15 8 15C7.73478 15 7.48043 14.8946 7.29289 14.7071C7.10536 14.5196 7 14.2652 7 14V8ZM12 7C11.7348 7 11.4804 7.10536 11.2929 7.29289C11.1054 7.48043 11 7.73478 11 8V14C11 14.2652 11.1054 14.5196 11.2929 14.7071C11.4804 14.8946 11.7348 15 12 15C12.2652 15 12.5196 14.8946 12.7071 14.7071C12.8946 14.5196 13 14.2652 13 14V8C13 7.73478 12.8946 7.48043 12.7071 7.29289C12.5196 7.10536 12.2652 7 12 7Z\"\n                  className=\"fill-gray-200\"\n                />\n              </svg>\n            </div>\n          </div>\n        </>\n      ) : null}\n      {error && <div className=\"text-red-400\">{error}</div>}\n      <div className=\"flex justify-between\">\n        {audio.tempUrl === '' ? <AudioRecorder setAudio={setAudio} /> : <div />}\n        <div className=\"mt-3 flex justify-end gap-2\">\n          <Button\n            disabled={addSuggestion.state !== 'idle'}\n            onClick={handleSuggestionSubmit}\n            type=\"submit\"\n            label=\"submit\"\n            className=\"bg-green-400 text-white pr-3\"\n          />\n          <Button onClick={handleSuggestionCancel} type=\"reset\" label=\"cancel\" className=\"bg-transparent text-black\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import SuggestionContainer from './SuggestionContainer';\nimport SuggestionForm from './SuggestionForm';\nimport Comment from './Comment';\nimport Suggestion from './Suggestion';\nimport { Editor } from '@tiptap/react';\n\nexport { SuggestionContainer, Comment, Suggestion, SuggestionForm };\n\nexport function SuggestionSidebar({ editor }: { editor: Editor }) {\n  return (\n    <div className=\"z-20 w-full border-l\">\n      <SuggestionForm editor={editor} />\n      <SuggestionContainer editor={editor} />\n    </div>\n  );\n}\n", "import { Editor } from '@tiptap/react';\nimport { SuggestionSidebar } from '~/features/Suggestion';\n\nfunction Suggestion({ editor }: { editor: Editor }) {\n  return <SuggestionSidebar editor={editor} />;\n}\n\nexport default Suggestion;\n", "// create post\n\nimport { db } from '~/services/db.server';\nimport { getPage } from './page';\n\nexport async function createPost(\n  type: string,\n  avatar: string,\n  topic_id: number,\n  post_id: number,\n  threadId: string,\n  textId: number,\n  pageId: string,\n  content: string,\n  creatorUser_id: string,\n  audioUrl: string,\n  selectionContent: string,\n) {\n  try {\n    let data = {\n      type: type,\n      avatar: avatar,\n      topic_id: topic_id,\n      post_id: post_id,\n      content: content,\n      threadId,\n      creatorUser_id: creatorUser_id,\n      textId: textId,\n      pageId: pageId,\n      audioUrl: audioUrl,\n      selection: selectionContent,\n    };\n    const createPost = await db.post.create({\n      data,\n    });\n    return createPost;\n  } catch (e) {\n    console.log(e);\n    throw new Error('post couldnot be created ' + e);\n  }\n}\n\n//find post\nexport async function findPostByUser(userId) {\n  try {\n    let posts = await db.post.findMany({\n      where: {\n        creatorUser: { id: userId },\n      },\n      include: {\n        reply: true,\n      },\n    });\n    return posts;\n  } catch (e) {\n    return 'couldnot find by userId' + e.message;\n  }\n}\nexport async function findPostByTopicId(TopicId: number) {\n  try {\n    let posts = await db.post.findFirst({\n      where: {\n        topic_id: TopicId,\n      },\n      include: {\n        reply: true,\n      },\n    });\n    return posts;\n  } catch (e) {\n    return 'couldnot find the by TopicId' + e.message;\n  }\n}\nexport async function findPostByTextIdAndPage(textId: number, order: number, version: string | null) {\n  try {\n    const page = await getPage(textId, order, version);\n    if (!page) throw new Error('page not found');\n    let posts = await db.post.findMany({\n      include: {\n        creatorUser: true,\n        likedBy: true,\n        reply: true,\n      },\n      where: {\n        textId,\n        pageId: page.id,\n      },\n    });\n    const postWithReply = await Promise.all(\n      posts.map(async (post) => {\n        const isSolved = post.reply.filter((l) => l.is_approved === true).length > 0;\n\n        return {\n          ...post,\n          replyCount: 2, //-1 because the parent post is included here\n          isSolved,\n        };\n      }),\n    );\n    return postWithReply.filter(Boolean);\n  } catch (e) {\n    return { error: e };\n  }\n}\n\nexport async function findPostByUserLiked(id: string, userId: string) {\n  try {\n    let f = await db.post.findFirst({\n      where: {\n        id: id,\n        likedBy: {\n          some: {\n            id: userId,\n          },\n        },\n      },\n    });\n    return f;\n  } catch (e) {\n    throw new Error('could not find post by userliked' + e.message);\n  }\n}\n//update post\n\nexport async function updatePostLike(id: string, userId: string, payload: boolean) {\n  try {\n    let response = await db.post.update({\n      data: {\n        likedBy: payload\n          ? {\n              connect: {\n                id: userId,\n              },\n            }\n          : {\n              disconnect: {\n                id: userId,\n              },\n            },\n      },\n      where: {\n        id,\n      },\n      select: {\n        likedBy: true,\n        textId: true,\n      },\n    });\n    return response;\n  } catch (e) {\n    throw new Error('update post like error: ' + e.message);\n  }\n}\nexport async function updatePostContentandAudio(id: string, content: string, audioUrl: string) {\n  try {\n    let response = await db.post.update({\n      data: {\n        content,\n        audioUrl,\n      },\n      where: {\n        id,\n      },\n    });\n    return response;\n  } catch (e) {\n    throw new Error('update post content error: ' + e.message);\n  }\n}\n\n//delete post\nexport async function deletePost(id: string) {\n  try {\n    let data = await db.post.delete({\n      where: {\n        id,\n      },\n    });\n    return data;\n  } catch (e) {\n    throw new Error('cannot delete post ', e);\n  }\n}\n", "import { ActionFunction } from '@remix-run/server-runtime';\nimport {\n  createCommentOnSuggestion,\n  deleteCommentOnSuggestion,\n  updateCommentOnSuggestion,\n} from '~/model/suggestionComment';\nimport { getUserSession } from '~/services/session.server';\n\nimport { uploadAudio } from '~/services/uploadAudio.server';\nimport type { UploadHandler } from '@remix-run/node';\nimport {\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from '@remix-run/node';\nexport let action: ActionFunction = async ({ request }) => {\n  const user = await getUserSession(request);\n  const uploadHandler: UploadHandler = composeUploadHandlers(uploadAudio, createMemoryUploadHandler());\n  const formData = await parseMultipartFormData(request, uploadHandler);\n  let Obj = Object.fromEntries(formData);\n  if (request.method === 'POST') {\n    let comment = Obj.commentContent as string;\n    let id = Obj.id as string;\n    let audioUrl = Obj.file as string;\n    let type = Obj.type as 'support' | 'reject' | null;\n    let createComment = await createCommentOnSuggestion(comment, id, user.id, audioUrl, type);\n    return createComment;\n  }\n  if (request.method === 'DELETE') {\n    let id = Obj.id as string;\n    let deleteComment = await deleteCommentOnSuggestion(parseInt(id));\n    return deleteComment;\n  }\n  if (request.method === 'PATCH') {\n    let id = Obj.id as string;\n    let newContent = Obj.newContent as string;\n    let type = Obj.type as string;\n    let updateComment = await updateCommentOnSuggestion(parseInt(id), newContent, type);\n    return updateComment;\n  }\n  return null;\n};\n", "import { db } from '~/services/db.server';\n\n//create comment on suggestion\n\nexport async function createCommentOnSuggestion(\n  text: string,\n  suggestionId: string,\n  userId: string,\n  audioUrl: string,\n  type: 'support' | 'reject' | null\n) {\n  const comment = await db.suggestionComment.create({\n    data: {\n      text,\n      suggestionId,\n      userId,\n      audioUrl,\n      type,\n    },\n  });\n  return comment;\n}\n\nexport async function deleteCommentOnSuggestion(id: number) {\n  const comment = await db.suggestionComment.delete({\n    where: {\n      id,\n    },\n  });\n  return comment;\n}\nexport async function updateCommentOnSuggestion(id: number, newContent: string, type: string) {\n  const comment = await db.suggestionComment.update({\n    where: {\n      id,\n    },\n    data: {\n      text: newContent,\n      type,\n    },\n  });\n  return comment;\n}\n", "import { UploadHandler, writeAsyncIterableToWritable } from '@remix-run/node';\nimport * as AWS from 'aws-sdk';\nimport { PassThrough } from 'stream';\n// Replace these values with your own\nconst AWS_ACCESS_KEY_ID = process.env.AWS_ACCESS_KEY_ID_PRODUCTION;\nconst AWS_SECRET_ACCESS_KEY = process.env.AWS_SECRET_ACCESS_KEY_PRODUCTION;\nconst BUCKET_NAME = process.env.BUCKET_NAME_PRODUCTION ?? '';\n\n// Set up the S3 client with your AWS credentials\n\nconst uploadStream = ({ Key }: Pick<AWS.S3.Types.PutObjectRequest, 'Key'>) => {\n  const s3 = new AWS.S3({\n    accessKeyId: AWS_ACCESS_KEY_ID,\n    secretAccessKey: AWS_SECRET_ACCESS_KEY,\n  });\n  const pass = new PassThrough();\n  const KEY_NAME = `comments/audio/${Key}`;\n  return {\n    writeStream: pass,\n    promise: s3\n      .upload({ Bucket: BUCKET_NAME, Key: KEY_NAME, Body: pass })\n      .on('httpUploadProgress', function (progress) {\n        console.log('Uploaded :: ' + (progress.loaded * 100) / progress.total) + '%';\n      })\n      .promise(),\n  };\n};\n\nexport async function uploadStreamToS3(data: any, filename: string) {\n  const stream = uploadStream({\n    Key: filename,\n  });\n  await writeAsyncIterableToWritable(data, stream.writeStream);\n  const file = await stream.promise;\n  return file.Location;\n}\n\nexport const uploadAudio: UploadHandler = async ({ name, filename, data }) => {\n  if (name !== 'file') {\n    return undefined;\n  }\n  const uploadedFileLocation = await uploadStreamToS3(data, filename!);\n  return uploadedFileLocation;\n};\n", "import { ActionFunction, json } from '@remix-run/server-runtime';\nimport { findSuggestionByUserLiked, findSuggestionWithMostLikes, updateSuggestionLike } from '~/model/suggestion';\nimport { getUserSession } from '~/services/session.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  let user = await getUserSession(request);\n  const formData = await request.formData();\n  let Obj = Object.fromEntries(formData);\n  let id = Obj.id as string;\n\n  let threadId = Obj.threadId as string;\n\n  const likedUsers = await findSuggestionByUserLiked(id, user.id);\n  try {\n    let update = await updateSuggestionLike(id, user.id, likedUsers === null);\n    if (update) {\n      const highestLiked = await findSuggestionWithMostLikes(threadId);\n      if (highestLiked) {\n        return json(\n          {\n            highestLiked: highestLiked.newValue,\n            likedBy: update,\n          },\n          {\n            headers: {\n              'Cache-Control': 'max-age=0, s-maxage=0',\n            },\n          },\n        );\n      }\n    }\n    return true;\n  } catch (e) {\n    console.log(e);\n  }\n  return { success: true };\n};\n", "import { User } from '@prisma/client';\nimport { ActionFunction } from '@remix-run/node';\nimport { languageOptionsType } from '~/constants';\nimport { createTranslation, deleteTranslation } from '~/model/translation';\nimport { getUser } from '~/model/user';\nimport { getUserSession } from '~/services/session.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  let formdata = await request.formData();\n  let user_session = await getUserSession(request);\n  let user = (await getUser(user_session.username)) as User;\n  let content = formdata.get('content') as string;\n  let textId = formdata.get('textId') as string;\n  let order = formdata.get('pageId') as string;\n  let name = formdata.get('name') as string;\n  let language = formdata.get('language') as languageOptionsType;\n  let method = request.method;\n\n  switch (method) {\n    case 'POST':\n      let userId = user?.id;\n      return await createTranslation(parseInt(textId), parseInt(order), language, content, userId, name);\n\n    case 'DELETE':\n      let id = formdata.get('id') as string;\n      return await deleteTranslation(parseInt(id));\n  }\n\n  return null;\n};\n", "import { LoaderFunction } from '@remix-run/server-runtime';\nimport { json } from 'react-router';\nimport { UserType } from '~/model/type';\nimport { getAllUser } from '~/model/user';\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const userName = new URL(request.url).searchParams.get('filterUser') ?? '';\n\n  if (userName === '') return json([]);\n  const userList: UserType[] = await getAllUser();\n\n  const fetchData = userList.filter((user: UserType) => user?.username.toLowerCase().includes(userName.toLowerCase()));\n  return json(fetchData);\n};\n", "import { LoaderFunction, ActionFunction } from '@remix-run/server-runtime';\nimport { json } from 'react-router';\nimport {\n  createSuggestion,\n  deleteSuggestion,\n  getSuggestionWithThreadId,\n  updateSuggestionContent,\n} from '~/model/suggestion';\nimport { uploadAudio } from '~/services/uploadAudio.server';\nimport type { UploadHandler } from '@remix-run/node';\nimport {\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from '@remix-run/node';\nimport { db } from '~/services/db.server';\nexport let loader: LoaderFunction = async ({ request }) => {\n  const suggestionId = new URL(request.url).searchParams.get('suggestionId') ?? '';\n  const suggestion = await getSuggestionWithThreadId(suggestionId);\n  return json(suggestion);\n};\nexport let action: ActionFunction = async ({ request }) => {\n  if (request.method === 'POST') {\n    const uploadHandler: UploadHandler = composeUploadHandlers(uploadAudio, createMemoryUploadHandler());\n    const formData = await parseMultipartFormData(request, uploadHandler);\n    let Obj = Object.fromEntries(formData);\n    const oldValue = Obj.oldValue as string;\n    const textId = Obj.textId as string;\n    const newValue = Obj.newValue as string;\n    const userId = Obj.userId as string;\n    const threadId = Obj.threadId as string;\n    const filepath = Obj.file as string;\n    const pageId = Obj.pageId as string;\n\n    try {\n      let responce = await createSuggestion({\n        oldValue,\n        newValue,\n        textId,\n        pageId,\n        userId,\n        threadId,\n        audioUrl: filepath,\n      });\n      console.log(responce);\n      return { responce };\n    } catch (e) {\n      console.log(e);\n      return { message: e };\n    }\n  } else {\n    let formData = await request.formData();\n    let Obj = Object.fromEntries(formData);\n    if (request.method === 'DELETE') {\n      let id = Obj.id as string;\n      let threadId = Obj.threadId as string;\n      let count = await deleteSuggestion(id);\n      if (count === 0) {\n        let delete_annotation = await db.annotations.deleteMany({\n          where: { id: threadId },\n        });\n      }\n\n      return {\n        remain: count,\n      };\n    }\n    if (request.method === 'PATCH') {\n      let id = Obj.id as string;\n      let newValue = Obj.newValue as string;\n      let res = await updateSuggestionContent(id, newValue);\n      return res;\n    }\n  }\n  return null;\n};\n", "import { LoaderFunction } from '@remix-run/server-runtime';\nimport { json } from 'react-router';\nimport { getposts } from '~/services/discourseApi';\nimport { findPostByTopicId } from '~/model/post';\nimport { findReplyByPostId } from '~/model/reply';\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const id = parseInt(params?.id!);\n  const post = await findPostByTopicId(id);\n  let posts: any[] = [];\n  const postsData = await getposts(id);\n  const replyList = await findReplyByPostId(post?.id);\n\n  let postsList = postsData?.post_stream?.posts;\n  if (!replyList[0]?.post_id) {\n    postsList?.shift();\n  }\n  posts = combineArrays(replyList, postsList);\n\n  return json({\n    posts,\n  });\n};\n\nfunction combineArrays(array1: any[], array2: any[]): any[] {\n  if (array1.length < 1 || array2.length < 1) return array2 || [];\n  const idMap = new Map(array1?.map((obj) => [String(obj.id), obj]));\n  return array2\n    .map((obj) => {\n      const matchingObject = idMap.get(String(obj.id));\n      return matchingObject ? { ...obj, ...matchingObject } : obj;\n    })\n    .slice(1)\n    .sort((a, b) => {\n      if (a.is_approved === b.is_approved) {\n        return 0;\n      }\n      return a.is_approved ? -1 : 1;\n    });\n}\n", "//create reply\n\nimport { db } from '~/services/db.server';\n\nexport async function createReply(id: string, postId: string, likedById: string) {\n  try {\n    let reply = await db.reply.create({\n      data: {\n        id,\n        parentPost: {\n          connect: {\n            id: postId,\n          },\n        },\n        likedBy: {\n          connect: {\n            id: likedById,\n          },\n        },\n      },\n      include: {\n        likedBy: true,\n      },\n    });\n    return reply;\n  } catch (e) {\n    throw new Error('creating reply Error ' + e.message);\n  }\n}\n\nexport async function findReply(id: string, likedBy: string) {\n  try {\n    let data = await db.reply.findFirst({\n      where: {\n        id,\n        likedBy: {\n          some: {\n            id: likedBy,\n          },\n        },\n      },\n    });\n    return data;\n  } catch (e) {\n    throw new Error('couldnot find reply error' + e.message);\n  }\n}\nexport async function findReplyByPostId(post_id: string) {\n  try {\n    let res = await db.reply.findMany({\n      where: {\n        post_id,\n      },\n      include: {\n        likedBy: true,\n      },\n      orderBy: {\n        is_approved: 'asc',\n      },\n    });\n    return res;\n  } catch (e) {\n    throw new Error('finding reply by postId error' + e.message);\n  }\n}\nexport async function findAproved(id: string) {\n  try {\n    let res = await db.reply.findFirst({\n      where: {\n        id,\n      },\n      select: {\n        is_approved: true,\n      },\n    });\n    return res;\n  } catch (e) {\n    throw new Error('error finding aproved in reply' + e.message);\n  }\n}\nexport async function isReplyPresent(replyId: string): Promise<boolean> {\n  try {\n    const reply = await db.reply.findUnique({\n      where: {\n        id: replyId,\n      },\n    });\n\n    return !!reply; // Returns true if reply exists, false otherwise\n  } catch (error) {\n    throw new Error(`Error checking reply presence: ${error.message}`);\n  }\n}\n//update isAproved\nexport async function updateLikeReply(id: string, likedBy: string, put: boolean) {\n  try {\n    await db.reply.update({\n      where: {\n        id,\n      },\n      data: {\n        likedBy: put\n          ? {\n              connect: {\n                id: likedBy,\n              },\n            }\n          : {\n              disconnect: {\n                id: likedBy,\n              },\n            },\n      },\n    });\n  } catch (e) {\n    throw new Error('couldnot update reply error' + e.message);\n  }\n}\nexport async function updateIsAproved(id: string, is_approved: boolean) {\n  try {\n    let res = await db.reply.update({\n      where: {\n        id,\n      },\n      data: {\n        is_approved,\n      },\n    });\n    return res;\n  } catch (e) {\n    throw new Error('updating approved error' + e);\n  }\n}\n", "import { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\nimport { commitSession, destroyUserSession, getSession, getUserSession, login } from '~/services/session.server';\nimport { createUserInDB, isUserPresent } from '~/model/user';\nimport { ForumLink } from '~/constants';\nexport let loader: LoaderFunction = async ({ request }) => {\n  const session = await getSession(request.headers.get('Cookie'));\n\n  const url = new URL(request.url);\n  const sso = url.searchParams.get('sso');\n  const sig = url.searchParams.get('sig');\n  if (sso && sig) {\n    let payload = atob(sso);\n    let decoded = unescape(payload);\n    let params = new URLSearchParams(decoded);\n    if (!params.get('nonce')) {\n      throw new Error('lopenling server login problem');\n    }\n    try {\n      let email = params.get('email');\n      let admin = params.get('admin');\n      let name = params.get('name');\n      let username = params.get('username');\n      let avatarUrl = params.get('avatar_url');\n      let external_id = params.get('external_id');\n      if (avatarUrl === null) {\n        let url = process.env.DISCOURSE_SITE + `/u/${username}.json`;\n        let result = await fetch(url);\n        let res = await result.json();\n        avatarUrl = ForumLink + res?.user?.avatar_template.replace('{size}', '30');\n      }\n\n      if (!email || !name || !username) {\n        throw new Error('discourse SSO returned error URL');\n      }\n      let userData = null;\n      let id: string;\n      let user = await isUserPresent(username);\n      if (!user) {\n        let isAdmin = admin === 'true' ? true : false;\n        userData = await createUserInDB(username, name, email, isAdmin, avatarUrl);\n        id = userData?.id;\n      } else {\n        id = user.id;\n      }\n      session.set('user', {\n        id,\n        email,\n        admin,\n        name,\n        username,\n        avatarUrl,\n        external_id,\n      });\n    } catch (e) {\n      session.flash('error', {\n        error: e,\n      });\n    }\n  }\n  let redirectUrl = session.data['success-redirect'] ? session.data['success-redirect'].redirectTo : '/';\n  return redirect(redirectUrl, {\n    headers: {\n      'set-cookie': await commitSession(session, { sameSite: 'lax' }),\n    },\n  });\n};\n\nexport let action: ActionFunction = async ({ request, context }) => {\n  const user = await getUserSession(request);\n  const body = await request.formData();\n  let { redirectTo, _action, ...values } = Object.fromEntries(body);\n  if (!redirectTo) {\n    throw new Error('no redirect in form');\n  }\n  if (_action === 'logout') {\n    return redirect(redirectTo, {\n      headers: {\n        'set-cookie': await destroyUserSession(request),\n      },\n    });\n  }\n  if (_action === 'login') {\n    if (!user) {\n      let requireSession = await login(\n        request,\n        (session: any) => {\n          return session;\n        },\n        redirectTo\n      );\n      return requireSession;\n    }\n    const session = await getSession(request.headers.get('Cookie'));\n    session.set('user', { ...user });\n\n    return redirect(redirectTo, {\n      headers: {\n        'set-cookie': await commitSession(session, { sameSite: 'lax' }),\n      },\n    });\n  }\n  return null;\n};\n", "import { ActionFunction } from '@remix-run/server-runtime';\nimport { createPost, deletePost } from '~/services/discourseApi';\nimport { getUserSession } from '~/services/session.server';\nimport {\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from '@remix-run/node';\nimport { uploadAudio } from '~/services/uploadAudio.server';\nimport type { UploadHandler } from '@remix-run/node';\nimport { createReply, findReply, isReplyPresent, updateIsAproved, updateLikeReply } from '~/model/reply';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const user = await getUserSession(request);\n  try {\n    if (request.method === 'DELETE') {\n      const formData = await request.formData();\n      const postId = formData.get('postId') as string;\n      await deletePost(postId, user.username);\n      return {\n        delete: 'success',\n      };\n    }\n    if (request.method === 'POST') {\n      const uploadHandler: UploadHandler = composeUploadHandlers(uploadAudio, createMemoryUploadHandler());\n      const formData = await parseMultipartFormData(request, uploadHandler);\n      let Obj = Object.fromEntries(formData);\n      const postString = Obj.postString as string;\n      const topicId = Obj.topicId as string;\n      let audioUrl = Obj.file as string | null;\n      if (audioUrl === undefined) audioUrl = null;\n      let create = await createPost(topicId, audioUrl, postString, user.username);\n      return {\n        posts: await create.json(),\n      };\n    }\n    if (request.method === 'PATCH') {\n      const formData = await request.formData();\n      const user = await getUserSession(request);\n      let Obj = Object.fromEntries(formData);\n      let action = Obj.action as string;\n      if (action === 'like') {\n        let post_id = Obj.post_id as string;\n        let id = Obj.id as string;\n        //check if user already like it\n        let replyExist = await isReplyPresent(id);\n        if (!replyExist) {\n          await createReply(id, post_id, user.id);\n        } else {\n          const alreadyLiked = await findReply(id, user.id);\n          await updateLikeReply(id, user.id, !alreadyLiked);\n        }\n        return { success: true };\n      }\n      if (action === 'approve') {\n        let replyId = Obj.id as string;\n        let isSolved = Obj.isSolved === 'false';\n        try {\n          await updateIsAproved(replyId, isSolved);\n        } catch (e) {\n          throw new Error('error on approving reply');\n        }\n        return null;\n      }\n    }\n  } catch (e) {\n    return {\n      post: e.message,\n    };\n  }\n};\n", "import { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\nimport { createThread, deleteDiscourseTopic, updateDiscoursePost } from '~/services/discourseApi';\nimport { getUserSession } from '~/services/session.server';\n\nimport {\n  createPost as createPostOnDB,\n  findPostByUserLiked,\n  updatePostContentandAudio,\n  updatePostLike,\n} from '~/model/post';\nimport { uploadAudio } from '~/services/uploadAudio.server';\nimport {\n  unstable_composeUploadHandlers as composeUploadHandlers,\n  unstable_createMemoryUploadHandler as createMemoryUploadHandler,\n  unstable_parseMultipartFormData as parseMultipartFormData,\n} from '@remix-run/node';\nimport type { UploadHandler } from '@remix-run/node';\nimport { db } from '~/services/db.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const uploadHandler: UploadHandler = composeUploadHandlers(uploadAudio, createMemoryUploadHandler());\n  const user = await getUserSession(request);\n  if (request.method === 'POST') {\n    const formData = await parseMultipartFormData(request, uploadHandler);\n    let Obj = Object.fromEntries(formData);\n    let DiscourseUrl = process.env.DISCOURSE_SITE;\n    let api = process.env.DISCOURSE_API_KEY;\n    let parent_category_id = process.env.DISCOURSE_QA_CATEGORY_ID;\n    if (!user) throw new Error('user not logged in');\n    if (!DiscourseUrl || !api || !parent_category_id) {\n      throw new Error('set a DISCOURSE_SITE/DISCOURSE_API_KEY in env');\n    }\n    let audioUrl = Obj.file as string;\n    let textId = parseInt(Obj.textId as string);\n    let pageId = Obj.pageId as string;\n    let order = Obj.order as string;\n    try {\n      const data = await createThread(\n        user.username,\n        Obj.topic as string,\n        Obj.selectionSegment as string,\n        Obj.body as string,\n        parent_category_id,\n        textId,\n        parseInt(order),\n        audioUrl,\n        Obj.threadId as string,\n      );\n      if (data['topic_id'] && user) {\n        const createPost = await createPostOnDB(\n          Obj.type as string,\n          data['avatar_template'],\n          data['topic_id'],\n          data['id'],\n          Obj.threadId as string,\n          textId,\n          pageId,\n          Obj.body as string,\n          user.id,\n          audioUrl,\n          Obj.selectionSegment as string,\n        );\n\n        return createPost;\n      }\n    } catch (error) {\n      console.error('Failed to create question:', error);\n      return { message: error };\n    }\n  }\n  if (request.method === 'DELETE') {\n    let formData = await request.formData();\n    let Obj = Object.fromEntries(formData);\n    let id = Obj.id as string;\n    let threadId = Obj.threadId as string;\n    let [res, deleted] = await db.$transaction([\n      db.post.delete({\n        where: {\n          id,\n        },\n      }),\n      db.annotations.deleteMany({\n        where: {\n          id: threadId,\n        },\n      }),\n    ]);\n    let deleteDiscourse = await deleteDiscourseTopic(user.username, res.topic_id);\n    return res;\n  }\n  if (request.method === 'PATCH') {\n    const formData = await parseMultipartFormData(request, uploadHandler);\n    let action = formData.get('action') as string;\n    if (action === 'like') {\n      let postId = formData.get('id') as string;\n      let userId = formData.get('userId') as string;\n      const likedUsers = await findPostByUserLiked(postId, userId);\n      try {\n        let res = await updatePostLike(postId, userId, likedUsers === null);\n\n        if (res.textId) {\n        }\n        return res.likedBy;\n      } catch (e) {\n        console.log(e);\n      }\n\n      return { success: true };\n    }\n    if (action === 'update') {\n      let newContent = formData.get('body') as string;\n      let postId = formData.get('postId') as string;\n      let audioUrl = formData.get('file') as string;\n      if (!audioUrl) {\n        audioUrl = formData.get('audioUrl') as string;\n      }\n\n      let res = await updatePostContentandAudio(postId, newContent, audioUrl);\n      if (res?.post_id) await updateDiscoursePost(res.post_id, newContent, audioUrl, user.username);\n      return res;\n    }\n  }\n  return null;\n};\n", "import { LoaderFunction, ActionFunction } from '@remix-run/server-runtime';\nimport { deleteText } from '~/model/text';\nimport { searchPages, updatePage } from '~/model/page';\nimport { updateAnnotations } from '~/model/annotation';\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const searchText = new URL(request.url).searchParams.get('search')?.trim();\n\n  if (searchText) {\n    let obj = await searchPages(searchText);\n    let textList = Object.keys(obj).map((key) => ({\n      name: obj[key].textName,\n      results: obj[key].results,\n      order: obj[key].order,\n      total: obj[key].total,\n      extra: obj[key].extra,\n      textId: obj[key].textId,\n    }));\n    return textList;\n  }\n  return [];\n};\n\nexport let action: ActionFunction = async ({ request }) => {\n  const data = await request.formData();\n\n  if (request.method === 'DELETE') {\n    const textId = data.get('textId') as string;\n    const res = await deleteText(textId);\n    return res;\n  }\n  if (request.method === 'POST') {\n    const newContent = data.get('content') as string;\n    const annotations = data.get('annotations') as string;\n    const pageId = data.get('pageId') as string;\n    try {\n      const page_return = await updatePage(pageId, newContent);\n      const annotation_return = await updateAnnotations(pageId, annotations);\n      return { page_return, annotation_return };\n    } catch (e) {\n      return false;\n    }\n  }\n};\n", "import { Link, Form, useSearchParams, Await } from '@remix-run/react';\nimport type { LoaderFunction, MetaArgs } from '@remix-run/node';\nimport { Button, Avatar, TextInput } from 'flowbite-react';\nimport FooterContainer from '~/component/Layout/Footer';\nimport { defer } from '@remix-run/node';\nimport { searchPages } from '~/model/page';\nimport { useLocation, useLoaderData, useNavigation } from '@remix-run/react';\nimport useLitteraTranslation from '~/locales/useLitteraTranslations';\nimport { motion } from 'framer-motion';\nimport Header from '~/component/Layout/Header';\nimport { useState, useEffect, ChangeEvent, Suspense } from 'react';\nimport { Skeleton } from '~/component/UI';\nimport { HEADER_HEIGHT } from '~/constants';\nimport { findLatestText } from '~/model/text';\nimport groupData from '~/lib/filterVersionFromText';\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const searchText = new URL(request.url).searchParams.get('search')?.trim();\n  const { texts } = await findLatestText();\n  if (!searchText) return { textList: null, search: null, latestTexts: { list: texts } };\n  return defer({ textList: await searchPages(searchText), search: searchText, latestTexts: null });\n};\n\nexport function headers({ loaderHeaders }: { loaderHeaders: Headers }) {\n  return {\n    'Cache-Control': loaderHeaders.get('Cache-Control'),\n  };\n}\n\nexport function meta({ data }: MetaArgs) {\n  let title = data?.search ? `${data?.search} - Lopenling Search` : 'Lopenling App';\n  return [\n    {\n      title,\n    },\n    {\n      name: 'description',\n      content: 'annotation of text and discussion on budhist text',\n    },\n    {\n      name: 'viewport',\n      content: 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no',\n    },\n  ];\n}\n\nexport default function Index() {\n  const data = useLoaderData<typeof loader>();\n  const navigation = useNavigation();\n  const [params, setSearchParams] = useSearchParams();\n  const [searchInput, setSearchInput] = useState(params.get('search') ?? '');\n  const translation = useLitteraTranslation();\n  useEffect(() => {\n    if (!params.get('search')) setSearchInput('');\n  }, [params.get('search')]);\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value === '') {\n      setSearchParams((p) => {\n        p.delete('search');\n        return p;\n      });\n    }\n    setSearchInput(event.target.value);\n  };\n\n  const isLoading = navigation.formData?.get('search') && navigation.state === 'loading';\n\n  return (\n    <MainLayout>\n      <SearchBar searchInput={searchInput} onInputChange={handleInputChange} translation={translation} />\n      <ContentArea latestTexts={data.latestTexts} isLoading={!!isLoading} />\n    </MainLayout>\n  );\n}\n\nfunction MainLayout({ children }: any) {\n  return (\n    <motion.div\n      key={useLocation().pathname}\n      initial={{ x: '5%', opacity: 0 }}\n      animate={{ x: '0%', opacity: 1 }}\n      exit={{ x: '5%', opacity: 0 }}\n      style={{ position: 'relative', minHeight: '100vh' }}\n    >\n      <Header editor={null} />\n      {children}\n      <FooterContainer />\n    </motion.div>\n  );\n}\n\nfunction SearchBar({\n  searchInput,\n  onInputChange,\n  translation,\n}: {\n  searchInput: string | null;\n  onInputChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  translation: any;\n}) {\n  return (\n    <div className=\"px-4 md:px-0 mx-auto max-w-2xl\" style={{ paddingTop: HEADER_HEIGHT + 40 }}>\n      <Form method=\"GET\" className=\"mb-3 w-full max-w-2xl\">\n        <div className=\"relative flex w-full space-x-3\">\n          <TextInput\n            autoComplete=\"off\"\n            name=\"search\"\n            placeholder={translation.searchText}\n            value={searchInput}\n            id=\"inputText\"\n            onChange={onInputChange}\n            type=\"search\"\n            className=\"flex-1 font-monlam text-gray-500 pr-3\"\n          />\n          <Button type=\"submit\" className=\"h-full font-monlam bg-green-400 text-white\">\n            {translation.searchText}\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\ntype Text = {\n  id: string;\n  list: any[];\n  name: string;\n};\n\nfunction ContentArea({ latestTexts, isLoading }: { latestTexts: Text; isLoading: boolean }) {\n  let { textList } = useLoaderData<typeof loader>();\n  return (\n    <div className=\"flex w-full px-4 md:px-0 mx-auto max-w-2xl flex-col gap-3 items-center justify-start py-10\">\n      {isLoading && <Skeleton height={70} number={3} />}\n      {latestTexts && !isLoading && latestTexts.list.map((text) => <TextItem key={text.id} text={text} />)}\n      {!isLoading && (\n        <Suspense fallback={<div>loading...</div>}>\n          <Await resolve={textList}>\n            {(lists) => {\n              if (!lists) return null;\n              if (lists?.length === 0) return <NoResultMessage />;\n              return <ListResults lists={lists} />;\n            }}\n          </Await>\n        </Suspense>\n      )}\n    </div>\n  );\n}\n\nfunction TextItem({ text }: { text: any }) {\n  const { groupedData, isVersionAvailable } = groupData(text.Page);\n  const textItemUrl = `/text/${text.id}/page/1/`;\n\n  return (\n    <div className=\"flex rounded-lg border hover:bg-gray-50 border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col w-full p-0 \">\n      <TextLink url={textItemUrl} name={text.name} />\n      {isVersionAvailable && <VersionLinks groupedData={groupedData} baseUrl={textItemUrl} />}\n    </div>\n  );\n}\n\nfunction TextLink({ url, name }: { url: string; name: string }) {\n  return (\n    <div className=\"font-monlam w-full  pb-2 pt-3 px-2 transition-all duration-75\">\n      <Link to={url} prefetch=\"intent\">\n        {name}\n      </Link>\n    </div>\n  );\n}\n\nfunction VersionLinks({ groupedData, baseUrl }: { groupedData: any; baseUrl: string }) {\n  const translation = useLitteraTranslation();\n\n  return (\n    <div className=\"px-4 py-1 font-light block\">\n      {Object.keys(groupedData).map((key) => (\n        <Link\n          key={key}\n          prefetch=\"intent\"\n          to={`${baseUrl}?version=${key}`}\n          className=\"cursor-pointer rounded-md mx-1 uppercase pb-2 bg-yellow-300 px-2 font-bold hover:bg-yellow-200 text-black\"\n        >\n          {translation[key]}\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nfunction NoResultMessage() {\n  return (\n    <div className=\"text-xl font-extrabold capitalize text-gray-300 font-Inter leading-[150%]\">No result found</div>\n  );\n}\n\nfunction ListResults({ lists }: { lists: any[] }) {\n  if (!lists || lists.length === 0) return <NoResultMessage />;\n  return (\n    <div className=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col w-full p-0 \">\n      {lists.map((list, index) => (\n        <ResultLink key={`id${index}`} list={list} />\n      ))}\n    </div>\n  );\n}\n\nfunction ResultLink({ list }: { list: any }) {\n  const { textId, results } = list;\n  const result = results[0];\n  return (\n    <Link\n      to={`/text/${textId}/page/1`}\n      className=\"font-monlam w-full hover:bg-gray-50 pb-2 pt-3 px-2 transition-all duration-75\"\n      prefetch=\"intent\"\n    >\n      <div className=\"flex gap-4 items-center\">\n        <div>\n          <Avatar img={result.author.avatarUrl} title={result.author.username} />\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"text-[12px] md:text-[14px]  leading-normal\">{result.name}</div>\n          <div className=\"flex justify-between mt-2\">\n            {result && result[1]}\n            <div className=\"text-gray-400 text-[10px]\">{result.total} matches</div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n", "import { AiFillGithub, AiFillTwitterCircle } from 'react-icons/ai';\nimport PartnerSection from './Partner';\nexport default function FooterContainer() {\n  let items = [\n    {\n      logo: 'https://openpecha.org/logo.png',\n      link: 'https://openpecha.org/',\n    },\n    {\n      logo: AiFillTwitterCircle,\n      link: 'https://twitter.com/OpenPecha',\n    },\n    {\n      logo: AiFillGithub,\n      link: 'https://github.com/OpenPecha',\n    },\n  ];\n\n  return (\n    <footer className=\"absolute bottom-0 w-full  \">\n      <PartnerSection />\n\n      <div className=\"mx-auto w-full \">\n        <div className=\" px-4 py-6 dark:bg-gray-700 md:flex md:items-center md:justify-between\">\n          <span className=\"text-sm text-gray-500 dark:text-gray-300 sm:text-center\"></span>\n          <div className=\"mt-4 flex space-x-6 sm:justify-center md:mt-0\">\n            {items.map((item, index) => {\n              return (\n                <a\n                  key={index}\n                  href={item.link}\n                  className=\"text-gray-400 hover:text-blue-300 dark:hover:text-white\"\n                  target=\"_blank\"\n                >\n                  {typeof item.logo === 'string' ? (\n                    <img src={item.logo} className=\"h-4 w-4\" alt=\"openpecha\" />\n                  ) : (\n                    <item.logo />\n                  )}\n                  <span className=\"sr-only\">page links</span>\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n", "import indrajalaLogo from '~/assets/indrajalaLogo.png';\n\nconst PartnerSection = () => {\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"flex items-center justify-center \">\n        <a href={'https://indrajala.org.tw/'} target=\"_blank\" rel=\"noreferrer\">\n          <img\n            src={indrajalaLogo}\n            alt=\"Partner 1\"\n            className=\"h-16 rounded-lg border-2 border-gray-200 bg-gray-700 p-2 shadow-md\"\n          />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default PartnerSection;\n", "function groupData(data) {\n  let groupedData = {};\n  let isVersionAvailable = false;\n  data.forEach((item) => {\n    if (item.version) {\n      if (!groupedData[item.version]) {\n        groupedData[item.version] = [];\n      }\n      groupedData[item.version].push(item);\n      isVersionAvailable = true;\n    } else {\n      groupedData = item;\n      isVersionAvailable = false;\n    }\n  });\n \n  return {\n    groupedData,\n    isVersionAvailable,\n  };\n}\n\nexport default groupData;", "import { LoaderArgs } from '@remix-run/node';\nimport { Link, useFetcher, useLoaderData } from '@remix-run/react';\nimport Header from '~/component/Layout/Header';\nimport { useState } from 'react';\nimport { findAllTextWithDetail } from '~/model/text';\nimport { Avatar } from '~/component/UI';\nimport { getUserSession } from '~/services/session.server';\nimport { TextType } from '~/model/type';\nimport groupData from '~/lib/filterVersionFromText';\nexport const loader = async ({ request }: LoaderArgs) => {\n  let textList = await findAllTextWithDetail();\n  let user = await getUserSession(request);\n  return {\n    textList,\n    isAdmin: user?.admin === 'true',\n  };\n};\n\nexport default function List() {\n  const fetcher = useFetcher();\n  const { textList, isAdmin } = useLoaderData();\n  const [currentPage, setCurrentPage] = useState(1);\n  const textsPerPage = 20;\n  const indexOfLastText = currentPage * textsPerPage;\n  const indexOfFirstText = indexOfLastText - textsPerPage;\n  const currentTexts = textList.slice(indexOfFirstText, indexOfLastText);\n  const totalPages = Math.ceil(textList.length / textsPerPage);\n  const goToPage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const deleteText = (textId: number) => {\n    let i = confirm('Are you sure you want to delete this text?');\n\n    if (i) {\n      fetcher.submit(\n        { textId: textId.toString() },\n        {\n          method: 'DELETE',\n          action: `/api/text`,\n        },\n      );\n    } else {\n      console.log('cancelled');\n    }\n  };\n\n  return (\n    <div>\n      <Header editor={null} />\n      <div className=\"h-20\" />\n\n      <table className=\"mx-auto w-full max-w-4xl text-left text-sm text-gray-500 dark:text-gray-400\">\n        <thead className=\"border-b-2 border-gray-100 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400\">\n          <tr>\n            <th scope=\"col\" className=\"px-4 py-4\">\n              Title\n            </th>\n            <th scope=\"col\" className=\"px-4 py-4\">\n              Total page\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentTexts.map((text: TextType) => {\n            let { groupedData, isVersionAvailable } = groupData(text.Page);\n            let url = `/text/${text.id}/page/1`;\n\n            return (\n              <tr\n                key={text.id}\n                className=\"w-full border-b hover:text-gray-600 dark:border-gray-700 dark:hover:text-white\"\n              >\n                <th scope=\"col\" className=\"flex items-center gap-1 px-4 py-4\" style={{ fontFamily: 'monlam' }}>\n                  <Avatar\n                    title={text?.author.name}\n                    alt={text?.author.name}\n                    img={text?.author.avatarUrl}\n                    rounded={true}\n                    size=\"sm\"\n                  />\n                  <Link to={url}>{text.name}</Link>\n                </th>\n                <td scope=\"col\" className=\" px-4 py-4\">\n                  {!isVersionAvailable ? (\n                    <div className=\"flex gap-2\">\n                      <div>{text.Page.length}</div>\n                      {isAdmin && (\n                        <div onClick={() => deleteText(text.id)} className=\"cursor-pointer\">\n                          delete\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"flex gap-2\">\n                      {Object.keys(groupedData).map((key) => {\n                        let urlversion = url + '?version=' + key;\n                        return (\n                          <Link\n                            key={key}\n                            to={urlversion}\n                            className=\"cursor-pointer rounded-md bg-yellow-300 px-2 capitalize text-black\"\n                          >\n                            {key}\n                          </Link>\n                        );\n                      })}\n                    </div>\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"mt-8 flex items-center justify-center\">\n        <button\n          onClick={() => goToPage(currentPage - 1)}\n          className={`${currentPage === 1 && 'hidden'} mr-4 rounded-lg bg-gray-200 px-4 py-2 text-gray-700`}\n        >\n          Previous\n        </button>\n        {Array.from({ length: totalPages }, (_, index) => (\n          <button\n            key={index + 1}\n            onClick={() => goToPage(index + 1)}\n            className={`px-4 py-2 ${currentPage === 1 && 'hidden'} ${\n              index + 1 === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'\n            } mx-2 rounded-lg`}\n          >\n            {index + 1}\n          </button>\n        ))}\n        <button\n          onClick={() => goToPage(currentPage + 1)}\n          className={` ${currentPage === totalPages && 'hidden'} ml-4 rounded-lg bg-gray-200 px-4 py-2 text-gray-700 `}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-ZXW2UZHE.js','imports':['/build/_shared/chunk-OAPPX4FA.js','/build/_shared/chunk-7PHB3BFD.js','/build/_shared/chunk-FJABRRYW.js','/build/_shared/chunk-BSIYBNBA.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-WEAPBHQG.js','/build/_shared/chunk-CJ4MY3PQ.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-QIDEJTZR.js','imports':['/build/_shared/chunk-ZD3YNBOG.js','/build/_shared/chunk-FZ2UKIPG.js','/build/_shared/chunk-3JRTTPUJ.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-5QEZBVXH.js','imports':['/build/_shared/chunk-IEYHSG56.js','/build/_shared/chunk-NBEH4DGX.js','/build/_shared/chunk-PATV27BW.js','/build/_shared/chunk-2QJY4JOV.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.post':{'id':'routes/api.post','parentId':'root','path':'api/post','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.post-Z72R5DYQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.reply':{'id':'routes/api.reply','parentId':'root','path':'api/reply','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.reply-LEJRNHKE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.reply.$id':{'id':'routes/api.reply.$id','parentId':'routes/api.reply','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.reply.$id-AUQNHNDM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.suggestion':{'id':'routes/api.suggestion','parentId':'root','path':'api/suggestion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.suggestion-4ERNMFON.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.suggestion.comment':{'id':'routes/api.suggestion.comment','parentId':'routes/api.suggestion','path':'comment','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.suggestion.comment-RWF7QWFX.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.suggestion.like':{'id':'routes/api.suggestion.like','parentId':'routes/api.suggestion','path':'like','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.suggestion.like-TNRF7ISQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.text':{'id':'routes/api.text','parentId':'root','path':'api/text','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.text-3IYJTLNB.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.translation':{'id':'routes/api.translation','parentId':'root','path':'api/translation','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.translation-SU3MKLLC.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.user.preference.theme':{'id':'routes/api.user.preference.theme','parentId':'root','path':'api/user/preference/theme','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.user.preference.theme-4FHSOV23.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.user.search':{'id':'routes/api.user.search','parentId':'root','path':'api/user/search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.user.search-REEVYCCK.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth_.login':{'id':'routes/auth_.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth_.login-QS7HGYN4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/list':{'id':'routes/list','parentId':'root','path':'list','index':undefined,'caseSensitive':undefined,'module':'/build/routes/list-Q4JZGY7V.js','imports':['/build/_shared/chunk-IEYHSG56.js','/build/_shared/chunk-HQVM5TCW.js','/build/_shared/chunk-PATV27BW.js','/build/_shared/chunk-2QJY4JOV.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/text.$textId.page.$pageId':{'id':'routes/text.$textId.page.$pageId','parentId':'root','path':'text/:textId/page/:pageId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/text.$textId.page.$pageId-7CTRBDOF.js','imports':['/build/_shared/chunk-UKW4MNFU.js','/build/_shared/chunk-HQVM5TCW.js','/build/_shared/chunk-NBEH4DGX.js','/build/_shared/chunk-PATV27BW.js','/build/_shared/chunk-2QJY4JOV.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/text_.$textId.page.$pageId.translation.$translationId':{'id':'routes/text_.$textId.page.$pageId.translation.$translationId','parentId':'root','path':'text/:textId/page/:pageId/translation/:translationId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/text_.$textId.page.$pageId.translation.$translationId-BSL7BU5B.js','imports':['/build/_shared/chunk-UKW4MNFU.js','/build/_shared/chunk-HQVM5TCW.js','/build/_shared/chunk-NBEH4DGX.js','/build/_shared/chunk-PATV27BW.js','/build/_shared/chunk-2QJY4JOV.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'2c4ccd4f','hmr':{'runtime':'/build/_shared/chunk-BSIYBNBA.js','timestamp':1707217119924},'url':'/build/manifest-2C4CCD4F.js'};", "\nimport * as entryServer from \"/Users/tenzintamdin/Developer/Work-Dev/Editor/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/text_.$textId.page.$pageId.translation.$translationId.tsx\";\nimport * as route2 from \"./routes/api.user.preference.theme.tsx\";\nimport * as route3 from \"./routes/text.$textId.page.$pageId.tsx\";\nimport * as route4 from \"./routes/api.suggestion.comment.tsx\";\nimport * as route5 from \"./routes/api.suggestion.like.tsx\";\nimport * as route6 from \"./routes/api.translation.tsx\";\nimport * as route7 from \"./routes/api.user.search.tsx\";\nimport * as route8 from \"./routes/api.suggestion.tsx\";\nimport * as route9 from \"./routes/api.reply.$id.tsx\";\nimport * as route10 from \"./routes/auth_.login.tsx\";\nimport * as route11 from \"./routes/api.reply.tsx\";\nimport * as route12 from \"./routes/api.post.tsx\";\nimport * as route13 from \"./routes/api.text.tsx\";\nimport * as route14 from \"./routes/_index.tsx\";\nimport * as route15 from \"./routes/list.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/text_.$textId.page.$pageId.translation.$translationId\": {\n      id: \"routes/text_.$textId.page.$pageId.translation.$translationId\",\n      parentId: \"root\",\n      path: \"text/:textId/page/:pageId/translation/:translationId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/api.user.preference.theme\": {\n      id: \"routes/api.user.preference.theme\",\n      parentId: \"root\",\n      path: \"api/user/preference/theme\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/text.$textId.page.$pageId\": {\n      id: \"routes/text.$textId.page.$pageId\",\n      parentId: \"root\",\n      path: \"text/:textId/page/:pageId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/api.suggestion.comment\": {\n      id: \"routes/api.suggestion.comment\",\n      parentId: \"routes/api.suggestion\",\n      path: \"comment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/api.suggestion.like\": {\n      id: \"routes/api.suggestion.like\",\n      parentId: \"routes/api.suggestion\",\n      path: \"like\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/api.translation\": {\n      id: \"routes/api.translation\",\n      parentId: \"root\",\n      path: \"api/translation\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/api.user.search\": {\n      id: \"routes/api.user.search\",\n      parentId: \"root\",\n      path: \"api/user/search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/api.suggestion\": {\n      id: \"routes/api.suggestion\",\n      parentId: \"root\",\n      path: \"api/suggestion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/api.reply.$id\": {\n      id: \"routes/api.reply.$id\",\n      parentId: \"routes/api.reply\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/auth_.login\": {\n      id: \"routes/auth_.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/api.reply\": {\n      id: \"routes/api.reply\",\n      parentId: \"root\",\n      path: \"api/reply\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/api.post\": {\n      id: \"routes/api.post\",\n      parentId: \"root\",\n      path: \"api/post\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/api.text\": {\n      id: \"routes/api.text\",\n      parentId: \"root\",\n      path: \"api/text\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/list\": {\n      id: \"routes/list\",\n      parentId: \"root\",\n      path: \"list\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    }\n  };"],
  "mappings": "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",
  "names": ["module", "module", "module", "module", "module", "isbot", "import_react", "import_jsx_dev_runtime", "import_node", "headers", "import_react", "import_nprogress", "import_jsx_dev_runtime", "state", "NProgress", "loader", "import_node", "import_react", "import_react", "import_react_littera", "import_react", "import_react_littera", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "m", "import_fa", "import_react", "import_react", "import_recoil", "import_recoil", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_fa", "import_flowbite_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_fa", "import_io", "import_md", "import_ci", "import_jsx_dev_runtime", "replace", "attributes", "import_core", "import_prosemirror_state", "attributes", "import_core", "import_prosemirror_state", "import_react", "import_recoil", "import_react", "import_react", "Document", "Heading", "Paragraph", "Text", "Bold", "FontFamily", "TextStyle", "HardBreak", "Highlight", "History", "OrderedList", "ListItem", "TextAlign", "editor", "import_ai", "import_flowbite_react", "import_io", "import_react", "import_react_hot_toast", "import_ci", "import_react", "import_fa", "import_flowbite_react", "import_react_hot_toast", "toast", "import_jsx_dev_runtime", "attributes", "import_jsx_dev_runtime", "loader", "toast", "copy", "action", "action", "loader", "import_node", "import_react", "import_react", "import_recoil", "import_react", "import_fa", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Image", "import_react", "import_flowbite_react", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "editor", "selection", "import_jsx_dev_runtime", "Image", "editor", "text", "annotations", "Header", "import_react", "import_ai", "import_io", "import_jsx_dev_runtime", "import_react", "import_react", "import_ai", "import_io", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "index", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "SearchString", "import_react", "import_flowbite_react", "import_ai", "import_react", "import_react_hot_toast", "import_react", "import_react", "import_flowbite_react", "import_ai", "import_jsx_dev_runtime", "toast", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "replies", "Reply", "import_react", "import_react", "import_jsx_dev_runtime", "Document", "Paragraph", "Text", "Bold", "FontFamily", "TextStyle", "Italic", "Underline", "Placeholder", "HardBreak", "Highlight", "editor", "import_flowbite_react", "import_jsx_dev_runtime", "uuidv4", "AudioRecorder", "import_react", "import_recoil", "import_uuid", "import_flowbite_react", "import_jsx_dev_runtime", "uuidv4", "AudioRecorder", "import_flowbite_react", "React", "import_react", "import_ai", "import_jsx_dev_runtime", "id", "deletePost", "import_recoil", "import_react", "import_recoil", "import_flowbite_react", "import_jsx_dev_runtime", "Datepicker", "import_jsx_dev_runtime", "import_react", "import_recoil", "import_jsx_dev_runtime", "createPost", "import_react", "import_react", "import_recoil", "import_fa", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Post", "Post_default", "import_react", "import_react_detect_click_outside", "import_uuid", "import_react", "import_flowbite_react", "import_jsx_dev_runtime", "import_react", "import_flowbite_react", "import_react", "import_jsx_dev_runtime", "Suggestion", "deleteSuggestion", "uuidv4", "AudioRecorder", "import_react", "import_jsx_dev_runtime", "Suggestion", "import_react", "import_uuid", "import_flowbite_react", "import_jsx_dev_runtime", "uuidv4", "Suggestion", "AudioRecorder", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Suggestion", "import_react", "import_jsx_dev_runtime", "Post_default", "createPost", "import_jsx_dev_runtime", "loader", "action", "import_node", "import_node", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "action", "import_server_runtime", "action", "action", "action", "loader", "loader", "action", "loader", "import_react_router", "import_node", "loader", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "loader", "import_react_router", "loader", "action", "loader", "import_server_runtime", "loader", "url", "action", "session", "action", "import_node", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "user", "action", "import_node", "action", "composeUploadHandlers", "createMemoryUploadHandler", "parseMultipartFormData", "createPost", "action", "loader", "loader", "action", "loader", "meta", "import_react", "import_flowbite_react", "import_ai", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_node", "import_react", "import_framer_motion", "import_react", "import_jsx_dev_runtime", "loader", "meta", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "deleteText"]
}
